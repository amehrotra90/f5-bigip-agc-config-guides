[
        {
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "uri": "https://$domainName$.achievers.com/saml/module.php/saml/sp/saml2-acs.php/pfa-sp",
                        "index": 0,
                        "isDefault": true
                    }
                ],
                "isAuthnRequestSigned": true,
                "singleLogoutUri": "https://$domainName$.achievers.com/saml/module.php/saml/sp/saml2-logout.php/pfa-sp",
                "entityId": "$domainName$.achievers.com"
            },
            "ssoConfig": {
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValue": "%{session.ad.last.attr.sAMAccountName}",
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.sAMAccountName}"
                        ],
                        "tmName": "employee ID",
                        "multiValueTypes": [
                            "username"
                        ]
                    }
                ],
                "subjectType": "transient",
                "subjectValueType": "username"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "domainName",
                        "displayLabel": "Domain Name",
                        "helpText": "Provide your company domain name. If the SSO URL is https://f5.achievers.com, enter f5",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.singleLogoutUri",
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateName": "Achievers",
            "templateLabel": "Acheivers.com",
            "image": "img/appIcons/achievers.jpg",
            "description": "Federation relationship with Achievers.com"
        },
        {
            "spConnector": {
                "entityId": "$entityId$",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": ""
                    }
                ],
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false
            },
            "templateLabel": "Adobe Enterprise",
            "templateName": "Adobe_Enterprise",
            "description": "Federation relationship with Adobe Enterprise",
            "image": "img/appIcons/AdobeEnterprise.jpg",
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectType": "unspecified",
                "subjectValueType": "mail",
                "attributes": [
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "tmName": "LastName",
                        "nameFormat": "unspecified",
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "tmName": "FirstName",
                        "nameFormat": "unspecified",
                        "multiValues": [
                            "%{session.ad.last.attr.givenname}"
                        ],
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "tmName": "Email",
                        "nameFormat": "unspecified",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "samlProfiles": [
                    "web-browser-sso"
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "entityId",
                        "displayLabel": "Entity ID",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "url-validator"
                            }
                        ],
                        "helpText": "Provide Adobe's EntityID URL from the metadata file or Adobe Administrator.",
                        "targetProperties": [
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "documentLink": "https://helpx.adobe.com/enterprise/kb/Configure_Microsoft_Azure_for_use_with_Adobe_SSO.html"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "Email",
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "NameID",
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "tmName": "givenName",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "tmName": "SN",
                        "multiValueTypes": [
                            "lastname"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectValueType": "mail"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$hostname$.na1.echosign.com/public/samlConsume"
                    }
                ],
                "entityId": "http://echosign.com",
                "isAuthnRequestSigned": false,
                "singleLogoutUri": "https://$hostname$.na1.echosign.com/public/samlConsumeLogout",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "hostname",
                        "displayLabel": "Hostname",
                        "helpText": "Provide the hostname configured in Adobe Sign. You can obtain this from the ACS URL. For eg - If ACS URL is https://company.na1.echosign.com/public/samlConsume then the hostname is company.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.singleLogoutUri"
                        ]
                    }
                ]
            },
            "templateName": "Adobe Sign",
            "templateLabel": "Adobe Sign (formerly Echosign)",
            "image": "img/appIcons/adobesign.jpg",
            "description": "Federation relationship with Adobe Sign",
            "documentLink": "https://helpx.adobe.com/sign/help/SAML_Configuration.html#10"
        },
        {
            "image": "img/appIcons/adp.jpg",
            "description": "Federation relationship with ADP",
            "spConnector": {
                "entityId": "https://fed.adp.com",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://fed.adp.com/affwebservices/public/saml2assertionconsumer"
                    }
                ],
                "relayState": "",
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false
            },
            "templateLabel": "ADP",
            "templateName": "ADP",
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.userPrincipalName}",
                "attributes": [
                    {
                        "tmName": "PersonImmutableID",
                        "multiValues": [
                            "$personImmutableID$"
                        ],
                        "multiValueTypes": [
                            "custom"
                        ]
                    }
                ],
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectType": "unspecified",
                "subjectValueType": "username"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "personImmutableID",
                        "displayLabel": "Person Immutable ID",
                        "type": "inputText",
                        "helpText": "Provide the session variable which will map to the personimmutableID attribute. This attribute is sent to ADP in the assertion.",
                        "targetProperties": [
                            "ssoConfig.attributes[0].multiValues[0]"
                        ]
                    }
                ]
            },
            "documentLink": "n/a"
        },
        {
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "uri": "https://$subDomain$.datatap.adverity.com/complete/saml/",
                        "index": 0,
                        "isDefault": true
                    }
                ],
                "wantResponseSigned": true,
                "entityId": "https://$subDomain$.datatap.adverity.com/saml/metadata",
                "wantAssertionSigned": false,
                "relayState": "https://$subDomain$.datatap.adverity.com/login/saml/?idp=$companyId$"
            },
            "ssoConfig": {
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.lastname}"
                        ],
                        "tmName": "lastname",
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "tmName": "firstname",
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "tmName": "email",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Provide the sub domain. For eg - If the SSO URL is https://company.datatap.adverity.com/complete/saml/, then the sub domain is company.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.entityId",
                            "spConnector.relayState"
                        ]
                    },
                    {
                        "name": "companyId",
                        "displayLabel": "Company Id",
                        "helpText": "Provide the company ID from the relay state. For eg, if the relay state is https://company.datatap.adverity.com/login/saml/?idp=abcd, then the company id is abcd.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.relayState"
                        ]
                    }
                ]
            },
            "templateName": "Adverity",
            "templateLabel": "Adverity",
            "image": "img/appIcons/adverity.jpg",
            "description": "Federation relationship with Adverity"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "emailAddress",
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectType": "unspecified",
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectValueType": "mail"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://idmanager.aerohive.com/idmanager/register/saml/callback/$accountID$"
                    }
                ],
                "entityId": "https://idmanager.aerohive.com",
                "isAuthnRequestSigned": false,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "accountID",
                        "displayLabel": "Account ID",
                        "helpText": "Provide the account ID from the callback URL. For eg, if the callback URL is https://idmanager.aerohive.com/idmanager/register/saml/callback/123456, then the account id is 123456",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "templateName": "Aerohive IDManager",
            "templateLabel": "Aerohive IDManager",
            "image": "img/appIcons/AeroHive.jpg",
            "description": "Federation relationship with Aerohive"
        },
        {
            "image": "img/appIcons/agari.jpg",
            "description": "Federation relationship with Agari",
            "spConnector": {
                "entityId": "my.agari.com",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://my.agari.com/auth/saml/callback"
                    }
                ],
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false
            },
            "templateLabel": "Agari",
            "templateName": "Agari",
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.mail}",
                "attributes": [],
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectType": "unspecified",
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "documentLink": "n/a"
        },
        {
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "isDefault": true,
                        "index": 0,
                        "uri": "https://$subDomain$.login.go.akamai-access.com/saml/sp/response"
                    }
                ],
                "entityId": "https://$subDomain$.login.go.akamai-access.com/saml/sp/response"
            },
            "ssoConfig": {
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValue": "%{session.logon.last.mail}",
                "attributes": [
                    {
                        "tmName": "MemberOf",
                        "multiValues": [
                            "%{session.ad.last.attr.memberOf}"
                        ],
                        "multiValueTypes": [
                            "department"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.employeeID}"
                        ],
                        "tmName": "EmployeeID",
                        "multiValueTypes": [
                            "username"
                        ]
                    },
                    {
                        "tmName": "UserID",
                        "multiValues": [
                            "%{session.ad.last.attr.sAMAccountName}"
                        ],
                        "multiValueTypes": [
                            "username"
                        ]
                    },
                    {
                        "tmName": "FullName",
                        "multiValues": [
                            "%{session.ad.last.attr.displayName}"
                        ],
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "tmName": "Email",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Company Sub Domain",
                        "helpText": "Provide the Sub Domain. For eg if the SSO URL is https://company.login.go.akamai-access.com/saml/sp/response, the Sub Domain is company.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "templateName": "Akamai Enterprise Access",
            "templateLabel": "Akamai Enterprise Access",
            "image": "img/appIcons/akamai.jpg",
            "description": "Federation relationship with Akamai Enterprise Access"
        },
        {
            "spConnector": {
                "entityId": "luna-sp.com",
                "assertionConsumerServices": [
                    {
                        "uri": "https://$subDomain$.luna-sp.com/sso/endpoint/postResponse",
                        "index": 0,
                        "isDefault": true
                    }
                ],
                "singleLogoutUri": "https://$subDomain$.luna-sp.com/sso/endpoint/logout"
            },
            "ssoConfig": {
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "userid",
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Company Sub Somain",
                        "helpText": "Provide your company sub domain. For eg if your SSO URL is https://company.luna-sp.com/sso/endpoint/postResponse then sub domain is company.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.singleLogoutUri"
                        ]
                    }
                ]
            },
            "templateName": "Akamai Luna Control Center",
            "templateLabel": "Akamai Luna Control Center",
            "image": "img/appIcons/akamai.jpg",
            "description": "Federation relationship with Akamai Luna Control Center"
        },
        {
            "image": "img/appIcons/allocadia.jpg",
            "description": "Federation relationship with Allocadia",
            "spConnector": {
                "entityId": "com:allocadia:vancouver:bc:canada:$subDomain$",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$subDomain$.allocadia.com/allocadia/saml/SSO"
                    }
                ],
                "isAuthnRequestSigned": true,
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false
            },
            "templateLabel": "Allocadia",
            "templateName": "Allocadia",
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.mail}",
                "attributes": [
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "tmName": "email",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "tmName": "firstname",
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "tmName": "lastname",
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "tmName": "title",
                        "multiValues": [
                            "%{session.ad.last.attr.title}"
                        ],
                        "multiValueTypes": [
                            "department"
                        ]
                    }
                ],
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectType": "unspecified",
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "type": "inputText",
                        "helpText": "Provide the sub domain name from the SSO URL. For eg - If the URL is https://company.allocadia.com/allocadia/saml/SSO, then the sub domain is company.",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "documentLink": "n/a"
        },
        {
            "spConnector": {
                "relayState": "mdi/html/desktop/desktop.jsp",
                "entityId": "$subDomain$.amberroad.com",
                "isAuthnRequestSigned": true,
                "assertionConsumerServices": [
                    {
                        "isDefault": true,
                        "index": 0,
                        "uri": "https://$subDomain$.amberroad.com/gtm/ACSServlet"
                    }
                ],
                "singleLogoutUri": "https://$subDomain$.amberroad.com/gtm/SloCallbackServlet"
            },
            "ssoConfig": {
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.sAMAccountname}"
                        ],
                        "tmName": "userID",
                        "multiValueTypes": [
                            "username"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "tmName": "LastName",
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "tmName": "FirstName",
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "tmName": "Email",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Provide the sub domain from SSO URL. For eg - If your SSO URL is https://company.amberroad.com/gtm/ACSServlet, then the sub domain is company",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.singleLogoutUri",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "templateName": "Amberroad",
            "templateLabel": "Amberroad",
            "image": "img/appIcons/amberroad.jpg",
            "description": "Federation relationship with Amberroad"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "tmName": "lastName",
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "tmName": "firstName",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "email",
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectValueType": "mail"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$subDomain$.saas.appdynamics.com/controller/saml-auth?accountName=$subDomain$"
                    }
                ],
                "entityId": "https://$subDomain$.saas.appdynamics.com/controller",
                "isAuthnRequestSigned": false,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Provide the sub domain. For e.g. if the Entity ID URL is https://company.saas.appdynamics.com/controller, the sub domain is company",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "templateName": "AppDynamics",
            "templateLabel": "AppDynamics",
            "description": "Federation relationship with AppDynamics",
            "image": "img/appIcons/appdynamics.jpg",
            "documentLink": "https://docs.appdynamics.com/display/PRO42/Configure+Authentication+Using+SAML"
        },
        {
            "ssoConfig":{
                "attributes":[
                    {
                        "multiValues":[
                            "%{session.ldap.last.attr.mail}"
                        ],
                        "tmName":"email",
                        "multiValueTypes":[
                            "mail"
                        ]
                    },
                    {
                        "multiValues":[
                            "%{session.ldap.last.attr.givenName}"
                        ],
                        "tmName":"firstname",
                        "multiValueTypes":[
                            "firstname"
                        ]
                    },
                    {
                        "multiValues":[
                            "%{session.ldap.last.attr.sn}"
                        ],
                        "tmName":"lastname",
                        "multiValueTypes":[
                            "lastname"
                        ]
                    }
                ],
                "subjectValue":"%{session.logon.last.username}",
                "subjectValueType":"username"
            },
            "spConnector":{
                "assertionConsumerServices":[
                    {
                        "index":0,
                        "isDefault":true,
                        "uri":"https://$subDomain$.appiancloud.com/suite/saml/AssertionConsumer"
                    }
                ],
                "entityId":"https://$subDomain$.appiancloud.com/suite",
                "isAuthnRequestSigned":true,
                "wantAssertionEncrypted":false,
                "wantAssertionSigned":false,
                "wantResponseSigned":false
            },
            "templatePropertyMetadata":{
                "variables":[
                    {
                        "name":"subDomain",
                        "displayLabel":"Sub Domain",
                        "helpText":"Provide the sub domain. For eg - If the SSO URL is https://company.appiancloud.com/suite/saml/AssertionConsumer, then the sub domain is company.",
                        "type":"inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties":[
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "templateName":"Appian",
            "documentLink":"https://docs.appian.com/suite/help/17.3/SAML_for_Single_Sign-On.html",
            "templateLabel":"Appian",
            "image": "img/appIcons/appian.jpg",
            "description":"Federation relationship with Appian"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "nameFormat": "unspecified",
                        "tmName": "name",
                        "multiValues" : ["%{session.ad.last.attr.sAMAccountName}"],
                        "multiValueTypes" : ["username"]
                    },
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "nameFormat": "unspecified",
                        "tmName": "emailaddress",
                        "multiValues" : ["%{session.ad.last.attr.mail}"],
                        "multiValueTypes" : ["mail"]
                    }
                ],
                "subjectType": "unspecified",
                "subjectValue": "%{session.ldap.last.attr.mail}",
                "subjectValueType": "mail"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://pfidentity.apptio.com/sp/ACS.saml2"
                    }
                ],
                "encryptionType": "aes128",
                "entityId": "urn:federation:apptio",
                "isAuthnRequestSigned": false,
                "signatureType": "rsa-sha1",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "templateType": "sp",
            "templateName": "apptio",
            "templateLabel": "Apptio",
            "image": "img/appIcons/apptio.jpg",
            "description": "Federation relationshio with Apptio"
        },
        {
            "spConnector": {
                "entityId": "$subDomain$.maps.arcgis.com",
                "assertionConsumerServices": [{
                    "uri": "https://$subDomain$.maps.arcgis.com/sharing/rest/oauth2/saml/signin",
                    "index": 0,
                    "isDefault": true
                }]
            },
            "ssoConfig": {
                "subjectValue": "%{session.logon.last.logonname}",
                "subjectType": "unspecified",
                "attributes": [{
                    "multiValues": ["%{session.ad.last.attr.mail}"],
                    "tmName": "email",
                    "multiValueTypes": ["mail"]
                }, {
                    "multiValues": ["%{session.ad.last.attr.displayName}"],
                    "tmName": "givenname",
                    "multiValueTypes": ["firstname"]
                }],
                "samlProfiles": ["web-browser-sso"],
                "subjectValueType": "custom"
            },
            "templatePropertyMetadata": {
                "variables": [{
                    "name": "subDomain",
                    "displayLabel": "Sub Domain",
                    "helpText": "If your SSO URL is https://company.maps.arcgis.com/sharing/rest/oauth2/saml/signin, then sub domain is company.",
                    "type": "inputText",
                    "validator": [
                        {
                            "type": "regex-validator",
                            "pattern": "^[a-zA-Z0-9_.-]*$",
                            "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                        }
                    ],
                    "targetProperties": ["spConnector.entityId", "spConnector.assertionConsumerServices[0].uri"]
                }]
            },
            "templateName": "Arcgis",
            "templateLabel": "Arcgis",
            "image": "img/appIcons/arcgis.jpg"
        },
        {
            "templateName": "Ariba Sourcing",
            "description": "Federation relationship with Ariba Sourcing",
            "image": "img/appIcons/ariba.jpg",
            "ssoConfig": {
                "subjectType": "unspecified",
                "subjectValueType": "username",
                "attributes": [
                    {
                        "tmName": "uid",
                        "multiValues": [
                            "%{session.logon.last.username}"
                        ],
                        "multiValueTypes": [
                            "username"
                        ]
                    }
                ],
                "subjectValue": "%{session.logon.last.username}",
                "samlProfiles": [
                    "web-browser-sso"
                ]
            },
            "spConnector": {
                "entityId": "https://$subDomain$.sourcing.ariba.com",
                "assertionConsumerServices": [
                    {
                        "isDefault": true,
                        "index": 0,
                        "uri": "https://s1.ariba.com/Sourcing/Main/ad/samlAuth/SSOActions?realm=$subDomain$"
                    }
                ]
            },
            "templateLabel": "Ariba Sourcing",
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Provide the sub domain from your ACS URL. If the ACS URL is https://s1.ariba.com/Sourcing/Main/ad/samlAuth/SSOActions?realm=company, then company is the sub domain",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            }
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "EMAIL",
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.logon.last.username}"
                        ],
                        "tmName": "USER_NAME",
                        "multiValueTypes": [
                            "username"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": ""
                    }
                ],
                "entityId": "AtHocServices",
                "isAuthnRequestSigned": false,
                "singleLogoutUri": "",
                "singleLogoutResponseUri": "",
                "relayState": "",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                ],
                "requiredProperties" : {
                    "spConnector" : ["singleLogoutUri"]
                }
            },
            "templateName": "athoc",
            "templateLabel": "AtHoc Services",
            "image": "img/appIcons/athoc.jpg",
            "description": "Federation relationship with AtHoc Services"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "nameFormat": "unspecified",
                        "multiValues": ["%{session.ldap.last.attr.cn}"],
                        "multiValueTypes" : ["username"],
                        "tmName": "displayname"
                    },
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "nameFormat": "unspecified",
                        "tmName": "email",
                        "multiValues": ["%{session.ldap.last.attr.mail}"],
                        "multiValueTypes" : ["mail"]
                    }
                ],
                "subjectType": "entity",
                "subjectValue": "%{session.ldap.last.attr.upn}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$atiDatacenter$/sp"
                    }
                ],
                "encryptionType": "aes128",
                "entityId": "sso.sita.aticloud.aero",
                "isAuthnRequestSigned": false,
                "signatureType": "rsa-sha1",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "singleLogoutUri": "https://$atiDatacenter$/sp/SLO.saml2",
                "singleLogoutResponseUri": "https://$atiDatacenter$/sp/SLO.saml2",
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "atiDatacenter",
                        "displayLabel": "ATI Datacenter Site",
                        "helpText": "Specify ATI Datacenter Site which is used to setup the entityId, example https://<sso-asia.aticloud.aero>/sp",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "templateType": "sp",
            "templateName": "aticloud",
            "templateLabel": "ATI Cloud",
            "image": "img/appIcons/aticloud.jpg",
            "description": "Federation relationship with ATI Cloud"
        },
        {
            "ssoConfig":{
                "attributes":[
                    {
                        "multiValues":[
                            "%{session.ad.last.attr.sn}"
                        ],
                        "tmName":"lastname",
                        "multiValueTypes":[
                            "lastname"
                        ]
                    },
                    {
                        "multiValues":[
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "tmName":"firstname",
                        "multiValueTypes":[
                            "firstname"
                        ]
                    },
                    {
                        "multiValues":[
                            "%{session.logon.last.username}"
                        ],
                        "tmName":"username",
                        "multiValueTypes":[
                            "username"
                        ]
                    },
                    {
                        "multiValues":[
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName":"email",
                        "multiValueTypes":[
                            "mail"
                        ]
                    }
                ],
                "subjectValue":"%{session.ad.last.attr.mail}",
                "subjectValueType":"mail"
            },
            "spConnector":{
                "assertionConsumerServices":[
                    {
                        "index":0,
                        "isDefault":true,
                        "uri":"https://id.atlassian.com/login/saml/acs"
                    }
                ],
                "isAuthnRequestSigned":false,
                "wantAssertionEncrypted":false,
                "wantAssertionSigned":false,
                "wantResponseSigned":true
            },
            "templatePropertyMetadata":{
                "variables":[

                ]
            },
            "templateName":"Atlassian",
            "templateLabel":"Atlassian",
            "image": "img/appIcons/atlassian.jpg",
            "description":"Federation relationship with Atlassian",
            "documentLink":"https://confluence.atlassian.com/enterprise/saml-single-sign-on-for-atlassian-data-center-applications-857050705.html"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ldap.last.attr.userPrincipalName}"
                        ],
                        "tmName": "NameID",
                        "multiValueTypes": [
                            "username"
                        ]
                    }
                ],
                "subjectValue": "%{session.ldap.last.attr.userPrincipalName}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://secure2.atomiclearning.com/Shibboleth.sso/SAML2/POST"
                    }
                ],
                "entityId": "https://secure2.atomiclearning.com/sso/shib",
                "isAuthnRequestSigned": false,
                "singleLogoutUri": "https://secure2.atomiclearning.com/Shibboleth.sso/SLO/Artifact",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "templateName": "atomiclearning",
            "templateLabel": "Atomic Learning",
            "image": "img/appIcons/atomiclearning.jpg",
            "description": "Federation relationship with Atomic Learning"
        },
        {
            "spConnector": {
                "assertionConsumerServices": [{
                    "uri": "$callbackURL$",
                    "index": 0,
                    "isDefault": true
                }],
                "entityId": "$issuerURL$"
            },
            "ssoConfig": {
                "samlProfiles": ["web-browser-sso"],
                "attributes": [{
                    "tmName": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/upn",
                    "multiValues": ["%{session.ad.last.attr.mail}"],
                    "multiValueTypes": ["username"]
                }],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectValueType": "username"
            },
            "templatePropertyMetadata": {
                "variables": [{
                    "name": "issuerURL",
                    "displayLabel": "Issuer URL",
                    "helpText": "Enter your Issuer URL. For example, enter: https://AurionSelfService.acme.io",
                    "type": "inputText",
                    "validator": [
                        {
                            "type": "url-validator"
                        }
                    ],
                    "targetProperties": ["spConnector.entityId"]
                }, {
                    "name": "callbackURL",
                    "displayLabel": "Callback URL",
                    "helpText": "Enter your Callback URL. For example, enter: https://AurionSelfService.acme.io/login/callback",
                    "type": "inputText",
                    "validator": [
                        {
                            "type": "url-validator"
                        }
                    ],
                    "targetProperties": ["spConnector.assertionConsumerServices[0].uri"]
                }]
            },
            "templateName": "aurion",
            "templateLabel": "Aurion",
            "image": "img/appIcons/aurion.jpg",
            "documentLink": "http://saml-doc.okta.com/SAML_Docs/How-to-Configure-SAML-2.0-for-Aurion.html"
        },
        {
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "isDefault": true,
                        "index": 0,
                        "uri": "https://app.certcapture.com/logins/sso/$companyId$"
                    }
                ],
                "isAuthnRequestSigned": true,
                "entityId": "www.avalara.com/certcapture"
            },
            "ssoConfig": {
                "subjectValue": "%{session.ldap.last.attr.mail}",
                "attributes": [
                    {
                        "tmName": "EMAIL",
                        "multiValues": [
                            "%{session.ldap.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "tmName": "EmailAddress",
                        "multiValues": [
                            "%{session.ldap.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "tmName": "FIRSTNAME",
                        "multiValues": [
                            "%{session.ldap.last.attr.givenName}"
                        ],
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ldap.last.attr.givenName}"
                        ],
                        "tmName": "FirstName",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "tmName": "LASTNAME",
                        "multiValues": [
                            "%{session.ldap.last.attr.sn}"
                        ],
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "tmName": "LastName",
                        "multiValues": [
                            "%{session.ldap.last.attr.sn}"
                        ],
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "tmName": "NameID",
                        "multiValues": [
                            "%{session.ldap.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "tmName": "emailAddress",
                        "multiValues": [
                            "%{session.ldap.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "companyId",
                        "displayLabel": "Company Id",
                        "helpText": "Provide your company id. If the SSO URL is https://app.certcapture.com/logins/sso/company, then company is the  company Id.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices.uri[0]"
                        ]
                    }
                ]
            },
            "templateName": "Avalara Certcapture",
            "templateLabel": "Avalara",
            "image": "img/appIcons/avalara.jpg",
            "description": "Federation relationship with Avalara"
        },
        {
            "templateName": "amazon",
            "templateLabel": "Amazon Web Services",
            "description": "Federation relationship with Amazon Web Services",
            "image": "img/appIcons/aws.jpg",
            "ssoConfig": {
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectType": "unspecified",
                "subjectValueType": "username",
                "subjectValue": "%{session.ad.last.attr.sAMAccountName}",
                "attributes": [
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "multiValues": [
                            "arn:aws:iam::$awsServiceAccountNumber$:role/$awsIdPRoleName$,arn:aws:iam::$awsServiceAccountNumber$:saml-provider/$awsIdPName$"
                        ],
                        "multiValueTypes": [
                            "custom"
                        ],
                        "tmName": "https://aws.amazon.com/SAML/Attributes/Role",
                        "nameFormat": "unspecified"
                    },
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "multiValues": [
                            "%{session.logon.last.logonname}"
                        ],
                        "multiValueTypes": [
                            "username"
                        ],
                        "tmName": "https://aws.amazon.com/SAML/Attributes/RoleSessionName",
                        "nameFormat": "unspecified"
                    }
                ]
            },
            "spConnector": {
                "entityId": "https://signin.aws.amazon.com/saml",
                "encryptionType": "aes128",
                "isAuthnRequestSigned": false,
                "spCertificate": "",
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false,
                "spEncryptionCertificate": "",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://signin.aws.amazon.com/saml"
                    }
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "awsIdPName",
                        "displayLabel": "AWS IdP Name",
                        "type": "inputText",
                        "helpText": "Provide the name of the identity provider. Make sure that the same name is configured in Identity Providers section in AWS.",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "ssoConfig.attributes[0].multiValues[0]"
                        ]
                    },
                    {
                        "name": "awsIdPRoleName",
                        "displayLabel": "AWS IdP Role Name",
                        "type": "inputText",
                        "helpText": "Provide the AWS Role which has Identity Provider Access configured in AWS Roles.",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "ssoConfig.attributes[0].multiValues[0]"
                        ]
                    },
                    {
                        "name": "awsServiceAccountNumber",
                        "displayLabel": "AWS Service Account Number",
                        "type": "inputText",
                        "helpText": "Provide your AWS Account ID from your AWS Account Settings.",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "ssoConfig.attributes[0].multiValues[0]"
                        ]
                    }
                ]
            }
        },
        {
            "ssoConfig": {
                "attributes": [{
                    "multiValues": [
                        "%{session.ad.last.attr.sAMAccountName}"
                    ],
                    "tmName": "EmployeeID",
                    "multiValueTypes": [
                        "username"
                    ]
                }],
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectType": "persistent",
                "subjectValue": "%{session.ad.last.attr.sAMAccountName}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [{
                    "index": 0,
                    "isDefault": true,
                    "uri": "https://$subDomain$.benefitfocus.com/sp/ACS.saml2"
                }],
                "entityId": "benefitfocus.com:sp",
                "isAuthnRequestSigned": false,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "singleLogoutUri": "https://$subDomain$.benefitfocus.com/sp/SLO.ssaml2",
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [{
                    "name": "subDomain",
                    "displayLabel": "Sub Domain",
                    "helpText": "Enter your Sub Domain. For example, if you log into https://company.benefitfocus.com/sp/ACS.saml2, enter: company",
                    "type": "inputText",
                    "validator": [
                        {
                            "type": "regex-validator",
                            "pattern": "^[a-zA-Z0-9_.-]*$",
                            "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                        }
                    ],
                    "targetProperties": [
                        "spConnector.singleLogoutUri",
                        "spConnector.assertionConsumerServices[0].uri"
                    ]
                }]
            },
            "templateName": "Benefitfocus",
            "templateLabel": "BenefitFocus",
            "image": "img/appIcons/Benefitfocus.jpg"
        },
        {
            "ssoConfig":{
                "attributes":[
                    {
                        "multiValues":[
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "tmName":"firstname",
                        "multiValueTypes":[
                            "firstname"
                        ]
                    },
                    {
                        "multiValues":[
                            "%{session.ad.last.attr.sn}"
                        ],
                        "tmName":"lastname",
                        "multiValueTypes":[
                            "lastname"
                        ]
                    },
                    {
                        "multiValues":[
                            "%{session.ldap.last.attr.mail}"
                        ],
                        "tmName":"email",
                        "multiValueTypes":[
                            "mail"
                        ]
                    },
                    {
                        "multiValues":[
                            "%{session.logon.last.username}"
                        ],
                        "tmName":"username",
                        "multiValueTypes":[
                            "username"
                        ]
                    }
                ],
                "subjectValue":"%{session.logon.last.username}",
                "subjectValueType":"username"
            },
            "spConnector":{
                "assertionConsumerServices":[
                    {
                        "index":0,
                        "isDefault":true,
                        "uri":"https://www.benefitsolver.com/benefits/BenefitSolverView?page_name=single_signon_saml"
                    }
                ],
                "entityId":"https://$subDomain$.benefitsolver.com/saml20",
                "isAuthnRequestSigned":true,
                "wantAssertionEncrypted":false,
                "wantAssertionSigned":false,
                "wantResponseSigned":false
            },
            "templatePropertyMetadata":{
                "variables":[
                    {
                        "name":"subDomain",
                        "displayLabel":"Sub Domain",
                        "helpText":"Provide the sub domain. For eg - If the SSO URL is https://$subDomain$.benefitsolver.com/saml20/, then the sub domain is company.",
                        "type":"inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties":[
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateName":"BenefitSolver",
            "templateLabel":"Benefit Solver",
            "image": "img/appIcons/benefitsolver.jpg",
            "description":"Federation relationship with Benefit Solver",
            "documentLink":"https://docs.microsoft.com/en-us/azure/active-directory/active-directory-saas-benefitsolver-tutorial"
        },
        {
            "ssoConfig":{
                "attributes":[
                    {
                        "tmName":"givenName",
                        "multiValues":[
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "multiValueTypes":[
                            "firstname"
                        ]
                    },
                    {
                        "tmName":"sn",
                        "multiValues":[
                            "%{session.ad.last.attr.sn}"
                        ],
                        "multiValueTypes":[
                            "lastname"
                        ]
                    },
                    {
                        "tmName":"mail",
                        "multiValues":[
                            "%{session.ad.last.attr.mail}"
                        ],
                        "multiValueTypes":[
                            "mail"
                        ]
                    },
                    {
                        "tmName":"saml_token",
                        "multiValues":[
                            "$saml_token$"
                        ],
                        "multiValueTypes":[
                            "custom"
                        ]
                    }
                ],
                "subjectValue":"%{session.logon.last.username}",
                "subjectValueType":"username"
            },
            "spConnector":{
                "assertionConsumerServices":[
                    {
                        "index":1,
                        "isDefault":true,
                        "uri":"https://app.betterworks.com/saml2/acs/"
                    }
                ],
                "entityId":"https://app.betterworks.com/saml2/metadata/",
                "isAuthnRequestSigned":false,
                "singleLogoutBinding":"http-redirect",
                "wantAssertionEncrypted":false,
                "wantAssertionSigned":false,
                "wantResponseSigned":false
            },
            "templatePropertyMetadata":{
                "variables":[
                    {
                        "name":"saml_token",
                        "displayLabel":"SAML Token",
                        "helpText":"Unique ID assigned by BetterWorks",
                        "type":"inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties":[
                            "ssoConfig.attributes[3].multiValues[0]"
                        ]
                    }
                ]
            },
            "templateType":"sp",
            "templateName":"betterWorks",
            "templateLabel":"betterWorks",
            "image": "img/appIcons/BetterWorks.jpg",
            "description":"Federation relation with BetterWorks",
            "documentLink":"https://betterworks.zendesk.com/hc/en-us/articles/207739153-Configuring-SAML-single-sign-on"
        },
        {
            "ssoConfig":{
                "attributes":[
                    {
                        "multiValues":[
                            "%{session.logon.last.username}"
                        ],
                        "tmName":"username",
                        "multiValueTypes":[
                            "username"
                        ]
                    },
                    {
                        "multiValues":[
                            "%{session.logon.last.username}"
                        ],
                        "tmName":"nameID",
                        "multiValueTypes":[
                            "username"
                        ]
                    },
                    {
                        "multiValues":[
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName":"email",
                        "multiValueTypes":[
                            "mail"
                        ]
                    }
                ],
                "subjectValue":"%{session.logon.last.username}",
                "subjectValueType":"username"
            },
            "spConnector":{
                "assertionConsumerServices":[
                    {
                        "index":1,
                        "isDefault":true,
                        "uri":"https://$subDomain$.bioraft.com/Shibboleth.sso/SAML2/POST"
                    }
                ],
                "entityId":"https://$subDomain$.bioraft.com/shibboleth",
                "isAuthnRequestSigned":false,
                "wantAssertionEncrypted":false,
                "wantAssertionSigned":false,
                "wantResponseSigned":false
            },
            "templatePropertyMetadata":{
                "variables":[
                    {
                        "name":"subDomain",
                        "displayLabel":"Sub Domain",
                        "helpText":"Provide the sub domain. For eg - If the SSO URL is https://company.bioraft.com/Shibboleth.sso/SAML2/POST, then the sub domain is company.",
                        "type":"inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties":[
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateName":"bioraft",
            "templateLabel":"Bioraft",
            "image": "img/appIcons/bioraft.jpg",
            "description":"Federation relationship with Bioraft"
        },
        {
            "spConnector": {
                "isAuthnRequestSigned": true,
                "assertionConsumerServices": [
                    {
                        "uri": "https://$subdDomain$.blackboard.com/auth-saml/saml/SSO",
                        "index": 0,
                        "isDefault": true
                    }
                ],
                "singleLogoutUri": "https://$subdDomain$.blackboard.com/auth-saml/saml/SingleLogout",
                "entityId": "https://$subdDomain$.blackboard.com/auth-saml/saml/SSO/entity-id/SAML_AD"
            },
            "ssoConfig": {
                "attributes": [
                    {
                        "tmName": "urn:oid:1.3.6.1.4.1.5923.1.1.1.6",
                        "multiValues": [
                            "%{session.logon.last.username}"
                        ],
                        "multiValueTypes": [
                            "username"
                        ]
                    }
                ],
                "subjectType": "unspecified",
                "subjectValue": "%{session.logon.last.username}",
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValueType": "username"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subdDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Provide your sub domain name. For eg - In https://company.blackboard.com/, sub domain is company",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.singleLogoutUri",
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateName": "Blackboard",
            "templateLabel": "Blackboard.com",
            "image": "img/appIcons/blackboard.jpg",
            "description": "Federation relationship with Blackboard.com"
        },
        {
            "image": "img/appIcons/blackline.jpg",
            "description": "Federation relationship with Blackline",
            "spConnector": {
                "entityId": "urn:federation:ssona.blacklineondemand.com",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 1,
                        "isDefault": true,
                        "uri": "https://ssona.blacklineondemand.com/adfs/ls/"
                    }
                ],
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false
            },
            "templateLabel": "Blackline",
            "templateName": "Blackline",
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.sAMAccountName}",
                "attributes": [],
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectType": "unspecified",
                "subjectValueType": "username"
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "documentLink": "n/a"
        },
        {
            "ssoConfig":{
                "attributes":[
                    {
                        "multiValues":[
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName":"NameID",
                        "multiValueTypes":[
                            "mail"
                        ]
                    }
                ],
                "samlProfiles":[
                    "web-browser-sso"
                ],
                "subjectValue":"%{session.ad.last.attr.mail}",
                "subjectValueType":"mail"
            },
            "spConnector":{
                "assertionConsumerServices":[
                    {
                        "index":0,
                        "isDefault":true,
                        "uri":"https://bluejeans.com/sso/saml2/"
                    }
                ],
                "entityId":"http://samlsp.bluejeans.com",
                "isAuthnRequestSigned":false,
                "wantAssertionEncrypted":false,
                "wantAssertionSigned":false,
                "wantResponseSigned":false
            },
            "templatePropertyMetadata":{
                "variables":[

                ]
            },
            "templateName":"BlueJeans",
            "templateLabel":"BlueJeans",
            "image": "img/appIcons/bluejeans.jpg",
            "description":"Federation relationship with BlueJeans",
            "documentLink":"https://support.bluejeans.com/sites/default/files/support/u116/BlueJeans%20SPI%20SSO%20Login%20PingFederate.pdf"
        },
        {
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.mail}",
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValueType": "mail"
            },
            "spConnector": {
                "entityId": "https://platform.boomi.com/sso/$companyId$/saml",
                "assertionConsumerServices": [
                    {
                        "uri": "https://platform.boomi.com/sso/$companyId$/saml",
                        "index": 0,
                        "isDefault": true
                    }
                ],
                "isAuthnRequestSigned": true
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "companyId",
                        "displayLabel": "Company ID",
                        "helpText": "Provide the company ID. If your SSO URL is https://platform.boomi.com/sso/testCompany/saml, testCompany is the company ID",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "templateName": "Boomi",
            "templateLabel": "boom.com",
            "image": "img/appIcons/boomi.jpg",
            "description": "Federation relationship with Boomi"
        },
        {
            "templateName": "box",
            "templateLabel": "Box",
            "description": "Box",
            "image": "img/appIcons/box.jpg",
            "ssoConfig": {
                "subjectType": "email-address",
                "subjectValueType": "mail",
                "subjectValue": "%{session.ad.last.attr.mail}",
                "samlProfiles": [
                    "web-browser-sso",
                    "ecp"
                ]
            },
            "spConnector": {
                "entityId": "https://box.net",
                "encryptionType": "aes128",
                "isAuthnRequestSigned": false,
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false,
                "singleLogoutUri": "https://sso.services.box.net/sp/SLO.saml2",
                "singleLogoutResponseUri": "https://sso.services.box.net/sp/SLO.saml2",
                "assertionConsumerServices": [{
                    "binding": "http-post",
                    "index": 0,
                    "isDefault": true,
                    "uri": "https://sso.services.box.net/sp/ACS.saml2"
                },
                    {
                        "binding": "http-artifact",
                        "index": 1,
                        "isDefault": false,
                        "uri": "https://sso.services.box.net/sp/ACS.saml2"
                    },
                    {
                        "binding": "paos",
                        "index": 2,
                        "isDefault": false,
                        "uri": "https://sso.services.box.net/sp/ACS.saml2"
                    }
                ]
            },
            "templatePropertyMetadata": {
                "variables": []
            }
        },
        {
            "ssoConfig":{
                "samlProfiles":[
                    "web-browser-sso"
                ],
                "subjectValue":"%{session.ad.last.attr.mail}",
                "subjectValueType":"mail"
            },
            "spConnector":{
                "assertionConsumerServices":[
                    {
                        "index":0,
                        "isDefault":true,
                        "uri":""
                    }
                ],
                "entityId":"brainshark:default:saml2",
                "isAuthnRequestSigned":false,
                "wantAssertionEncrypted":false,
                "wantAssertionSigned":false,
                "wantResponseSigned":false
            },
            "templatePropertyMetadata":{
                "variables":[
                    {
                        "name":"environment",
                        "displayLabel":"Environment",
                        "helpText":"Choose environment type. Environment type can be 'Production' or 'Staging'",
                        "type":"dropdown",
                        "values":{
                            "staging":{
                                "value":"staging",
                                "displayValue":"Staging",
                                "targetProperties":[
                                    {
                                        "name":"spConnector.entityId",
                                        "value":"brainshark:staging:saml2"
                                    }
                                ]
                            },
                            "production":{
                                "value":"production",
                                "displayValue":"Production",
                                "targetProperties":[
                                    {
                                        "name":"spConnector.entityId",
                                        "value":"brainshark:default:saml2"
                                    }
                                ]
                            }
                        }
                    }
                ]
            },
            "templateName":"brainShark",
            "templateLabel":"Brainshark",
            "image":"img/appIcons/brainshark.jpg",
            "description":"Federation relationship with Brainshark",
            "documentLink":"https://developer.salesforce.com/page/Configuring-SAML-SSO-to-Brainshark"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.displayName}"
                        ],
                        "tmName": "firstName",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "email",
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValue": "%{session.ldap.last.attr.mail}",
                "subjectValueType": "mail"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$domainName$.brightidea.com/_saml"
                    }
                ],
                "entityId": "https://$domainName$.brightidea.com",
                "isAuthnRequestSigned": false,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "domainName",
                        "displayLabel": "domainName",
                        "helpText": "Domain Name",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateName": "BrightIdea",
            "templateLabel": "BrightIdea",
            "image": "img/appIcons/brightidea.jpg",
            "description": "Federation relationship with BrightIdea",
            "documentLink": "http://www.brightidea.com/wp-content/uploads/140306_SSO_Overview.pdf"
        },
        {
            "spConnector": {
                "entityId": "https://$subDomain$.brightspace.com/shibboleth-sp",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$subDomain$.brightspace.com/shibboleth-sp"
                    }
                ],
                "singleLogoutUri": "https://$subDomain$.brightspace.com/d2l/login?logout=1"
            },
            "ssoConfig": {
                "attributes": [
                    {
                        "tmName": "mail",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "tmName": "username",
                        "multiValues": [
                            "%{session.ad.last.attr.sAMAccountname}"
                        ],
                        "multiValueTypes": [
                            "username"
                        ]
                    }
                ],
                "subjectType": "entity",
                "subjectValue": "%{session.logon.last.logonname}",
                "subjectValueType": "username"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Provide your sub domain. For eg - If your SSO URI is https://company.brightspace.com/shibboleth-sp, then the sub domain is company",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.singleLogoutUri",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "templateName": "BrightSpace",
            "templateLabel": "BrightSpace by Desire2Learn",
            "image": "img/appIcons/brightspace.jpg",
            "description": "Federation relationship with Brightspace"
        },
        {
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "uri": "https://tracker.bugcrowd.com/organizations/$organizationID$/sso/acs",
                        "index": 0,
                        "isDefault": true
                    }
                ],
                "singleLogoutUri": "https://tracker.bugcrowd.com/organizations/$organizationID$/sso/logout",
                "entityId": "https://tracker.bugcrowd.com/organizations/$organizationID$"
            },
            "ssoConfig": {
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "attributes": [
                    {
                        "tmName": "UserID",
                        "multiValues": [
                            "%{session.ad.last.attr.sAMAccountName}"
                        ],
                        "multiValueTypes": [
                            "username"
                        ]
                    },
                    {
                        "tmName": "LastName",
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "multiValueTypes": [
                            "username"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.displayName}"
                        ],
                        "tmName": "FullName",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "tmName": "FirstName",
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.employeeID}"
                        ],
                        "tmName": "EmployeeID",
                        "multiValueTypes": [
                            "username"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "Email",
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "NameID",
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "organizationID",
                        "displayLabel": "Organization ID",
                        "helpText": "Provide the organization id.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.singleLogoutUri",
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateName": "Bugcrowd",
            "templateLabel": "Bugcrowd",
            "image": "img/appIcons/bugcrowd.jpg"
        },
        {
            "spConnector": {
                "entityId": "https://federation.campuslabs.com/shibboleth",
                "singleLogoutUri": "https://federation.campuslabs.com/Shibboleth.sso/SLO/SOAP",
                "assertionConsumerServices": [
                    {
                        "uri": "https://federation.campuslabs.com/Shibboleth.sso/SAML2/POST",
                        "isDefault": true,
                        "binding": "http-post",
                        "index": 1
                    },
                    {
                        "uri": "https://federation.campuslabs.com/Shibboleth.sso/SAML2/POST",
                        "isDefault": false,
                        "binding": "http-artifact",
                        "index": 3
                    },
                    {
                        "uri": "https://federation.campuslabs.com/Shibboleth.sso/SAML2/POST",
                        "isDefault": false,
                        "binding": "paos",
                        "index": 4
                    }
                ]
            },
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.sAMAccountName}",
                "subjectType": "transient",
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValueType": "username"
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "templateName": "Campuslabs",
            "templateLabel": "Campuslabs",
            "image": "img/appIcons/campuslabs.jpg",
            "description": "Federation relationship with Campuslabs"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.logon.last.username}"
                        ],
                        "tmName": "uid",
                        "multiValueTypes": [
                            "username"
                        ]
                    }
                ],
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectType": "x509-subject",
                "subjectValue": "%{session.ad.last.attr.sAMAccountName}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://hosted.catalystone.com/stream/saml/SAMLAssertionConsumer"
                    }
                ],
                "entityId": "https://hosted.catalystone.com/stream",
                "isAuthnRequestSigned": false,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "templateName": "CatalystOne",
            "templateLabel": "CatalystOne",
            "image": "img/appIcons/catalystone.jpg",
            "description": "Federation relationship with CatalystOne"
        },
        {
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "uri": "https://portal.catchpoint.com/ui/Entry/SingleSignOn.aspx",
                        "index": 0,
                        "isDefault": true
                    }
                ],
                "entityId": "CatchpointSystems",
                "wantAssertionSigned": false
            },
            "ssoConfig": {
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.displayName}"
                        ],
                        "tmName": "FullName",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "tmName": "LastName",
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "tmName": "FirstName",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "tmName": "Email",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "multiValues": [
                            "$namespace$"
                        ],
                        "tmName": "namespace",
                        "multiValueTypes": [
                            "custom"
                        ]
                    }
                ],
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "namespace",
                        "displayLabel": "Namespace Attribute",
                        "helpText": "Provide the namespace attribute",
                        "type": "inputText",
                        "targetProperties": [
                            "ssoConfig.attributes[4].multiValues[0]"
                        ]
                    }
                ]
            },
            "templateName": "Catchpoint",
            "templateLabel": "Catchpoint",
            "image": "img/appIcons/catchpoint.jpg",
            "description": "Federation relationship with Catchpoint"
        },
        {
            "ssoConfig": {
                "subjectType": "unspecified",
                "subjectValue": "%{session.ldap.last.attr.mail}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [{
                    "binding": "http-post",
                    "index": 0,
                    "isDefault": true,
                    "uri": "https://$hostName$/RP-STS_SAML/SAML/AssertionConsumerService.aspx"
                }],
                "entityId": "https://$hostName$",
                "isAuthnRequestSigned": false,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [{
                    "name": "hostName",
                    "displayLabel": "Hostname",
                    "helpText": "Enter Hostname. For example, if your ACS URL is https://changepoint.com/RP-STS_SAML/SAML/AssertionConsumerService.aspx, enter: changepoint.com",
                    "type": "inputText",
                    "validator": [
                        {
                            "type": "regex-validator",
                            "pattern": "^[a-zA-Z0-9_.-]*$",
                            "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                        }
                    ],
                    "targetProperties": [
                        "spConnector.assertionConsumerServices[0].uri",
                        "spConnector.entityId"
                    ]
                }]
            },
            "templateType": "sp",
            "templateName": "Changepoint",
            "templateLabel": "Changepoint",
            "image": "img/appIcons/changepoint.jpg"
        },
        {
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$subDomain$.cherwellondemand.com/CherwellService/Saml/Assertion.aspx"
                    }
                ],
                "entityId": "https://$subDomain$.cherwellondemand.com",
                "isAuthnRequestSigned": true,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Enter Sub Domain. For example, if you log into https://yourcompany.cherwellondemand.com, enter: yourcompany",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "templateName": "cherwellondemand",
            "templateLabel": "Cherwell OnDemand",
            "image": "img/appIcons/cherwell.jpg"
        },
        {
            "ssoConfig": {
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectType": "persistent",
                "attributes": [
                    {
                        "tmName": "NameID",
                        "multiValues": [
                            "%{session.ad.last.attr.employeeID}"
                        ],
                        "multiValueTypes": [
                            "username"
                        ]
                    },
                    {
                        "tmName": "givenName",
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "mail",
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "tmName": "sn",
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "multiValueTypes": [
                            "lastname"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.employeeID}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "entityId": "https://$serverType$.chromeriver.com/",
                "assertionConsumerServices": [
                    {
                        "index": 1,
                        "isDefault": true,
                        "uri": "https://$serverType$.chromeriver.com/login/sso/saml/consume?customerId=$customerId$"
                    }
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "customerId",
                        "displayLabel": "Customer ID",
                        "helpText": "Customer ID to be obtained from the SSO URI - For eg - https://qa-app.chromeriver.com/login/sso/saml/consume\\?customerId=xyz, customer ID is xyz",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ]
                    },
                    {
                        "name": "serverType",
                        "displayLabel": "Server Type",
                        "helpText": "Select if Production or QA server",
                        "type": "radio",
                        "values": {
                            "prod": {
                                "value": "prod",
                                "displayValue": "Production",
                                "targetProperties": [
                                    {
                                        "name": "spConnector.entityId",
                                        "value": "https://app.chromeriver.com/"
                                    },
                                    {
                                        "name": "spConnector.assertionConsumerServices[0].uri",
                                        "value": "https://app.chromeriver.com/login/sso/saml/consume?customerId=$customerId$"
                                    }
                                ]
                            },
                            "qa": {
                                "value": "qa",
                                "displayValue": "QA",
                                "targetProperties": [
                                    {
                                        "name": "spConnector.entityId",
                                        "value": "https://qa-app.chromeriver.com/"
                                    },
                                    {
                                        "name": "spConnector.assertionConsumerServices[0].uri",
                                        "value": "https://qa-app.chromeriver.com/login/sso/saml/consume?customerId=$customerId$"
                                    }
                                ]
                            }
                        },
                        "relatedVariable": [
                            "customerId"
                        ]
                    }
                ]
            },
            "templateName": "Chromeriver",
            "templateLabel": "Chromeriver",
            "image": "img/appIcons/chromeriver.jpg",
            "description": "Federation relationship with Chromeriver"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "tmName": "lastname",
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "tmName": "firstname",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "email",
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.cn}"
                        ],
                        "tmName": "Username",
                        "multiValueTypes": [
                            "username"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectValueType": "mail"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$subDomain$.chronus.com/session"
                    }
                ],
                "entityId": "$subDomain$.chronus.com",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Specify Sub Domain. If ACS URI is https://acme.chronus.com/session then enter acme for Sub Domain",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateName": "chronus",
            "templateLabel": "Chronus",
            "image": "img/appIcons/chronus.jpg",
            "description": "Federation relationship with Chronus"
        },
        {
            "ssoConfig":{
                "attributes":[
                    {
                        "multiValues":[
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName":"NameID",
                        "multiValueTypes":[
                            "mail"
                        ]
                    }
                ],
                "samlProfiles":[
                    "web-browser-sso"
                ],
                "subjectValue":"%{session.ad.last.attr.mail}",
                "subjectValueType":"mail"
            },
            "spConnector":{
                "assertionConsumerServices":[
                    {
                        "index":0,
                        "isDefault":true,
                        "uri":"https://$subDomain$.clarizen.com/Clarizen/Pages/Integrations/SAML/SamlResponse.aspx"
                    }
                ],
                "entityId":"Clarizen",
                "isAuthnRequestSigned":false,
                "wantAssertionEncrypted":false,
                "wantAssertionSigned":false,
                "wantResponseSigned":false
            },
            "templatePropertyMetadata":{
                "variables":[
                    {
                        "name":"subDomain",
                        "displayLabel":"Sub Domain",
                        "helpText":"Provide the sub domain. For eg if the ACS URL is https://company.clarizen.com/Clarizen/Pages/Integrations/SAML/SamlResponse.aspx, the sub domain is company.",
                        "type":"inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties":[
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "templateName":"clarizen",
            "templateLabel":"Clarizen",
            "image":"img/appIcons/clarizen.jpg",
            "description":"Federation relationship with Clarizen",
            "documentLink":"http://usermanual.clarizen.com/integration-with-identity-providers"
        },
        {
            "ssoConfig": {
                "subjectType": "win-domain-qualified-name",
                "subjectValue": "%{session.ad.last.attr.sAMAccountName}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "encryptionType": "aes256",
                "entityId": "https://clever.com/oauth/saml/metadata.xml",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://clever.com/oauth/saml/assert"
                    }
                ],
                "isAuthnRequestSigned": false,
                "singleLogoutBinding": "http-redirect",
                "singleLogoutResponseUri": "https://clever.com/oauth/saml/assert",
                "wantAssertionEncrypted": true,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "templateName": "Clever",
            "templateLabel": "Clever",
            "image": "img/appIcons/clever.jpg",
            "description": "Federation relationship with clever.com",
            "documentLink": "https://support.clever.com/hc/en-us/articles/218050687-Instant-Login-with-a-custom-SAML-connection"
        },
        {
            "ssoConfig":{
                "subjectValue":"%{session.ad.last.attr.mail}",
                "subjectValueType":"mail"
            },
            "spConnector":{
                "assertionConsumerServices":[
                    {
                        "index":1,
                        "isDefault":true,
                        "uri":"https://$subDomain$.clicksoftware.com/cgi/samlauth"
                    }
                ],
                "entityId":"https://$subDomain$.clicksoftware.com",
                "wantAssertionEncrypted":false,
                "wantAssertionSigned":false,
                "wantResponseSigned":false
            },
            "templatePropertyMetadata":{
                "variables":[
                    {
                        "name":"subDomain",
                        "displayLabel":"Sub Domain",
                        "helpText":"Provide the sub domain. For eg - If the SSO URL is https://company.clicksoftware.com/cgi/samlauth, then the sub domain is company.",
                        "type":"inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties":[
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "templateName":"Clicksoftware",
            "templateLabel":"Clicksoftware",
            "image": "img/appIcons/clicksoftware.jpg",
            "description":"Federation relationship with Clicksoftware",
            "documentLink":"https://wiki.cloud.clicksoftware.com/pages/viewpage.action?pageId=4594607"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.logon.last.username}"
                        ],
                        "tmName": "username",
                        "multiValueTypes": [
                            "username"
                        ]
                    }
                ],
                "subjectValue": "%{session.logon.last.username}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$subDomain$.clinicalconductor.com/CCSWeb/SSO/SAML2/frmSignIn.aspx"
                    }
                ],
                "entityId": "https://$subDomain$.clinicalconductor.com/CCSWeb/SSO/SAML2/",
                "isAuthnRequestSigned": false,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Enter your sub domain. For example, if your ACS URL is https://yourcompany.clinicalconductor.com/CCSWeb/SSO/SAML2/frmSignIn.aspx, enter: yourcompany",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateName": "clinicalconductor",
            "templateLabel": "Clinical Conductor",
            "image": "img/appIcons/clinicalconductor.jpg",
            "description": "Federation relationship with Clinical Conductor"
        },
        {
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 2,
                        "isDefault": false,
                        "uri": "https://www.clockwisemd.com/auth/saml/callback"
                    },
                    {
                        "index": 1,
                        "isDefault": true,
                        "uri": "https://www.clockwisemd.com/auth/saml/callback?login_domain=$loginDomainName$"
                    }
                ],
                "relayState": "https://www.clockwisemd.com/auth/saml/callback?login_domain=$loginDomainName$",
                "entityId": "clockwisemd"
            },
            "ssoConfig": {
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "email",
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "loginDomainName",
                        "displayLabel": "Login Domain Name",
                        "helpText": "Provide the login domain name",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[1].uri",
                            "spConnector.relayState"
                        ]
                    }
                ]
            },
            "templateName": "Clockwise.Md",
            "templateLabel": "Clockwise.Md",
            "image": "img/appIcons/clockwisemd.jpg",
            "description": "Federation relationship with Clockwise.Md"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress",
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.userPrincipalName}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": false,
                        "uri": "https://$subDomain$.cmo-compliance.com/adfs/ls/"
                    },
                    {
                        "index": 1,
                        "isDefault": true,
                        "binding": "http-artifact",
                        "uri": "https://$subDomain$.cmo-compliance.com/adfs/ls/"
                    }
                ],
                "entityId": "http://$subDomain$.cmo-compliance.com/adfs/services/trust",
                "isAuthnRequestSigned": false,
                "singleLogoutUri": "https://$subDomain$.cmo-compliance.com/adfs/ls/",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Provide the Sub Domain. For e.g. if the Entity Id URL is http://company.cmo-compliance.com/adfs/services/trust, the Sub Domain is company",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.singleLogoutUri",
                            "spConnector.assertionConsumerServices[1].uri",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "templateName": "cmoCompliance",
            "templateLabel": "CMO Compliance",
            "image": "img/appIcons/cmocompliance.jpg",
            "description": "Federation relationship with CMO Compliance"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.logon.last.username}"
                        ],
                        "tmName": "UserName",
                        "multiValueTypes": [
                            "username"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.sAMAccountName}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$subDomain$.community360.net/sso.aspx?Accountkey=$accountKey$"
                    }
                ],
                "entityId": "https://$subDomain$.community360.net/sso.aspx",
                "isAuthnRequestSigned": false,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Enter your sub domain. For example, if your login URL is https://yourcompany.community360.net, enter: yourcompany",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    },
                    {
                        "name": "accountKey",
                        "displayLabel": "Account Key",
                        "helpText": "Enter your account key. For example if your ACS URL is https://yourcompany.community360.net/sso.aspx?Accountkey=1234 enter: 1234",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "templateName": "community360",
            "templateLabel": "Community 360",
            "image": "img/appIcons/community360.jpg",
            "description": "Federation relationship with Community 360"
        },
        {
            "ssoConfig": {
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValue": "%{session.logon.last.logonname}",
                "subjectType": "unspecified",
                "attributes": [
                    {
                        "multiValues": [
                            "$organizationId$"
                        ],
                        "tmName": "Organization_ID",
                        "multiValueTypes": [
                            "custom"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ldap.last.attr.sn}"
                        ],
                        "tmName": "LastName",
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ldap.last.attr.sn}"
                        ],
                        "tmName": "LASTNAME",
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "tmName": "FirstName",
                        "multiValues": [
                            "%{session.ldap.last.attr.givenName}"
                        ],
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "tmName": "FIRSTNAME",
                        "multiValues": [
                            "%{session.ldap.last.attr.givenName}"
                        ],
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "tmName": "emailAddress",
                        "multiValues": [
                            "%{session.ldap.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ldap.last.attr.mail}"
                        ],
                        "tmName": "EmailAddress",
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ldap.last.attr.mail}"
                        ],
                        "tmName": "EMAIL",
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "subjectValueType": "username"
            },
            "spConnector": {
                "isAuthnRequestSigned": true,
                "assertionConsumerServices": [
                    {
                        "uri": "https://secure.compliance360.com/SSO/SSOResponse.aspx",
                        "index": 0,
                        "isDefault": true
                    }
                ],
                "entityId": "https://secure.compliance360.com/SSO/SSORequest.aspx"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "organizationId",
                        "displayLabel": "Organization ID",
                        "helpText": "Provide your Organization ID used for login to Compliance360",
                        "type": "inputText",
                        "targetProperties": [
                            "ssoConfig.attributes[0].multiValues[0]"
                        ]
                    }
                ]
            },
            "templateName": "SAIGlobal Compliance360",
            "templateLabel": "Compliance360",
            "image": "img/appIcons/compliance360-sai.jpg",
            "description": "Federation relationship with Compliance360"
        },
        {
            "templateName": "Concur",
            "templateLabel": "Concur",
            "description": "SaaS Application for Concur Solutions.",
            "image": "img/appIcons/concur.jpg",
            "ssoConfig": {
                "subjectType": "email-address",
                "subjectValueType": "mail",
                "subjectValue": "%session.ad.last.attr.mail",
                "samlProfiles": [
                    "web-browser-sso"
                ]
            },
            "spConnector": {
                "entityId": "https://www.concur.com",
                "encryptionType": "aes128",
                "isAuthnRequestSigned": false,
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false,
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://www.concursolutions.com/SAMLRedirector/ClientSAMLLogin.aspx"
                    }
                ]
            },
            "templatePropertyMetadata": {
                "variables": []
            }
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "tmName": "lastname",
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "tmName": "firstname",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "email",
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.cn}"
                        ],
                        "tmName": "Username",
                        "multiValueTypes": [
                            "username"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectValueType": "mail"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://sso.condecosoftware.com/sp/ACS.saml2"
                    }
                ],
                "entityId": "PING-CONDECO",
                "isAuthnRequestSigned": false,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "templateName": "condecosoftware",
            "templateLabel": "Condeco Software",
            "image": "img/appIcons/condeco.jpg",
            "description": "Federation relationship with Condeco Software"
        },
        {
            "spConnector": {
                "entityId": "$entityId$",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": ""
                    }
                ],
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false
            },
            "templateLabel": "Atlassian Confluence Enterprise",
            "templateName": "Confluence for Data Center",
            "description": "Federation relationship with Atlassian Confluence for Enterprise",
            "image": "img/appIcons/confluence.jpg",
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.sAMAccountName}",
                "subjectType": "unspecified",
                "subjectValueType": "username",
                "attributes": [
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "tmName": "sn",
                        "nameFormat": "unspecified",
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "tmName": "givenName",
                        "nameFormat": "unspecified",
                        "multiValues": [
                            "%{session.ad.last.attr.givenname}"
                        ],
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "tmName": "mail",
                        "nameFormat": "unspecified",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "tmName": "sAMAccountName",
                        "nameFormat": "unspecified",
                        "multiValues": [
                            "%{session.ad.last.attr.sAMAccountName}"
                        ],
                        "multiValueTypes": [
                            "username"
                        ]
                    }
                ],
                "samlProfiles": [
                    "web-browser-sso"
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "entityId",
                        "displayLabel": "Entity ID",
                        "type": "inputText",
                        "helpText": "Provide the entity ID.",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9:_.-\/]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), slash ( / ), colon ( : )or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "documentLink": "https://confluence.atlassian.com/cloud/saml-single-sign-on-873871238.html"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.ldap.last.attr.mail}"
                        ],
                        "tmName": "emailAddress",
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ldap.last.attr.sn}"
                        ],
                        "tmName": "LastName",
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ldap.last.attr.givenName}"
                        ],
                        "tmName": "FirstName",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    }
                ],
                "subjectValue": "%{session.ldap.last.attr.mail}",
                "subjectValueType": "mail"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$subDomain$.convercent.com/Saml20/Saml20"
                    }
                ],
                "entityId": "https://$subDomain$.convercent.com/",
                "isAuthnRequestSigned": false,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Provide the sub domain. For eg - If the SSO URL is https://company.convercent.com/Saml20/Saml20, then the sub domain is company.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ) or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateName": "Convercent",
            "templateLabel": "Convercent",
            "image": "img/appIcons/convercent.jpg",
            "description": "Federation relationship with Convercent",
            "documentLink": "https://www.convercent.com/news/convercent-announces-single-sign-capability"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "email",
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "tmName": "sn",
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "tmName": "givenName",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectValueType": "mail"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://sso.cordium.com/sp/ACS.saml2"
                    }
                ],
                "entityId": "https://sso.cordium.com",
                "isAuthnRequestSigned": false,
                "singleLogoutUri": "https://sso.cordium.com/sp/SLO.ssaml2",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "templateName": "cordium",
            "templateLabel": "Cordium",
            "image": "img/appIcons/cordium.jpg",
            "description": "Federation relationship with Cordium",
            "documentLink": ""
        },
        {
            "spConnector": {
                "entityId": "$serverType$.coupahost.com",
                "assertionConsumerServices": [
                    {
                        "isDefault": true,
                        "index": 0,
                        "uri": "https://$serverType$.coupahost.com/sp/ACS.saml2"
                    }
                ],
                "relayState": "https://$domainName$/sessions/saml_post"
            },
            "ssoConfig": {
                "attributes": [],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "serverType",
                        "displayLabel": "Production or Staging",
                        "helpText": "Select appropriate deployment environment.",
                        "type": "radio",
                        "values": {
                            "prdsso40": {
                                "value": "prdsso40",
                                "displayValue": "Production",
                                "targetProperties": [
                                    {
                                        "name": "spConnector.entityId",
                                        "value": "prdsso40.coupahost.com"
                                    },
                                    {
                                        "name": "spConnector.assertionConsumerServices[0].uri",
                                        "value": "https://prdsso40.coupahost.com/sp/ACS.saml2"
                                    }
                                ]
                            },
                            "devsso35": {
                                "value": "devsso35",
                                "displayValue": "Staging",
                                "targetProperties": [
                                    {
                                        "name": "spConnector.entityId",
                                        "value": "devsso35.coupahost.com"
                                    },
                                    {
                                        "name": "spConnector.assertionConsumerServices[0].uri",
                                        "value": "https://devsso35.coupahost.com/sp/ACS.saml2"
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "name": "domainName",
                        "displayLabel": "Instance Domain name",
                        "helpText": "Provide the coupahost instance domain name.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ) or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.relayState"
                        ]
                    }
                ]
            },
            "templateName": "Coupa",
            "templateLabel": "Coupa",
            "image": "img/appIcons/coupa.jpg",
            "description": "Federation relationship with Coupa"
        },
        {
            "image": "img/appIcons/cornerstone.jpg",
            "description": "Federation relationship with Cornerstone on-demand",
            "templateLabel": "Cornerstone on-demand",
            "templateName": "Cornerstone on-demand",
            "spConnector": {
                "entityId": "https://$subDomain$.csod.com",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$subDomain$.csod.com/SAMLDefault.aspx"
                    }
                ],
                "isAuthnRequestSigned": true,
                "singleLogoutUri": "https://$subDomain$.csod.com/samllogout.aspx",
                "wantResponseSigned": true
            },
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectValueType": "mail",
                "subjectType": "unspecified",
                "attributes": [
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "tmName": "NameID",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "samlProfiles": [
                    "web-browser-sso"
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "type": "inputText",
                        "helpText": "From the SSO URL like https://company.csod.com, sub Domain is company",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ) or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.singleLogoutUri",
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "documentLink": "n/a"
        },
        {
            "image": "img/appIcons/cylance.jpg",
            "description": "Federation relationship with Cylance",
            "spConnector": {
                "entityId": "https://login.cylance.com/EnterpriseLogin/ConsumeSaml",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://login.cylance.com/EnterpriseLogin/ConsumeSaml"
                    }
                ],
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false
            },
            "templateLabel": "Cylance",
            "templateName": "Cylance",
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.mail}",
                "attributes": [],
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectType": "unspecified",
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "documentLink": "n/a"
        },
        {
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "uri": "https://app.datadoghq.com/account/saml/assertion",
                        "index": 0,
                        "isDefault": true
                    }
                ],
                "entityId": "https://app.datadoghq.com/account/saml/metadata.xml"
            },
            "ssoConfig": {
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.sAMAccountName}"
                        ],
                        "tmName": "eduPersonPrincipalName",
                        "multiValueTypes": [
                            "username"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "tmName": "givenName",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "tmName": "sn",
                        "multiValueTypes": [
                            "lastname"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "templateName": "Datadog",
            "templateLabel": "Datadog",
            "image": "img/appIcons/Datadog.jpg",
            "description": "Federation relationship with DataDog"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "nameFormat": "unspecified",
                        "tmName": "email",
                        "multiValues" : ["%{session.ad.last.attr.mail}"],
                        "multiValueTypes" : ["mail"]
                    }
                ],
                "subjectType": "unspecified",
                "subjectValue": "%{session.ad.last.attr.objectGUID}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://ncpingfederate.dayforcehcm.com/sp/ACS.saml2"
                    }
                ],
                "encryptionType": "aes128",
                "entityId": "dayforcehcm",
                "isAuthnRequestSigned": false,
                "signatureType": "rsa-sha1",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "templateType": "sp",
            "templateName": "dayforceHCM",
            "templateLabel": "Dayforce HCM",
            "image": "img/appIcons/dayforce.jpg",
            "description": "Federation relationship with Dayforce HCM"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.sAMAccountName}"
                        ],
                        "tmName": "UserId",
                        "multiValueTypes": [
                            "username"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "tmName": "FirstName",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "tmName": "LastName",
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "Email",
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.sAMAccountName}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 1,
                        "isDefault": true,
                        "uri": "https://degreed.com/SAML/AssertionConsumerService"
                    }
                ],
                "entityId": "https://degreed.com/DegreedSP",
                "isAuthnRequestSigned": true,
                "singleLogoutUri": "https://degreed.com/SAML/SLOService",
                "singleLogoutResponseUri": "https://degreed.com/SAML/SLOService",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "templateName": "degreed",
            "templateLabel": "Degreed",
            "image": "img/appIcons/degreed.jpg",
            "description": "Federation Relationship with Degreed"
        },
        {
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectValueType": "mail"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$subDomain$.desk.com/auth/saml/acs"
                    }
                ],
                "encryptionType": "aes256",
                "entityId": "$subDomain$",
                "isAuthnRequestSigned": false,
                "signatureType": "rsa-sha256",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": true
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Provide the sub domain. For eg - If the URL is https://company.desk.com/auth/saml/acs, then the sub domain is company.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ) or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateName": "desk",
            "templateLabel": "Desk",
            "image": "img/appIcons/desk.jpg",
            "description": "Federation relationship with Desk",
            "documentLink": "https://support.desk.com/customer/portal/articles/2050550-agent-sso-via-saml-2-0-setup-details?b_id=6346"
        },
        {
            "spConnector": {
                "singleLogoutUri": "https://documoto.digabit.com:443/Portal/saml/SingleLogout/alias/defaultAlias",
                "encryptionType": "aes256",
                "assertionConsumerServices": [
                    {
                        "uri": "https://documoto.digabit.com:443/Portal/saml/SSO/alias/defaultAlias",
                        "isDefault": false,
                        "index": 0,
                        "binding": "http-artifact"
                    },
                    {
                        "isDefault": true,
                        "binding": "http-post",
                        "index": 1,
                        "uri": "https://documoto.digabit.com:443/Portal/saml/SSO/alias/defaultAlias"
                    },
                    {
                        "uri": "https://documoto.digabit.com:443/Portal/saml/SSO/alias/defaultAlias",
                        "isDefault": false,
                        "binding": "paos",
                        "index": 2
                    }
                ],
                "isAuthnRequestSigned": true,
                "signatureType": "rsa-sha256",
                "entityId": "https://documoto.digabit.com:443/Portal/saml/metadata/alias/defaultAlias"
            },
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectValueType": "mail",
                "attributes": [
                    {
                        "tmName": "memberof",
                        "multiValues": [
                            "%{session.ad.last.attr.memberof}"
                        ],
                        "multiValueTypes": [
                            "department"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "mail",
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "tmName": "givenName",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "tmName": "sn",
                        "multiValueTypes": [
                            "lastname"
                        ]
                    }
                ],
                "samlProfiles": [
                    "web-browser-sso",
                    "ecp"
                ]
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "templateName": "Digabit",
            "templateLabel": "Digabit",
            "image": "img/appIcons/digabit.jpg",
            "description": "Federation relationship with Digabit"
        },
        {
            "ssoConfig":{
                "attributes":[
                    {
                        "multiValues":[
                            "%{session.logon.last.username}"
                        ],
                        "tmName":"username",
                        "multiValueTypes":[
                            "username"
                        ]
                    }
                ],
                "subjectValue":"%{session.logon.last.username}",
                "subjectValueType":"username"
            },
            "spConnector":{
                "assertionConsumerServices":[
                    {
                        "index":0,
                        "isDefault":true,
                        "uri":"https://$subDomain$.directorsdesk.com/saml2login.aspx"
                    }
                ],
                "entityId":"https://$subDomain$.directorsdesk.com/login/sso/cgsh-demo",
                "isAuthnRequestSigned":false,
                "wantAssertionEncrypted":false,
                "wantAssertionSigned":false,
                "wantResponseSigned":false
            },
            "templatePropertyMetadata":{
                "variables":[
                    {
                        "name":"subDomain",
                        "displayLabel":"Sub Domain",
                        "helpText":"Provide the sub domain. For eg - If the ACS URL is https://company.directorsdesk.com/saml2login.aspx, then the sub domain is company.",
                        "type":"inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ) or hyphen ( - )."
                            }
                        ],
                        "targetProperties":[
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateName":"DirectorsDesk",
            "templateLabel":"DirectorsDesk",
            "image": "img/appIcons/directorsdesk.jpg",
            "description":"Federation relationship with DirectorsDesk"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "mail",
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "tmName": "givenName",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "tmName": "sn",
                        "multiValueTypes": [
                            "lastname"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectValueType": "mail"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 1,
                        "isDefault": true,
                        "uri": "https://app.divvyhq.com/saml2/acs/"
                    }
                ],
                "entityId": "https://app.divvyhq.com/saml2/metadata/",
                "isAuthnRequestSigned": false,
                "singleLogoutUri": "https://app.divvyhq.com/saml2/ls/post/",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "templateName": "DIVVYHQ",
            "templateLabel": "DIVVYHQ",
            "image": "img/appIcons/divvyhq.jpg",
            "description": "Federation relationship with DivvyHQ",
            "documentLink": "https://help.divvyhq.com/hc/en-us/articles/235391187-Enabling-and-Providing-Single-Sign-On-SSO-"
        },
        {
            "spConnector": {
                "entityId": "https://account.docusign.com/organizations/$orgID$/saml2",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://account.docusign.com/organizations/$orgID$/saml2/login"
                    }
                ],
                "signatureType": "rsa-sha1",
                "isAuthnRequestSigned": true,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": true
            },
            "templateLabel": "DocuSign",
            "templateName": "DocuSign",
            "description": "Federation relationship with DocuSign",
            "image": "img/appIcons/docusign.jpg",
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.sAMAccountName}",
                "subjectType": "unspecified",
                "subjectValueType": "username",
                "attributes": [
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "tmName": "emailAddress",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "nameFormat": "unspecified",
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "tmName": "givenname",
                        "multiValues": [
                            "%{session.ad.last.attr.name}"
                        ],
                        "nameFormat": "unspecified",
                        "multiValueTypes": [
                            "username"
                        ]
                    },
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "tmName": "surname",
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "nameFormat": "unspecified",
                        "multiValueTypes": [
                            "lastname"
                        ]
                    }
                ],
                "samlProfiles": [
                    "web-browser-sso"
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "orgID",
                        "displayLabel": "Organzation ID",
                        "type": "inputText",
                        "helpText": "Provide the organization id registered with docusign. For eg - If the ACS URL is https://account.docusign.com/organizations/abcd1234/saml2, then abcd1234 is the organization id.",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    },
                    {
                        "name": "accountType",
                        "displayLabel": "Account Type",
                        "type": "radio",
                        "helpText": "Select the type of docusign account you have.",
                        "values": {
                            "demo": {
                                "value": "demo",
                                "displayValue": "Demo Account",
                                "targetProperties": [
                                    {
                                        "name": "spConnector.entityId",
                                        "value": "https://account-d.docusign.com/organizations/$orgID$/saml2"
                                    },
                                    {
                                        "name": "spConnector.assertionConsumerServices[0].uri",
                                        "value": "https://account-d.docusign.com/organizations/$orgID$/saml2/login"
                                    }
                                ]
                            },
                            "production": {
                                "value": "production",
                                "displayValue": "Production",
                                "targetProperties": [
                                    {
                                        "name": "spConnector.entityId",
                                        "value": "https://account.docusign.com/organizations/$orgID$/saml2"
                                    },
                                    {
                                        "name": "spConnector.assertionConsumerServices[0].uri",
                                        "value": "https://account.docusign.com/organizations/$orgID$/saml2/login"
                                    }
                                ]
                            }
                        },
                        "relatedVariable": [
                            "orgID"
                        ]
                    }
                ]
            },
            "documentLink": "https://www.docusign.com/supportdocs/ndse-admin-guide/Content/identity-providers.htm#Set"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.sAMAccountName}"
                        ],
                        "tmName": "$accountID$.com/Accountname",
                        "multiValueTypes": [
                            "username"
                        ]
                    }
                ],
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectType": "unspecified",
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://secure.dome9.com/sso/saml/$accountID$"
                    }
                ],
                "entityId": "https://secure.dome9.com/",
                "isAuthnRequestSigned": false,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "accountID",
                        "displayLabel": "Account ID",
                        "helpText": "Enter your Account ID. For example, if your ACS Url is  https://secure.dome9.com/sso/saml/abc, enter: abc",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "ssoConfig.attributes[0].tmName",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "templateName": "dome9",
            "templateLabel": "Dome9",
            "image": "img/appIcons/dome9.jpg",
            "documentLink": "https://dome9-security.atlassian.net/wiki/spaces/DG/pages/43448441/Setting+Dome9+SSO+with+Generic+Custom+configuration"
        },
        {
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectType": "x509-subject",
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "email",
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.displayName}"
                        ],
                        "tmName": "name",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    }
                ],
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValueType": "mail"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "uri": "https://$subDomain$.domo.com/auth/saml",
                        "index": 0,
                        "isDefault": true
                    }
                ],
                "relayState": "https://$subDomain$.domo.com/auth/",
                "entityId": "https://$subDomain$.domo.com"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Company Sub Domain",
                        "helpText": "Provide the company sub domain from the ACS URL For eg - In ACS URL https://company.domo.com/auth/saml, company is the sub domain.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.relayState",
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateName": "Domo",
            "templateLabel": "Domo",
            "image": "img/appIcons/domo.jpg",
            "description": "Federation relationship with Domo"
        },
        {
            "image": "img/appIcons/dropbox.jpg",
            "description": "Federation relationship with Dropbox",
            "spConnector": {
                "entityId": "dropbox",
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": true,
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://www.dropbox.com/saml_login"
                    }
                ]
            },
            "templateLabel": "Dropbox",
            "templateName": "Dropbox",
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectValueType": "mail",
                "subjectType": "unspecified",
                "samlProfiles": [
                    "web-browser-sso"
                ]
            },
            "documentLink": "n/a"
        },
        {
            "spConnector": {
                "entityId": "druva-cloud",
                "assertionConsumerServices": [
                    {
                        "isDefault": true,
                        "index": 0,
                        "uri": "https://cloud.druva.com/wrsaml/consume"
                    }
                ],
                "singleLogoutUri": "https://cloud.druva.com/webrestore/dologout"
            },
            "ssoConfig": {
                "subjectValue": "%{session.ldap.last.attr.RBCIBusEmailAddress}",
                "attributes": [
                    {
                        "multiValues": [
                            "$customerToken$"
                        ],
                        "tmName": "insync_auth_token",
                        "multiValueTypes": [
                            "custom"
                        ]
                    }
                ],
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "customerToken",
                        "displayLabel": "Customer Token",
                        "helpText": "The value of this attribute comes from the SAML configuration page on the inSync Cloud Settings section.",
                        "type": "inputText",
                        "targetProperties": [
                            "ssoConfig.attributes[0].multiValues[0]"
                        ]
                    }
                ]
            },
            "templateName": "Druva",
            "templateLabel": "Druva",
            "image": "img/appIcons/druva.jpg",
            "description": "Federation relationship with Druva"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "xdds_userid",
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.sAMAccountName}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://fax2mail.easylink.com/samlsso.do"
                    }
                ],
                "entityId": "fax2mail.com",
                "isAuthnRequestSigned": false,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "templateName": "easylink",
            "templateLabel": "easylink",
            "image": "img/appIcons/easylink.jpg",
            "description": "Federation relationship with easylink"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "NameID",
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "subjectValue": "%{session.logon.last.logonname}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 1,
                        "isDefault": true,
                        "uri": "https://$subDomain$.ecitele.com/@app/saml/acs"
                    }
                ],
                "entityId": "http://$subDomain$.ecitele.com/",
                "isAuthnRequestSigned": true,
                "singleLogoutUri": "https://$subDomain$.ecitele.com/@app/saml/slo",
                "relayState": "https://$subDomain$.ecitele.com",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Provide the sub domain. For eg - If the entity Id is http://company.ecitele.com/, then the sub domain is company.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.singleLogoutUri",
                            "spConnector.relayState",
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateName": "ecitele",
            "templateLabel": "ecitele",
            "image": "img/appIcons/ecitele.jpg",
            "description": "Federation relationship with Ecitele",
            "documentLink": ""
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.sAMAccountname}"
                        ],
                        "tmName": "eppn",
                        "multiValueTypes": [
                            "username"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "tmName": "sn",
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "tmName": "givenName",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "mail",
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "affiliation",
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "subjectValue": "%{session.logon.last.username}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 2,
                        "isDefault": false,
                        "uri": "https://sso-users.educause.edu/"
                    },
                    {
                        "index": 1,
                        "isDefault": true,
                        "uri": "https://sso.educause.edu/sp/ACS.saml2"
                    }
                ],
                "entityId": "https://sso.educause.edu/sp",
                "isAuthnRequestSigned": true,
                "relayState": "http://www.educause.edu/",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "templateName": "educause",
            "templateLabel": "educause.edu",
            "image": "img/appIcons/educause.jpg",
            "description": "Federation relationship with Educause",
            "documentLink": "https://www.educause.edu/idp_setup/info"
        },
        {
            "spConnector": {
                "singleLogoutUri": "https://monitor.eduroam.org/sp/module.php/saml/sp/saml2-logout.php/default-sp",
                "assertionConsumerServices": [
                    {
                        "uri": "https://monitor.eduroam.org/sp/module.php/saml/sp/saml2-acs.php/default-sp",
                        "index": 0,
                        "isDefault": true
                    }
                ],
                "entityId": "https://monitor.eduroam.org/sp/module.php/saml/sp/metadata.php/default-sp"
            },
            "ssoConfig": {
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValue": "%{session.logon.last.username}",
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.ldap.last.attr.mail}"
                        ],
                        "tmName": "eduPersonTargetedID",
                        "multiValueTypes": [
                            "objectGUIDencoded"
                        ]
                    },
                    {
                        "tmName": "email",
                        "multiValues": [
                            "%{session.ldap.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "tmName": "commonName",
                        "multiValues": [
                            "%{session.ldap.last.attr.cn}"
                        ],
                        "multiValueTypes": [
                            "firstname"
                        ]
                    }
                ],
                "subjectType": "transient",
                "subjectValueType": "username"
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "templateName": "eduroam.org",
            "templateLabel": "eduroam.org",
            "image": "img/appIcons/eduroam.jpg",
            "description": "Federation relationship with Eduroam"
        },
        {
            "ssoConfig":{
                "attributes":[
                    {
                        "multiValues":[
                            "%{session.logon.last.username}"
                        ],
                        "tmName":"username",
                        "multiValueTypes":[
                            "username"
                        ]
                    },
                    {
                        "multiValues":[
                            "%{session.ad.last.attr.sn}"
                        ],
                        "tmName":"lastname",
                        "multiValueTypes":[
                            "lastname"
                        ]
                    },
                    {
                        "multiValues":[
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "tmName":"firstname",
                        "multiValueTypes":[
                            "firstname"
                        ]
                    },
                    {
                        "multiValues":[
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName":"email",
                        "multiValueTypes":[
                            "mail"
                        ]
                    }
                ],
                "subjectValue":"%{session.ad.last.attr.mail}",
                "subjectValueType":"mail"
            },
            "spConnector":{
                "assertionConsumerServices":[
                    {
                        "index":1,
                        "isDefault":true,
                        "uri":"https://$subDomain$.edx.org/auth/complete/tpa-saml/"
                    }
                ],
                "entityId":"https://$subDomain$.edx.org/",
                "isAuthnRequestSigned":false,
                "wantAssertionEncrypted":false,
                "wantAssertionSigned":false,
                "wantResponseSigned":false
            },
            "templatePropertyMetadata":{
                "variables":[
                    {
                        "name":"subDomain",
                        "displayLabel":"Sub Domain",
                        "helpText":"Provide the sub domain. For eg - If the SSO URL is https://company.edx.org/auth/complete/tpa-saml/, then the sub domain is company.",
                        "type":"inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties":[
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "documentLink":"http://edx.readthedocs.io/projects/edx-installing-configuring-and-running/en/latest/configuration/tpa/tpa_integrate_open/tpa_SAML_IdP.html#configuration-options-for-saml-providers",
            "templateName":"EdX",
            "templateLabel":"EdX",
            "image": "img/appIcons/edx.jpg",
            "description":"Federation relationship with EdX"
        },
        {
            "ssoConfig":{
                "subjectValue":"%{session.ad.last.attr.mail}",
                "subjectValueType":"mail"
            },
            "spConnector":{
                "assertionConsumerServices":[
                    {
                        "index":0,
                        "isDefault":true,
                        "uri":"https://www.egencia.com/auth/v1/artifactConsumer"
                    }
                ],
                "entityId":"https://www.egencia.com/auth/v1",
                "isAuthnRequestSigned":false,
                "wantAssertionEncrypted":false,
                "wantAssertionSigned":false,
                "wantResponseSigned":false
            },
            "templatePropertyMetadata":{
                "variables":[

                ]
            },
            "templateName":"Egencia",
            "templateLabel":"Egencia",
            "image": "img/appIcons/egencia.jpg",
            "description":"Federation relationship with Egencia"
        },
        {
            "ssoConfig": {
                "subjectValue": "%{session.logon.last.username}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [{
                    "index": 0,
                    "isDefault": true,
                    "uri": "https://$subDomain$.egnyte.com/samlconsumer/adfs"
                }],
                "entityId": "https://$subDomain$.egnyte.com",
                "isAuthnRequestSigned": false,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [{
                    "name": "subDomain",
                    "displayLabel": "Sub Domain",
                    "helpText": "Enter sub domain. For example, if your ACS url is https://company.egnyte.com/samlconsumer/adfs, enter: company",
                    "type": "inputText",
                    "validator": [
                        {
                            "type": "regex-validator",
                            "pattern": "^[a-zA-Z0-9_.-]*$",
                            "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                        }
                    ],
                    "targetProperties": ["spConnector.entityId", "spConnector.assertionConsumerServices[0].uri"]
                }]
            },
            "templateName": "egnyte",
            "templateLabel": "Egnyte",
            "image": "img/appIcons/egnyte.jpg"
        },
        {
            "spConnector": {
                "isAuthnRequestSigned": true,
                "assertionConsumerServices": [
                    {
                        "uri": "https://app.elastica.net/saml2/acs/",
                        "index": 0,
                        "isDefault": true
                    }
                ],
                "entityId": "https://app.elastica.net/"
            },
            "ssoConfig": {
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "Principal SID",
                        "encryptionType": "aes256",
                        "multiValueTypes": [
                            "objectGUIDencoded"
                        ]
                    },
                    {
                        "encryptionType": "aes256",
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "tmName": "Surname",
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "tmName": "Given Name",
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "encryptionType": "aes256",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "tmName": "UPN",
                        "multiValues": [
                            "%{session.ad.last.attr.userPrincipalName}"
                        ],
                        "encryptionType": "aes256",
                        "multiValueTypes": [
                            "username"
                        ]
                    },
                    {
                        "encryptionType": "aes256",
                        "tmName": "Name ID",
                        "multiValues": [
                            "%{session.ad.last.attr.userPrincipalName}"
                        ],
                        "multiValueTypes": [
                            "username"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "templateName": "Elastica",
            "templateLabel": "Elastica",
            "image": "img/appIcons/Elastica.jpg",
            "description": "Federation relationship with Elastica"
        },
        {
            "ssoConfig":{
                "subjectValue":"%{session.logon.last.username}",
                "subjectValueType":"username"
            },
            "spConnector":{
                "assertionConsumerServices":[
                    {
                        "index":0,
                        "isDefault":true,
                        "uri":"https://$subDomain$.euromonitor.com/sp/ACS.saml2"
                    }
                ],
                "isAuthnRequestSigned":true,
                "wantAssertionEncrypted":false,
                "wantAssertionSigned":false,
                "wantResponseSigned":false
            },
            "templatePropertyMetadata":{
                "variables":[
                    {
                        "name":"subDomain",
                        "displayLabel":"Sub Domain",
                        "helpText":"Provide the sub domain. For eg - If the SSO URL is https://company.euromonitor.com/sp/ACS.saml2, then the sub domain is company.",
                        "type":"inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties":[
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "templateName":"Euromonitor",
            "templateLabel":"Euromonitor",
            "image": "img/appIcons/euromonitor.jpg",
            "description":"Federation relationship with Euromonitor"
        },
        {
            "ssoConfig": {
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectType": "persistent",
                "attributes": [
                    {
                        "tmName": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.sAMAccountName}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "entityId": "https://$subDomain$.evidence.com",
                "assertionConsumerServices": [
                    {
                        "isDefault": true,
                        "index": 0,
                        "uri": "https://$subDomain$.evidence.com/?class=UIX&proc=Login"
                    }
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Provide your sub domain. For eg - If your SSO URL is https://company.evidence.com, then the sub domain is company.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "templateName": "Evidence",
            "templateLabel": "Evidence",
            "image": "img/appIcons/evidence-axon.jpg",
            "description": "Federation relationship with Evidence.com"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "mail",
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.internationalISDNNumber} ",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://auth.s1.exacttarget.com/Shibboleth.sso/SAML2/POST"
                    }
                ],
                "entityId": "https://sp.exacttarget.com/shibboleth-sp",
                "isAuthnRequestSigned": false,
                "singleLogoutUri": "https://auth.s1.exacttarget.com/Shibboleth.sso/SLO/Artifact",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "templateName": "Salesforce Marketing cloud exacttarget",
            "templateLabel": "exacttarget",
            "image": "img/appIcons/marketingcloud-salesforce.jpg",
            "description": "Federation relationship with exacttarget"
        },
        {
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.sAMAccountName}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$subDomain$.exceedlms.com/authentication/saml_login"
                    }
                ],
                "entityId": "https://$subDomain$.exceedlms.com/authentication/saml/sp",
                "isAuthnRequestSigned": false,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Enter your sub domain. For example, if your ACS URL is https://yourcompany.exceedlms.com/authentication/saml_login, enter: yourcompany",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.entityId"
                        ]
                    },
                    {
                        "name": "environment",
                        "displayLabel": "Environment",
                        "helpText":"Choose environment type. Environment type can be 'Production' or 'Staging'",
                        "type": "radio",
                        "values": {
                            "staging": {
                                "value": "staging",
                                "displayValue": "Staging",
                                "targetProperties": [
                                    {
                                        "name": "spConnector.assertionConsumerServices[0].uri",
                                        "value": "https://$subDomain$.exceedlms-staging.com/authentication/saml_login"
                                    }
                                ]
                            },
                            "production": {
                                "value": "production",
                                "displayValue": "Production",
                                "targetProperties": [
                                    {
                                        "name": "spConnector.assertionConsumerServices[0].uri",
                                        "value": "https://$subDomain$.exceedlms.com/authentication/saml_login"
                                    }
                                ]
                            }
                        },
                        "relatedVariable": [
                            "subDomain"
                        ]
                    }
                ]
            },
            "templateName": "exceedlms",
            "templateLabel": "ExceedLMS (Intellum)",
            "image": "img/appIcons/exceed-intellum.jpg",
            "documentLink": "https://helpdesk.intellum.com/hc/en-us/articles/201622463-Setting-up-Single-Sign-On-SSO-from-My-Company-Portal-or-Internal-Website",
            "description": "Federation relationship with ExceedLMS (Intellum)"
        },
        {
            "spConnector": {
                "entityId": "https://login.factset.com",
                "singleLogoutUri": "https://login.factset.com/services/saml2/slo/",
                "assertionConsumerServices": [
                    {
                        "isDefault": true,
                        "index": 0,
                        "uri": "https://login.factset.com/services/saml2/"
                    }
                ]
            },
            "ssoConfig": {
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "email",
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "tmName": "sn",
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "tmName": "givenName",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValueType": "mail",
                "subjectType": "persistent"
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "templateName": "FactSet",
            "templateLabel": "FactSet",
            "image": "img/appIcons/factset.jpg",
            "description": "Federation relationship with Factset"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.logon.last.logonname}"
                        ],
                        "tmName": "logonid",
                        "multiValueTypes": [
                            "username"
                        ]
                    },
                    {
                        "encrypt": true,
                        "multiValues": [
                            "%{session.logon.last.password}"
                        ],
                        "tmName": "credential",
                        "multiValueTypes": [
                            "custom"
                        ]
                    }
                ],
                "subjectValue": "%{session.sso.token.last.username}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$subDomain$.feim.com/saml/sp/profile/post/acs"
                    }
                ],
                "entityId": "https://$subDomain$.feim.com/storefrontdr_sp",
                "isAuthnRequestSigned": true,
                "singleLogoutUri": "https://$subDomain$.feim.com/saml/sp/profile/post/sls",
                "singleLogoutResponseUri": "https://$subDomain$.feim.com/saml/sp/profile/post/slr",
                "wantAssertionEncrypted": true,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Specify Sub Domain which is used to setup if your entityId, for example, if your entityId is https://acme.feim.com/acme_sp then your sub domain is acme.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.singleLogoutUri",
                            "spConnector.singleLogoutResponseUri"
                        ]
                    }
                ]
            },
            "templateName": "feim",
            "templateLabel": "First Eagle Investment Management",
            "image": "img/appIcons/feim.jpg",
            "description": "Federation relationship with First Eagle Inventment Management"
        },
        {
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "uri": "https://www.flatterfiles.com/saml",
                        "index": 0,
                        "isDefault": true
                    }
                ],
                "entityId": "https://www.flatterfiles.com/saml"
            },
            "ssoConfig": {
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectType": "persistent",
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "tmName": "LastName",
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "tmName": "FirstName",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    }
                ],
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "templateName": "Flatterfiles",
            "templateLabel": "Flatterfiles",
            "image": "img/appIcons/flatterfiles.jpg",
            "description": "Federation relationship with Flatterfiles"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "tmName": "LastName",
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "tmName": "FirstName",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "Email",
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.employeeID}"
                        ],
                        "tmName": "EmployeeID",
                        "multiValueTypes": [
                            "employeeId"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.employeeID}",
                "subjectValueType": "employeeId"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://flex.plusone.com/Saml2Login.aspx"
                    }
                ],
                "entityId": "Flex_PlusOne_PROD",
                "isAuthnRequestSigned": false,
                "singleLogoutUri": "",
                "singleLogoutResponseUri": "",
                "relayState": "",
                "spCertificate": "",
                "spEncryptionCertificate": "",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "templateName": "flexoneplus",
            "templateLabel": "Flex-OnePlus",
            "image": "img/appIcons/fluxplusone.jpg",
            "description": "Federation relationship with Flex-OnePlus"
        },
        {
            "spConnector": {
                "entityId": "http://www.gartner.com",
                "assertionConsumerServices": [
                    {
                        "isDefault": true,
                        "index": 0,
                        "uri": "https://ssofed.gartner.com/sp/ACS.saml2"
                    }
                ]
            },
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.mail}",
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "attributes": [
                    {
                        "tmName": "Last Name",
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "tmName": "First Name",
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "Email",
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "templateName": "Gartner",
            "templateLabel": "Gartner",
            "image": "img/appIcons/gartner.jpg",
            "description": "Federation relationship with Gartner"
        },
        {
            "ssoConfig": {
                "subjectType": "entity",
                "subjectValue": "%{session.ad.last.attr.employeeID}",
                "subjectValueType": "username",
                "attributes": [{
                    "multiValues": ["%{session.ad.last.attr.displayName}"],
                    "tmName": "NameID",
                    "multiValueTypes": ["username"],
                    "encrypt": false,
                    "encryptionType": "aes128",
                    "nameFormat": "unspecified"
                }]
            },
            "spConnector": {
                "assertionConsumerServices": [{
                    "binding": "http-post",
                    "index": 0,
                    "isDefault": true,
                    "uri": "https://gm1.geolearning.com/geonext/$customerId$/saml.geo"
                }],
                "encryptionType": "aes128",
                "entityId": "https://gm1.geolearning.com/geonext/$customerId$/saml.geo",
                "isAuthnRequestSigned": false,
                "signatureType": "rsa-sha1",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": true
            },
            "templatePropertyMetadata": {
                "variables": [{
                    "name": "customerId",
                    "displayLabel": "Customer ID",
                    "helpText": "Specify Customer Id which is used to setup entityId, example https://gm1.geolearning.com/geonext/<customerId>/saml.geo",
                    "type": "inputText",
                    "validator": [
                        {
                            "type": "regex-validator",
                            "pattern": "^[a-zA-Z0-9_.-]*$",
                            "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                        }
                    ],
                    "targetProperties": [
                        "spConnector.assertionConsumerServices[0].uri",
                        "spConnector.entityId"
                    ]
                }]
            },
            "templateType": "sp",
            "templateName": "geolearning",
            "templateLabel": "GeoLearning",
            "image": "img/appIcons/GeoLearning.jpg",
            "description": "Federation relationship with GeoLearning"
        },
        {
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "uri": "https://www.getabstract.com/ACS.do",
                        "index": 0,
                        "isDefault": true
                    }
                ],
                "entityId": "getabstract"
            },
            "ssoConfig": {
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.cn}"
                        ],
                        "multiValueTypes": [
                            "username"
                        ],
                        "tmName": "Username"
                    },
                    {
                        "tmName": "Email",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "username"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectValueType": "username",
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValueTypeType": "username"
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "templateLabel": "getabstract",
            "templateName": "getabstract",
            "image": "img/appIcons/getabstract.jpg",
            "description": "Federation relationship with }getabstract"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "NameID",
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.lastname}"
                        ],
                        "tmName": "lastname",
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.firstname}"
                        ],
                        "tmName": "firstname",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    }
                ],
                "subjectValue": "%{session.logon.last.username}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$subDomain$.gildan.com/dispatcher/SAML2AuthService?siteurl=$subDomain$"
                    }
                ],
                "entityId": "https://$subDomain$.gildan.com",
                "isAuthnRequestSigned": false,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Provide the sub domain. For eg - If the entity Id is https://company.gildan.com, then the sub domain is company.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateName": "gildan",
            "templateLabel": "Gildan",
            "image": "img/appIcons/gildan.jpg",
            "description": "Federation relationship with Gildan",
            "documentLink": ""
        },
        {
            "spConnector": {
                "entityId": "https://github.com/orgs/$organization$",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://github.com/orgs/$organization$/sso"
                    }
                ],
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false
            },
            "templateLabel": "GitHub.com",
            "templateName": "GitHub.com",
            "description": "Federation relationship with GitHub.com",
            "image": "img/appIcons/GitHub.jpg",
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectType": "email-address",
                "subjectValueType": "mail",
                "attributes": [],
                "samlProfiles": [
                    "web-browser-sso"
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "organization",
                        "displayLabel": "Organization",
                        "helpText": "Provide your GitHub organization name. For eg - In https://github.com/orgs/testorg, organization name is testorg.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "documentLink": ""
        },
        {
            "spConnector": {
                "entityId": "https://$hostname$",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$hostname$/saml/consume"
                    }
                ],
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false
            },
            "templateLabel": "GitHub Enterprise",
            "templateName": "GitHub Enterprise",
            "description": "Federation relationship with GitHub Enterprise",
            "image": "img/appIcons/GitHub.jpg",
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.sAMAccountName}",
                "subjectType": "unspecified",
                "subjectValueType": "username",
                "attributes": [],
                "samlProfiles": [
                    "web-browser-sso"
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "hostname",
                        "displayLabel": "Hostname",
                        "type": "inputText",
                        "helpText": "Provide only the hostname where GitHub Enterprise is hosted. For eg - test.github.com.",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "documentLink": "https://help.github.com/enterprise/2.10/admin/guides/user-management/using-saml/"
        },
        {
            "image": "img/appIcons/Gitlab.jpg",
            "description": "Federation relationship with GitLab",
            "spConnector": {
                "entityId": "$domainName$",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$domainName$/users/auth/saml/callback"
                    }
                ],
                "singleLogoutUri": "https://$domainName$/auth/saml/slo",
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false
            },
            "templateLabel": "GitLab",
            "templateName": "GitLab",
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.sAMAccountName}",
                "subjectType": "entity",
                "subjectValueType": "username",
                "attributes": [
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "tmName": "email",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "tmName": "first_name",
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "tmName": "last_name",
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "tmName": "name",
                        "multiValues": [
                            "%{session.ad.last.attr.givenName} %{session.ad.last.attr.sn}"
                        ],
                        "multiValueTypes": [
                            "username"
                        ]
                    }
                ],
                "samlProfiles": [
                    "web-browser-sso"
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "domainName",
                        "displayLabel": "Domain Name",
                        "type": "inputText",
                        "helpText": "Provide the domain name from the callback URL. For eg - If the callback URL is https://company.com/users/auth/saml/callback, then domain name is company.com.",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.singleLogoutUri"
                        ]
                    }
                ]
            },
            "documentLink": "https://docs.gitlab.com/ee/integration/saml.html"
        },
        {
            "spConnector": {
                "entityId": "https://login.citrixonline.com/saml/sp",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://login.citrixonline.com/saml/acs"
                    }
                ],
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false,
                "isAuthnRequestSigned": true,
                "relayState": "$relayState$",
                "singleLogoutUri": "https://login.citrixonline.com/saml/SingleLogout"
            },
            "templateLabel": "Citrix GoToMeeting",
            "templateName": "GoToMeeting",
            "description": "Federation relationship with Citrix GoToMeeting",
            "image": "img/appIcons/gotomeeting.jpg",
            "ssoConfig": {
                "subjectValue": "%{session.ldap.last.attr.mail}",
                "subjectType": "unspecified",
                "subjectValueType": "mail",
                "samlProfiles": [
                    "web-browser-sso"
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "gotoProduct",
                        "displayLabel": "Select your GoTo Product",
                        "type": "dropdown",
                        "helpText": "Select the GoTo Product.",
                        "values": {
                            "GoToMeeting": {
                                "value": "GoToMeeting",
                                "displayValue": "GoToMeeting",
                                "targetProperties": [
                                    {
                                        "name": "spConnector.relayState",
                                        "value": "https://global.gotomeeting.com"
                                    }
                                ]
                            },
                            "GoToWebinar": {
                                "value": "GoToWebinar",
                                "displayValue": "GoToWebinar",
                                "targetProperties": [
                                    {
                                        "name": "spConnector.relayState",
                                        "value": "https://global.gotowebinar.com"
                                    }
                                ]
                            },
                            "GoToTraining": {
                                "value": "GoToTraining",
                                "displayValue": "GoToTraining",
                                "targetProperties": [
                                    {
                                        "name": "spConnector.relayState",
                                        "value": "https://global.gototraining.com"
                                    }
                                ]
                            },
                            "OpenVoice": {
                                "value": "OpenVoice",
                                "displayValue": "OpenVoice",
                                "targetProperties": [
                                    {
                                        "name": "spConnector.relayState",
                                        "value": "https://global.openvoice.com"
                                    }
                                ]
                            },
                            "GoToAssist": {
                                "value": "GoToAssist",
                                "displayValue": "GoToAssist",
                                "targetProperties": [
                                    {
                                        "name": "spConnector.relayState",
                                        "value": "https://desk.gotoassist.com"
                                    }
                                ]
                            }
                        }
                    }
                ]
            },
            "documentLink": "https://support.citrixonline.com/en_US/Meeting/all_files/G2M710001"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "tmName": "Last Name",
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "tmName": "First Name",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    }
                ],
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectValueType": "mail"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$subDomain$.greenhouse.io/users/saml/consume"
                    }
                ],
                "entityId": "$subDomain$.greenhouse.io",
                "isAuthnRequestSigned": false,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Provide the sub domain. For eg if the ACS URL is https://company.greenhouse.io/users/saml/consume, the sub domain is company.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateName": "greenhouse",
            "templateLabel": "Greenhouse",
            "image": "img/appIcons/greenhouse.jpg",
            "description": "Federation Relationship with Greenhouse",
            "documentLink": "https://docs.microsoft.com/en-us/azure/active-directory/active-directory-saas-greenhouse-tutorial"
        },
        {
            "templateName": "gsuite",
            "templateLabel": "Google Suite",
            "image": "img/appIcons/gsuite.jpg",
            "description": "Federation relationship with Google's GSuite",
            "ssoConfig": {
                "subjectType": "email-address",
                "subjectValueType": "mail",
                "subjectValue": "%{session.ad.last.attr.mail}",
                "samlProfiles": [
                    "web-browser-sso"
                ]
            },
            "spConnector": {
                "entityId": "http://google.com/a/$domainName$/",
                "encryptionType": "aes128",
                "isAuthnRequestSigned": false,
                "relayState": "https://www.google.com/a/$domainName$/ServiceLogin?continue=https://$serviceParameter$",
                "spCertificate": "",
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false,
                "spEncryptionCertificate": "",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://www.google.com/a/$domainName$/acs"
                    }
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "useDomainIssuer",
                        "displayLabel": "Use domain specific issuer",
                        "type": "radio",
                        "defaultValue": "false",
                        "helpText": "Select Yes if you have a domain specific issuer.",
                        "values": {
                            "true": {
                                "value": "true",
                                "displayValue": "Yes",
                                "targetProperties": [
                                    {
                                        "name": "spConnector.entityId",
                                        "value": "google.com/a/$domainName$"
                                    },
                                    {
                                        "name": "spConnector.assertionConsumerServices[0].uri",
                                        "value": "https://www.google.com/a/$domainName$/acs"
                                    },
                                    {
                                        "name": "spConnector.relayState",
                                        "value": "https://www.google.com/a/$domainName$/ServiceLogin?continue=https://$serviceParameter$"
                                    }
                                ]
                            },
                            "false": {
                                "value": "false",
                                "displayValue": "No",
                                "targetProperties": [
                                    {
                                        "name": "spConnector.entityId",
                                        "value": "google.com"
                                    },
                                    {
                                        "name": "spConnector.assertionConsumerServices[0].uri",
                                        "value": "https://www.google.com/a/$domainName$/acs"
                                    },
                                    {
                                        "name": "spConnector.relayState",
                                        "value": "https://www.google.com/a/$domainName$/ServiceLogin?continue=https://$serviceParameter$"
                                    }
                                ]
                            }
                        },
                        "relatedVariable": [
                            "domainName",
                            "serviceParameter"
                        ]
                    },
                    {
                        "name": "domainName",
                        "displayLabel": "Domain Name",
                        "value": "domainName",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "helpText": "Provide your domain name configured in G-suite."
                    },
                    {
                        "name": "serviceParameter",
                        "displayLabel": "Service Provider’s Service Parameter",
                        "value": "serviceParameter",
                        "type": "inputText",
                        "defaultValue": "mail.google.com",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9._-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "helpText": "Provide the parameter for the service to enable like mail, calendar, drive etc. For example, mail.google.com"
                    }
                ]
            }
        },
        {
            "ssoConfig": {
                "subjectType": "unspecified",
                "subjectValue": "%{session.logon.last.username}",
                "subjectValueType": "mail"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$halogenSite$/saml/SSO"
                    }
                ],
                "encryptionType": "aes128",
                "entityId": "https://$halogenSite$/saml/metadata",
                "isAuthnRequestSigned": true,
                "signatureType": "rsa-sha1",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "halogenSite",
                        "displayLabel": "Halogen Site",
                        "helpText": "Halogen Site is used to setup entityId, example https://<halogenSite>/saml/metadata",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "templateType": "sp",
            "templateName": "halogen",
            "templateLabel": "Halogen Software",
            "image": "img/appIcons/Halogen.jpg",
            "description": "Federation relationship with Halogen Software"
        },
        {
            "image": "img/appIcons/hbp.jpg",
            "description": "Federation relationship with Harvard Business Publishing",
            "spConnector": {
                "entityId": "sp:cl:hbsp:saml2",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://myhbp.org/ping/sp/ACS.saml2"
                    }
                ],
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false
            },
            "templateLabel": "Harvard Business Publishing",
            "templateName": "Harvard Business Publishing",
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.mail}",
                "attributes": [],
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectType": "persistent",
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "documentLink": "n/a"
        },
        {
            "ssoConfig": {
                "subjectValue": "%{session.logon.last.logonname}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://sso.heroku.com/saml/$companyName$/finalize"
                    }
                ],
                "entityId": "https://sso.heroku.com/saml/$companyName$/init",
                "isAuthnRequestSigned": false,
                "relayState": "https://sso.heroku.com/saml/$companyName$/finalize",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "companyName",
                        "displayLabel": "Company Name",
                        "helpText": "Enter your company name id. For example if your ACS URL is https://sso.heroku.com/saml/yourcompany/finalize, enter: yourcompany",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.entityId",
                            "spConnector.relayState"
                        ]
                    }
                ]
            },
            "documentLink": "https://devcenter.heroku.com/articles/using-sso-services-with-heroku",
            "templateName": "heroku",
            "templateLabel": "Heroku",
            "image": "img/appIcons/heroku.jpg",
            "description": "Federation relationship with Heroku"
        },
        {
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "isDefault": true,
                        "index": 0,
                        "uri": "https://app.highspot.com/saml/consume"
                    }
                ],
                "entityId": "https://app.highspot.com"
            },
            "ssoConfig": {
                "attributes": [
                    {
                        "tmName": "last_name",
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "tmName": "first_name",
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "tmName": "email",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "templateName": "Highspot",
            "templateLabel": "Highspot",
            "image": "img/appIcons/highspot.jpg",
            "description": "Federation relationship with Highspot"
        },
        {
            "ssoConfig":{
                "attributes":[
                    {
                        "multiValues":[
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName":"email",
                        "multiValueTypes":[
                            "mail"
                        ]
                    }
                ],
                "subjectValue":"%{session.ad.last.attr.mail}",
                "subjectValueType":"mail"
            },
            "spConnector":{
                "assertionConsumerServices":[
                    {
                        "index":0,
                        "isDefault":true,
                        "uri":"https://staging.hostanalytics.com/ValidateSSO.aspx"
                    }
                ],
                "entityId":"$entityID$",
                "isAuthnRequestSigned":false,
                "wantAssertionEncrypted":false,
                "wantAssertionSigned":false,
                "wantResponseSigned":false
            },
            "templatePropertyMetadata":{
                "variables":[
                    {
                        "name":"entityID",
                        "displayLabel":"Entity ID",
                        "helpText":"Please provide Entity ID",
                        "type":"inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9:_.-\/]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), slash ( / ), colon ( : ) or hyphen ( - )."
                            }
                        ],
                        "targetProperties":[
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateName":"hostAnalytics",
            "templateLabel":"HostAnalytics",
            "image": "img/appIcons/hostanalytics.jpg",
            "description":"Federation relationship with HostAnalytics"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "emailAddress",
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "tmName": "givenName",
                        "multiValueTypes": [
                            "username"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$subDomain$.hypeinnovation.com/Shibboleth.sso/autologin"
                    }
                ],
                "entityId": "https://$subDomain$.hypeinnovation.com",
                "isAuthnRequestSigned": false,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Enter your sub domain. For example, if your ACS URL is https://yourcompany.hypeinnovation.com/Shibboleth.sso/autologin, enter: yourcompany",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateName": "hypeinnovation",
            "templateLabel": "Hype Innovation",
            "image": "img/appIcons/hypeinnovation.jpg",
            "description": "Federation relationship with Hype Innovation"
        },
        {
            "ssoConfig":{
                "samlProfiles":[
                    "web-browser-sso",
                    "ecp"
                ],
                "subjectValue":"%{session.ad.last.attr.mail}",
                "subjectValueType":"mail"
            },
            "spConnector":{
                "assertionConsumerServices":[
                    {
                        "index":0,
                        "isDefault":true,
                        "uri":"https://apps.$distributionCenter$.collabserv.com/sps/sp/saml/v2_0/login"
                    }
                ],
                "entityId":"https://apps.$distributionCenter$.collabserv.com/sps/sp/saml/v2_0",
                "isAuthnRequestSigned":true,
                "wantAssertionEncrypted":false,
                "wantAssertionSigned":false,
                "wantResponseSigned":false
            },
            "templatePropertyMetadata":{
                "variables":[
                    {
                        "name":"distributionCenter",
                        "displayLabel":"Distribution Center",
                        "helpText":"Please choose, the Distribution Center Environment of your IBM Smart Cloud account",
                        "type":"dropdown",
                        "values":{
                            "na":{
                                "value":"na",
                                "displayValue":"America DC",
                                "targetProperties":[
                                    {
                                        "name":"spConnector.entityId",
                                        "value":"https://apps.$distributionCenter$.collabserv.com"
                                    },
                                    {
                                        "name":"spConnector.assertionConsumerServices[0].uri",
                                        "value":"https://apps.$distributionCenter$.collabserv.com/sps/sp/saml/v2_0/login"
                                    }
                                ]
                            },
                            "ce":{
                                "value":"ce",
                                "displayValue":"Europe DC",
                                "targetProperties":[
                                    {
                                        "name":"spConnector.entityId",
                                        "value":"https://apps.$distributionCenter$.collabserv.com"
                                    },
                                    {
                                        "name":"spConnector.assertionConsumerServices[0].uri",
                                        "value":"https://apps.$distributionCenter$.collabserv.com/sps/sp/saml/v2_0/login"
                                    }
                                ]
                            },
                            "ap":{
                                "value":"ap",
                                "displayValue":"Asia Pacific DC",
                                "targetProperties":[
                                    {
                                        "name":"spConnector.entityId",
                                        "value":"https://apps.$distributionCenter$.collabserv.com"
                                    },
                                    {
                                        "name":"spConnector.assertionConsumerServices[0].uri",
                                        "value":"https://apps.$distributionCenter$.collabserv.com/sps/sp/saml/v2_0/login"
                                    }
                                ]
                            },
                            "test":{
                                "value":"test",
                                "displayValue":"CA-1 Test",
                                "targetProperties":[
                                    {
                                        "name":"spConnector.entityId",
                                        "value":"https://apps.collabservnext.com"
                                    },
                                    {
                                        "name":"spConnector.assertionConsumerServices[0].uri",
                                        "value":"https://apps.collabservnext.com/sps/sp/saml/v2_0/login"
                                    }
                                ]
                            }
                        }
                    }
                ]
            },
            "templateName":"ibmSmartCloud",
            "templateLabel":"IBM SmartCloud for Social Business",
            "image": "img/appIcons/IBMsmartcloud.jpg",
            "description":"Federation relationship with IBM Smart Cloud",
            "documentLink":"http://saml-doc.okta.com/SAML_Docs/How-to-Configure-SAML-2.0-for-IBMConnectionsCloud.html?baseAdminUrl=https://f5test1-admin.oktapreview.com&app=IBM_SmartCloud&instanceId=0oabx4ryk4w3aKseA0h7"
        },
        {
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectValueType": "mail"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 1,
                        "isDefault": true,
                        "uri": "https://$subDomain$.icims.com/icims2/servlet/icims2?module=Root&action=samlAssertionConsumerService"
                    }
                ],
                "entityId": "icims.com",
                "isAuthnRequestSigned": false,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Provide the Sub Domain. For e.g. if the ACS URL is https://company.icims.com/icims2/servlet/icims2?module=Root&action=samlAssertionConsumerService, the Sub Domain is company.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "templateName": "icims",
            "templateLabel": "ICIMS",
            "image": "img/appIcons/icims.jpg",
            "description": "Federation relationship with ICIMS"
        },
        {
            "spConnector": {
                "singleLogoutUri": "https://api.inkling.com/saml/v2/slo/$accountId$",
                "assertionConsumerServices": [
                    {
                        "isDefault": true,
                        "index": 0,
                        "uri": "https://api.inkling.com/saml/v2/acs/$accountId$"
                    }
                ],
                "entityId": "https://api.inkling.com/saml/v2/metadata/$accountId$"
            },
            "ssoConfig": {
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.cn}"
                        ],
                        "tmName": "Username",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "tmName": "Last Name",
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "tmName": "First Name",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "tmName": "Email",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "accountId",
                        "displayLabel": "Account ID",
                        "helpText": "Provide the account Id from the SSO URL. For eg - If the SSO URL is https://api.inkling.com/saml/v2/metadata/abcdefgh12345566, then the account id is abcdefgh12345566",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.singleLogoutUri",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "templateName": "Inkling",
            "templateLabel": "Inkling",
            "image": "img/appIcons/inkling.jpg",
            "description": "Federation relationship with Inkling"
        },
        {
            "spConnector": {
                "entityId": "$entityId$",
                "isAuthnRequestSigned": true,
                "assertionConsumerServices": [
                    {
                        "uri": "https://$subDomain$.inmotionnow.com/saml/post",
                        "index": 0,
                        "isDefault": true
                    }
                ],
                "singleLogoutUri": "https://$subDomain$.inmotionnow.com/saml/slo/redirect"
            },
            "ssoConfig": {
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "attributes": [
                    {
                        "tmName": "Email",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.displayName}"
                        ],
                        "tmName": "Name",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    }
                ],
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Provide the sub domain from the SSO URL. For eg if SSO URL is https://company.inmotionnow.com/saml/post, then the sub domain is company",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.singleLogoutUri"
                        ]
                    },
                    {
                        "name": "entityId",
                        "displayLabel": "EntityID",
                        "helpText": "Provide the entityID",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9:_.-\/]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), slash ( / ), colon ( : ) or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateName": "inmotionnow",
            "templateLabel": "inmotionnow",
            "image": "img/appIcons/inmotionnow.jpg",
            "description": "Federation relationship with inmotionnow"
        },
        {
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectValueType": "mail"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$subDomain$.innotas.com/login_sub.pa"
                    }
                ],
                "entityId": "innotas.com",
                "isAuthnRequestSigned": false,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Provide the sub domain. For eg - If the ACS URL is https://company.innotas.com/login_sub.pa, then the sub domain is company.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "templateName": "innotas",
            "templateLabel": "Innotas",
            "image": "img/appIcons/innotas.jpg",
            "description": "Federation relationship with Innotas",
            "documentLink": "http://saml-doc.okta.com/SAML_Docs/How-to-Configure-SAML-2.0-for-Innotas.html?baseAdminUrl=https://f5test1-admin.oktapreview.com&app=innotas&instanceId=0oabx4qdw4M6O0yPN0h7"
        },
        {
            "ssoConfig":{
                "subjectValue":"%{session.ldap.last.attr.mail}",
                "subjectValueType":"mail"
            },
            "spConnector":{
                "assertionConsumerServices":[
                    {
                        "index":1,
                        "isDefault":true,
                        "uri":"https://www.inspiredlms.com/Login/$companyName$/consumer.aspx"
                    }
                ],
                "entityId":"$idPIssuerIdentifier$",
                "isAuthnRequestSigned":false,
                "wantAssertionEncrypted":false,
                "wantAssertionSigned":false,
                "wantResponseSigned":false
            },
            "templatePropertyMetadata":{
                "variables":[
                    {
                        "name":"companyName",
                        "displayLabel":"Company Name",
                        "helpText":"Provide the company name. Format - https://www.inspiredlms.com/Login/<your_company_name>/consumer.aspx.",
                        "type":"inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties":[
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    },
                    {
                        "name":"idPIssuerIdentifier",
                        "displayLabel":"IdP Issuer Identifier",
                        "helpText":"Please provide the unique issuer identifier provisioned by InspiredLMS.",
                        "type":"inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9:_.-\/]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), slash ( / ), colon ( : ) or hyphen ( - )."
                            }
                        ],
                        "targetProperties":[
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateName":"InspiredLMS",
            "templateLabel":"InspiredLMS",
            "image": "img/appIcons/inspiredLMS.jpg",
            "description":"Federation relationship with InspiredLMS",
            "documentLink":"http://support.inspiredelearning.com/customer/en/portal/articles/2204526-sso-saml"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ldap.last.attr.userPrincipalName}"
                        ],
                        "tmName": "user_id",
                        "multiValueTypes": [
                            "username"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ldap.last.attr.mail}"
                        ],
                        "tmName": "EMAIL",
                        "multiValueTypes": [
                            "username"
                        ]
                    }
                ],
                "subjectValue": "%{session.ldap.last.attr.userPrincipalName}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "$entityIdUrl$/Login3/SAML2/Login.aspx"
                    }
                ],
                "entityId": "$entityIdUrl$",
                "isAuthnRequestSigned": true,
                "singleLogoutUri": "$entityIdUrl$/Login3/SAML2/Logout.aspx",
                "singleLogoutResponseUri": "$entityIdUrl$/Login3/SAML2/Logout.aspx",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "entityIdUrl",
                        "displayLabel": "Entity ID URL",
                        "helpText": "Specify the entityId URL which is used to setup ACS URI. For example, entityId : https://clients.intelex.com is used to setup ACS URI https://clients.intelex.com/Login3/SAML2/Login.aspx",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "url-validator"
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.entityId",
                            "spConnector.singleLogoutResponseUri",
                            "spConnector.singleLogoutUri"
                        ]
                    }
                ]
            },
            "templateName": "intelex",
            "templateLabel": "Intelex",
            "image": "img/appIcons/intelex.jpg",
            "description": "Federation relationship with Intelex"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.cn}"
                        ],
                        "tmName": "Username",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "tmName": "Last Name",
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "tmName": "First Name",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "tmName": "Email",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValueType": "mail"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "uri": "https://$subDomain$.intrepidagile.com/mlp/saml/acs",
                        "index": 0,
                        "isDefault": true
                    }
                ],
                "entityId": "https://$subDomain$.intrepidagile.com/mlp/saml"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Provide your sub domain. For eg - If your SSO URL is https://company.intrepidagile.com/mlp/saml/acs, then the sub domain is company.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateName": "Intrepid Learning",
            "templateLabel": "Intrepid Learning",
            "image": "img/appIcons/intrepidlearning.jpg",
            "description": "Federation relationship with Intrepid Learning"
        },
        {
            "image": "img/appIcons/jamf.jpg",
            "description": "Federation relationship with Jamf",
            "spConnector": {
                "entityId": "https://$hostname$/saml/metadata",
                "assertionConsumerServices": [
                    {
                        "binding": "http-artifact",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$hostname$/saml/SSO"
                    }
                ],
                "singleLogoutUri": "https://$hostname$/saml/SingleLogout",
                "singleLogoutResponseUri": "https://$hostname$/saml/SingleLogout",
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false
            },
            "templateLabel": "Jamf",
            "templateName": "Jamf",
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.sAMAccountName}",
                "subjectValueType": "username",
                "subjectType": "unspecified",
                "attributes": [
                    {
                        "encrypt": false,
                        "encryptionType": "aes256",
                        "tmName": "mail",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "encrypt": false,
                        "encryptionType": "aes256",
                        "tmName": "memberOf",
                        "multiValues": [
                            "%{session.ad.last.attr.memberOf}"
                        ],
                        "multiValueTypes": [
                            "department"
                        ]
                    }
                ],
                "samlProfiles": [
                    "web-browser-sso"
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "hostname",
                        "displayLabel": "Hostname",
                        "type": "inputText",
                        "helpText": "Provide the hostname from the SSO URL. For eg, If the SSO URL is https://abcd.com/saml/SSO, then the hostname is abcd.com.",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.singleLogoutUri",
                            "spConnector.singleLogoutresponseUri",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "documentLink": "http://docs.jamf.com/9.93/casper-suite/administrator-guide/Single_Sign-On.html#src-12986162_id-.SingleSign-Onv9.93-configidp"
        },
        {
            "ssoConfig": {
                "subjectType" : "unspecified",
                "subjectValue": "%{session.ad.last.attr.sAMAccountName}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$subDomain$.cls.janison.com/auth/consumeassertion?binding=urn:aoasis:anames:atc:aSAML:a2.0:abindings:aHTTP-POST"
                    }
                ],
                "entityId": "https://$subDomain$.cls.janison.com",
                "isAuthnRequestSigned": false,
                "singleLogoutUri": "https://$subDomain$.cls.janison.com/auth/singlelogoff",
                "singleLogoutResponseUri": "https://$subDomain$.cls.janison.com/auth/singlelogoff",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Specify sub domain, for example if your entity ID is https://acme.cls.janison.com then your sub domain is acme",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.singleLogoutUri",
                            "spConnector.singleLogoutResponseUri"
                        ]
                    }
                ]
            },
            "templateName": "janison",
            "templateLabel": "Janison Learning",
            "image": "img/appIcons/janison.jpg",
            "description": "Federation relationship with Janison Learning"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "tmName": "LastName",
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "tmName": "FirstName",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.sAMAccountName}"
                        ],
                        "tmName": "UserID",
                        "multiValueTypes": [
                            "username"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "Email",
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [{
                    "index": 0,
                    "isDefault": true,
                    "uri": "https://$hostName$/securityRealm/finishLogin"
                }],
                "entityId": "https://$hostName$/securityRealm/finishLogin",
                "isAuthnRequestSigned": false,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [{
                    "name": "hostName",
                    "displayLabel": "Hostname",
                    "helpText": "Enter your Hostname. For example, if your ACS URL is https://yourcompany.com/securityRealm/finishLogin, enter: yourcompany.com",
                    "type": "inputText",
                    "validator": [
                        {
                            "type": "regex-validator",
                            "pattern": "^[a-zA-Z0-9_.-]*$",
                            "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                        }
                    ],
                    "targetProperties": [
                        "spConnector.assertionConsumerServices[0].uri",
                        "spConnector.entityId"
                    ]
                }]
            },
            "templateName": "jenkins",
            "templateLabel": "Jenkins",
            "image": "img/appIcons/jenkins.jpg",
            "documentLink": "https://wiki.jenkins.io/display/JENKINS/SAML+Plugin"
        },
        {
            "spConnector": {
                "entityId": "$entityId$",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "$acsUri$"
                    }
                ],
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false
            },
            "templateLabel": "Atlassian Jira Enterprise",
            "templateName": "Jira for Data Center",
            "description": "Federation relationship with Atlassian Jira for Enterprise",
            "image": "img/appIcons/Jira.jpg",
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.sAMAccountName}",
                "subjectType": "unspecified",
                "subjectValueType": "username",
                "attributes": [
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "tmName": "sn",
                        "nameFormat": "unspecified",
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "tmName": "givenName",
                        "nameFormat": "unspecified",
                        "multiValues": [
                            "%{session.ad.last.attr.givenname}"
                        ],
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "tmName": "mail",
                        "nameFormat": "unspecified",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "tmName": "sAMAccountName",
                        "nameFormat": "unspecified",
                        "multiValues": [
                            "%{session.ad.last.attr.sAMAccountName}"
                        ],
                        "multiValueTypes": [
                            "username"
                        ]
                    }
                ],
                "samlProfiles": [
                    "web-browser-sso"
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "entityId",
                        "displayLabel": "Entity ID",
                        "type": "inputText",
                        "helpText": "Provide the entity ID.",
                        "validator": [
                            {
                                "type": "url-validator"
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId"
                        ]
                    },
                    {
                        "name": "acsUri",
                        "displayLabel": "Assertion Consumer Service URL",
                        "type": "inputText",
                        "helpText": "Provide the Assertion Consumer Service URL",
                        "validator": [
                            {
                                "type": "url-validator"
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "documentLink": "https://confluence.atlassian.com/cloud/saml-single-sign-on-873871238.html"
        },
        {
            "templateName": "jive",
            "templateLabel": "Jive",
            "description": "SaaS Application for Jive",
            "image": "img/appIcons/jive.jpg",
            "appHelp": "Please configure Active Directory query in Authentication step and select sAMAccountName query attribute.",
            "ssoConfig": {
                "subjectType": "unspecified",
                "subjectValueType": "username",
                "subjectValue": "%{session.ad.last.attr.sAMAccountName}",
                "samlProfiles": [
                    "web-browser-sso"
                ]
            },
            "spConnector": {
                "entityId": "https://$domainName$.jiveon.com",
                "encryptionType": "aes128",
                "isAuthnRequestSigned": false,
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false,
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$domainName$.jiveon.com/saml/sso"
                    }
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "domainName",
                        "displayLabel": "Sub Domain",
                        "helpText": "Provide your sub domain where Jive is hosted. For e.g. if the entity ID URL is https://company.jiveon.com, the Sub domain is company",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            }
        },
        {
            "ssoConfig": {
                "attributes": [{
                    "multiValues": ["%{session.ad.last.attr.cn}"],
                    "tmName": "Username",
                    "multiValueTypes": ["username"]
                }, {
                    "multiValues": ["%{session.ad.last.attr.sn}"],
                    "tmName": "Last Name",
                    "multiValueTypes": ["lastname"]
                }, {
                    "multiValues": ["%{session.ad.last.attr.givenName}"],
                    "tmName": "First Name",
                    "multiValueTypes": ["firstname"]
                }, {
                    "multiValues": ["%{session.ad.last.attr.mail}"],
                    "tmName": "Email",
                    "multiValueTypes": ["mail"]
                }],
                "samlProfiles": ["web-browser-sso"],
                "subjectType": "unspecified",
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [{
                    "index": 0,
                    "isDefault": true,
                    "uri": "https://$hostName$/users/saml/auth"
                }],
                "entityId": "https://$hostName$/users/saml/auth",
                "isAuthnRequestSigned": false,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [{
                    "name": "hostName",
                    "displayLabel": "Hostname",
                    "helpText": "Enter your hostname",
                    "type": "inputText",
                    "validator": [
                        {
                            "type": "regex-validator",
                            "pattern": "^[a-zA-Z0-9_.-]*$",
                            "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                        }
                    ],
                    "targetProperties": ["spConnector.assertionConsumerServices[0].uri", "spConnector.entityId"]
                }]
            },
            "templateName": "kapost",
            "templateLabel": "Kapost",
            "documentLink": "https://help.kapost.com/hc/en-us/articles/115000418028-SSO-Overview-and-Setup",
            "image": "img/appIcons/kapost.jpg"

        },
        {
            "ssoConfig": {
                "subjectValue": "%{session.logon.last.logonname}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$subDomain$.brassring.com/SSO/SAML/SAML2PageListener/AssertionConsumerService.aspx"
                    }
                ],
                "entityId": "https://$subDomain$.brassring.com/SSO/SAML/SAML2PageListener/AssertionConsumerService.aspx",
                "isAuthnRequestSigned": false,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Enter your sub domain. For example, if your ACS URL is https://yourcompany.brassring.com/SSO/SAML/SAML2PageListener/AssertionConsumerService.aspx, enter: yourcompany",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "templateName": "kenexa",
            "templateLabel": "Kenexa BrassRing(IBM)",
            "description": "Federation relationship with Kenexa BrassRing(IBM)",
            "image": "img/appIcons/kenexa.jpg",
            "documentLink": "http://labs.brassring.com/XMLIntegrations%5CXMLHelp%5CKenexaURLs.htm"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "nameFormat": "unspecified",
                        "tmName": "Email",
                        "multiValues" : ["%{session.ad.last.attr.mail}"],
                        "multiValueTypes" : ["mail"]
                    },
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "nameFormat": "unspecified",
                        "tmName": "NameId",
                        "multiValues" : ["%{session.ad.last.attr.mail}"],
                        "multiValueTypes" : ["mail"]
                    }
                ],
                "subjectType": "email-address",
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectValueType": "mail"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://training.knowbe4.com/auth/saml/$companyDomain$/callback"
                    }
                ],
                "encryptionType": "aes128",
                "entityId": "KnowBe4",
                "isAuthnRequestSigned": true,
                "signatureType": "rsa-sha256",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "companyDomain",
                        "displayLabel": "Company Domain",
                        "helpText": "Specify company domain name which is used to setup Assertion Consumer Service URI, example https://training.knowbe4.com/auth/saml/acme.com/callback where acme.com is company domain name.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "templateType": "sp",
            "templateName": "knowbe4",
            "templateLabel": "KnowBe4",
            "description": "Federation relationship with KnowBe4 Service",
            "image": "img/appIcons/knowbe4.jpg",
            "documentLink": "https://knowbe4.zendesk.com/hc/en-us/articles/206293387-What-is-SAML-Integration-"
        },
        {
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectValueType": "mail"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://app.knowledgeowl.com/kb/map-saml/id/$knowledgeBaseID$"
                    }
                ],
                "entityId": "https://app.knowledgeowl.com/sp-map",
                "isAuthnRequestSigned": false,
                "singleLogoutUri": "https://app.knowledgeowl.com/kb/saml-logout",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "knowledgeBaseID",
                        "displayLabel": "Knowledge Base ID",
                        "helpText": "Enter your knowledge base id. For example if your ACS URL is https://app.knowledgeowl.com/kb/map-saml/id/1234, enter: 1234",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "documentLink": "https://support.knowledgeowl.com/help/set-up-sso-via-google-apps",
            "description": "Federation relationship with KnowledgeOwl",
            "templateLabel": "knowledgeOwl",
            "templateName": "knowledgeowl",
            "image": "img/appIcons/knowledgeowl.jpg"
        },
        {
            "ssoConfig": {
                "subjectValue": "%{session.logon.last.logonname}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$subDomain$.treasury-factory.com/sso_login?tenantId=$tenantName$"
                    }
                ],
                "entityId": "https://$subDomain$.treasury-factory.com",
                "isAuthnRequestSigned": true,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Provide the sub domain. For e.g. if the Entity ID URL is https://company.treasury-factory.com, the sub domain is company",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    },
                    {
                        "name": "tenantName",
                        "displayLabel": "Tenant Name",
                        "helpText": "Provide the Tenant Name. For eg if the ACS URL is https://company.treasury-factory.com/sso_login?tenantId=tenant the Tenant Name is tenant.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "templateName": "kyriba",
            "templateLabel": "Kyriba",
            "image": "img/appIcons/kyriba.jpg",
            "description": "Federation relationship with Kyriba"
        },
        {
            "spConnector": {
                "entityId": "https://$subDomain$.leankit.com",
                "assertionConsumerServices": [
                    {
                        "uri": "https://$subDomain$.leankit.com/Account/Membership/ExternalLogin",
                        "index": 0,
                        "isDefault": true
                    }
                ]
            },
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.mail}",
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "attributes": [
                    {
                        "tmName": "Username",
                        "multiValues": [
                            "%{session.ad.last.attr.cn}"
                        ],
                        "multiValueTypes": [
                            "username"
                        ]
                    },
                    {
                        "tmName": "Last Name",
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "tmName": "First Name",
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "Email",
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "subjectValueType": "username"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Provide the sub domain. For example, if the Entity ID is like https://company.leankit.com, sub domain is company",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "templateName": "LeanKit",
            "templateLabel": "LeanKit",
            "image": "img/appIcons/leankit.jpg",
            "description": "Federation relationship with LeanKit",
            "documentLink": "https://support.leankit.com/hc/en-us/articles/115004871727-Enable-Single-Sign-On-SSO-"
        },
        {
            "spConnector": {
                "entityId": "$entityId$",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": ""
                    }
                ],
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false
            },
            "templateLabel": "LinkedIn Learning",
            "templateName": "LinkedIn_Learning",
            "description": "Federation relationship with LinkedIn Learning",
            "image": "img/appIcons/linkedinlearning.jpg",
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectType": "email-address",
                "subjectValueType": "mail",
                "attributes": [],
                "samlProfiles": [
                    "web-browser-sso"
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "entityId",
                        "displayLabel": "Entity ID",
                        "type": "inputText",
                        "helpText": "Provide Entity ID URL from the metadata file.",
                        "validator": [
                            {
                                "type": "url-validator"
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "documentLink": "https://learning.linkedin.com/content/dam/me/learning/en-us/pdfs/lil-techdoc-linkedin-sso-admin-guide.pdf"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "loginName",
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "subjectValue": "%{session.logon.last.logonname}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": ""
                    }
                ],
                "entityId": "https://sales.liveperson.com",
                "isAuthnRequestSigned": false,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                ]
            },
            "templateName": "liveperson",
            "templateLabel": "LivePerson",
            "image": "img/appIcons/liveperson.jpg",
            "documentLink": "https://www.liveperson.com",
            "description": "Federation relationship with LivePerson services"
        },
        {
            "spConnector": {
                "signatureType": "rsa-sha256",
                "entityId": "lucidchart.com",
                "assertionConsumerServices": [
                    {
                        "isDefault": true,
                        "index": 0,
                        "uri": "https://www.lucidchart.com/saml/sso/$domain$"
                    }
                ]
            },
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.mail}",
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "User.Email",
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "tmName": "User.LastName",
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "tmName": "User.FirstName",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    }
                ],
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "domain",
                        "displayLabel": "Domain",
                        "helpText": "Enter your Lucidchart account domain from the Domain field under the Lucidchart Sign in URL section in Lucidchart App Integration panel. Enter domain name only, not a full URL.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "templateName": "Lucidchart",
            "templateLabel": "Lucidchart",
            "image": "img/appIcons/lucidchart.jpg",
            "description": "Federation relationship with lucidchart",
            "documentLink": "https://lucidchart.zendesk.com/hc/en-us/articles/207300096-Lucidchart-and-SAML"
        },
        {
            "spConnector": {
                "entityId": "https://shib.lynda.com/shibboleth-sp",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://shib.lynda.com/Shibboleth.sso/SAML2/POST"
                    }
                ],
                "signatureType": "rsa-sha1",
                "singleLogoutUri": "http://shib.lynda.com/Shibboleth.sso/SLO/Artifact",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false
            },
            "templateLabel": "Lynda.com",
            "templateName": "Lynda.com",
            "description": "Federation relationship with Lynda.com",
            "image": "img/appIcons/lynda.jpg",
            "ssoConfig": {
                "subjectValue": "%{session.logon.last.logonname}",
                "subjectValueType": "custom",
                "subjectType": "unspecified",
                "attributes": [],
                "samlProfiles": [
                    "web-browser-sso"
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                ]
            },
            "documentLink": "https://help.linkedin.com/ci/fattach/get/6774961/0/filename/SAML-2.0-authentication-Form-and-Guide-October-2015.zip"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "nameFormat": "unspecified",
                        "tmName": "logonname",
                        "multiValues" : ["%{session.logon.last.logonname}"],
                        "multiValueTypes" : ["username"]
                    }
                ],
                "subjectType": "unspecified",
                "subjectValue": "%{session.logon.last.logonname}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$domain$.medallia.com/sso/$customerId$/logonSubmit.do"
                    }
                ],
                "encryptionType": "aes128",
                "entityId": "https://$domain$.medallia.com/sso/$customerId$/",
                "isAuthnRequestSigned": false,
                "signatureType": "rsa-sha1",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "domain",
                        "displayLabel": "Medallia Domain",
                        "helpText": "Specify medallia domain which is used along with customer ID to setup entity ID, example https://<domain>.medallia.com/sso/<customerId>",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.entityId"
                        ]
                    },
                    {
                        "name": "customerId",
                        "displayLabel": "Customer ID",
                        "helpText": "Specify Customer ID which is used along with domain to setup entity ID, example https://<domain>.medallia.com/sso/<customerId>",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateType": "sp",
            "templateLabel": "Medallia",
            "templateName": "medallia",
            "image": "img/appIcons/medallia.jpg",
            "description": "Federation relationship with medallia"
        },
        {
            "spConnector": {
                "entityId": "https://dashboard.meraki.com",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": ""
                    }
                ],
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false
            },
            "templateLabel": "Cisco Meraki",
            "templateName": "Meraki",
            "description": "Federation relationship with Cisco Meraki",
            "image": "img/appIcons/meraki.jpg",
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.sAMAccountName}",
                "subjectValueType": "username",
                "subjectType": "unspecified",
                "attributes": [
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "tmName": "https://dashboard.meraki.com/saml/attributes/username",
                        "multiValues": [
                            "$userNameAttribute$"
                        ],
                        "nameFormat": "unspecified",
                        "multiValueTypes": [
                            "custom"
                        ]
                    },
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "tmName": "https://dashboard.meraki.com/saml/attributes/role",
                        "multiValues": [
                            "$roleAttribute$"
                        ],
                        "nameFormat": "unspecified",
                        "multiValueTypes": [
                            "custom"
                        ]
                    }
                ],
                "samlProfiles": [
                    "web-browser-sso"
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "userNameAttribute",
                        "displayLabel": "Dashboard Username",
                        "type": "inputText",
                        "helpText": "Provide the session variable identifying the user in the dashboard.",
                        "targetProperties": [
                            "ssoConfig.attributes[0].multiValues[0]"
                        ]
                    },
                    {
                        "name": "roleAttribute",
                        "displayLabel": "User Role",
                        "type": "inputText",
                        "helpText": "Provide the session variable identifying the user's role. This must match the Role defined in Meraki Administrator page.",
                        "targetProperties": [
                            "ssoConfig.attributes[1].multiValues[0]"
                        ]
                    }
                ]
            },
            "documentLink" : "https://documentation.meraki.com/zGeneral_Administration/Managing_Dashboard_Access/Configuring_SAML_Single_Sign-on_for_Dashboard"
        },
        {
            "ssoConfig": {
                "attributes": [{
                    "multiValues": [
                        "session.logon.last.username"
                    ],
                    "tmName": "username",
                    "multiValueTypes": [
                        "username"
                    ]
                }],
                "subjectValue": "%{session.logon.last.logonname}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [{
                    "index": 0,
                    "isDefault": true,
                    "binding": "http-artifact",
                    "uri": "https://$subDomain$.metricstream.com/metricstream/saml/SAMLAssertionConsumer"
                }
                ],
                "entityId": "https://saml.$subDomain$.metricstream.com",
                "isAuthnRequestSigned": true,
                "singleLogoutUri": "https://$subDomain$.metricstream.com/metricstream/saml/LogoutServiceHTTPPost",
                "singleLogoutResponseUri": "https://$subDomain$.metricstream.com/metricstream/saml/LogoutServiceHTTPRedirectResponse",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [{
                    "name": "subDomain",
                    "displayLabel": "Sub Domain",
                    "helpText": "Enter your sub domain. For example, if your ACS URL is https://yourcompany.metricstream.com/metricstream/saml/SAMLAssertionConsumer, enter: yourcompany",
                    "type": "inputText",
                    "validator": [
                        {
                            "type": "regex-validator",
                            "pattern": "^[a-zA-Z0-9_.-]*$",
                            "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                        }
                    ],
                    "targetProperties": [
                        "spConnector.entityId",
                        "spConnector.singleLogoutResponseUri",
                        "spConnector.singleLogoutUri",
                        "spConnector.assertionConsumerServices[0].uri"
                    ]
                }]
            },
            "templateLabel": "MetricStream",
            "templateName": "metricstream",
            "image": "img/appIcons/metricstream.jpg"
        },
        {
            "ssoConfig":{
                "subjectValue":"%{session.ad.last.attr.mail}",
                "subjectValueType":"mail"
            },
            "spConnector":{
                "assertionConsumerServices":[
                    {
                        "index":0,
                        "isDefault":true,
                        "uri":"https://sso.cloud.microstrategy.com/sp/ACS.saml2"
                    }
                ],
                "entityId":"https://sso.cloud.microstrategy.com:9031",
                "isAuthnRequestSigned":false,
                "wantAssertionEncrypted":false,
                "wantAssertionSigned":false,
                "wantResponseSigned":false
            },
            "templatePropertyMetadata":{
                "variables":[

                ]
            },
            "templateName":"Microstrategy",
            "templateLabel":"Microstrategy",
            "image": "img/appIcons/microstrategy.jpg",
            "description":"Federation realtionship with Microstrategy",
            "documentLink":"https://www2.microstrategy.com/producthelp/Usher/latest/Content/USHER/integrating-saml-enabled-web-application-with-usher_3866637.htm"
        },
        {
            "ssoConfig": {
                "subjectType": "email-address",
                "subjectValue": "%{session.ldap.last.attr.mail}",
                "subjectValueType": "mail"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$region$/login/saml"
                    }
                ],
                "encryptionType": "aes128",
                "entityId": "$region$.$accountCode$",
                "isAuthnRequestSigned": false,
                "signatureType": "rsa-sha1",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "region",
                        "displayLabel": "Region",
                        "helpText": "Select the region of Mimecast grid that your organization's Mimecast account is hosted.",
                        "type": "dropdown",
                        "values" : {
                            "australia" : {
                                "value" : "australia",
                                "displayValue" : "Australia",
                                "targetProperties" : [
                                    {
                                        "name" : "spConnector.entityId",
                                        "value" : "au-api.mimecast.com.$accountCode$"
                                    },
                                    {
                                        "name" : "spConnector.assertionConsumerServices[0].uri",
                                        "value" : "https://au-api.mimecast.com/login/saml"
                                    }
                                ]
                            },
                            "europe" : {
                                "value" : "europe",
                                "displayValue" : "Europe",
                                "targetProperties" : [
                                    {
                                        "name" : "spConnector.entityId",
                                        "value" : "eu-api.mimecast.com.$accountCode$"
                                    },
                                    {
                                        "name" : "spConnector.assertionConsumerServices[0].uri",
                                        "value" : "https://eu-api.mimecast.com/login/saml"
                                    }
                                ]
                            },
                            "us" : {
                                "value" : "us",
                                "displayValue" : "United States",
                                "targetProperties" : [
                                    {
                                        "name" : "spConnector.entityId",
                                        "value" : "us-api.mimecast.com.$accountCode$"
                                    },
                                    {
                                        "name" : "spConnector.assertionConsumerServices[0].uri",
                                        "value" : "https://us-api.mimecast.com/login/saml"
                                    }
                                ]
                            },
                            "za" : {
                                "value" : "za",
                                "displayValue" : "South Africa",
                                "targetProperties" : [
                                    {
                                        "name" : "spConnector.entityId",
                                        "value" : "za-api.mimecast.com.$accountCode$"
                                    },
                                    {
                                        "name" : "spConnector.assertionConsumerServices[0].uri",
                                        "value" : "https://za-api.mimecast.com/login/saml"
                                    }
                                ]
                            },
                            "offshore" : {
                                "value" : "offshore",
                                "displayValue" : "Offshore",
                                "targetProperties" : [
                                    {
                                        "name" : "spConnector.entityId",
                                        "value" : "jer-api.mimecast.com.$accountCode$"
                                    },
                                    {
                                        "name" : "spConnector.assertionConsumerServices[0].uri",
                                        "value" : "https://jer-api.mimecast.com/login/saml"
                                    }
                                ]
                            }
                        },
                        "relatedVariable": [
                            "accountCode"
                        ]
                    },
                    {
                        "name": "accountCode",
                        "displayLabel": "Account Code",
                        "helpText": "ACCOUNTCODE is your unique Mimecast account code as specified in the Administration | Account | Account Settings page of the Administration Console",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateType": "sp",
            "templateName": "mimecastAdmin",
            "templateLabel": "Mimecast (Admin)",
            "description": "Federation relationship with Mimecast Administration Console",
            "image": "img/appIcons/mimecast.jpg",
            "documentLink": "https://community.mimecast.com/docs/DOC-2095"
        },
        {
            "ssoConfig": {
                "subjectType": "email-address",
                "subjectValue": "%{session.ldap.last.attr.mail}",
                "subjectValueType": "mail"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$region$/login/saml"
                    }
                ],
                "encryptionType": "aes128",
                "entityId": "$region$.$accountCode$",
                "isAuthnRequestSigned": false,
                "signatureType": "rsa-sha1",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "region",
                        "displayLabel": "Region",
                        "helpText": "Select the region of Mimecast grid that your organization's Mimecast account is hosted.",
                        "type": "dropdown",
                        "values" : {
                            "australia" : {
                                "value" : "australia",
                                "displayValue" : "Australia",
                                "targetProperties" : [
                                    {
                                        "name" : "spConnector.entityId",
                                        "value" : "au-api.mimecast.com.$accountCode$"
                                    },
                                    {
                                        "name" : "spConnector.assertionConsumerServices[0].url",
                                        "value" : "https://au-api.mimecast.com/login/saml"
                                    }
                                ]
                            },
                            "europe" : {
                                "value" : "europe",
                                "displayValue" : "Europe",
                                "targetProperties" : [
                                    {
                                        "name" : "spConnector.entityId",
                                        "value" : "eu-api.mimecast.com.$accountCode$"
                                    },
                                    {
                                        "name" : "spConnector.assertionConsumerServices[0].url",
                                        "value" : "https://eu-api.mimecast.com/login/saml"
                                    }
                                ]
                            },
                            "us" : {
                                "value" : "us",
                                "displayValue" : "United States",
                                "targetProperties" : [
                                    {
                                        "name" : "spConnector.entityId",
                                        "value" : "us-api.mimecast.com.$accountCode$"
                                    },
                                    {
                                        "name" : "spConnector.assertionConsumerServices[0].url",
                                        "value" : "https://us-api.mimecast.com/login/saml"
                                    }
                                ]
                            },
                            "za" : {
                                "value" : "za",
                                "displayValue" : "South Africa",
                                "targetProperties" : [
                                    {
                                        "name" : "spConnector.entityId",
                                        "value" : "za-api.mimecast.com.$accountCode$"
                                    },
                                    {
                                        "name" : "spConnector.assertionConsumerServices[0].url",
                                        "value" : "https://za-api.mimecast.com/login/saml"
                                    }
                                ]
                            },
                            "offshore" : {
                                "value" : "offshore",
                                "displayValue" : "Offshore",
                                "targetProperties" : [
                                    {
                                        "name" : "spConnector.entityId",
                                        "value" : "jer-api.mimecast.com.$accountCode$"
                                    },
                                    {
                                        "name" : "spConnector.assertionConsumerServices[0].url",
                                        "value" : "https://jer-api.mimecast.com/login/saml"
                                    }
                                ]
                            }
                        },
                        "relatedVariable": [
                            "accountCode"
                        ]
                    },
                    {
                        "name": "accountCode",
                        "displayLabel": "Account Code",
                        "helpText": "ACCOUNTCODE is your unique Mimecast account code as specified in the Administration | Account | Account Settings page of the Administration Console",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateType": "sp",
            "templateName": "mimecastPersonalPortalv3",
            "templateLabel": "Mimecast Personal Portal-V3",
            "description": "Federation relationship with Mimecast Personal Portal v3",
            "image": "img/appIcons/mimecast.jpg",
            "documentLink": "https://community.mimecast.com/docs/DOC-1852"
        },
        {
            "ssoConfig": {
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValue": "%{session.ad.last.attr.userPrincipalName}",
                "subjectType": "persistent",
                "attributes": [
                    {
                        "tmName": "NameID",
                        "multiValues": [
                            "%{session.ad.last.attr.userPrincipalName}"
                        ],
                        "multiValueTypes": [
                            "username"
                        ]
                    },
                    {
                        "tmName": "email",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "tmName": "firstname",
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "tmName": "lastname",
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "multiValueTypes": [
                            "lastname"
                        ]
                    }
                ],
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "isDefault": true,
                        "index": 0,
                        "uri": "https://anypoint.mulesoft.com/accounts/login/receive-id"
                    }
                ],
                "entityId": "$subDomain$.anypoint.mulesoft.com"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Provide the sub domain of your organization. For eg - <Domain>.anypoint.mulesoft.com",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateName": "Mulesoft",
            "templateLabel": "Mulesoft",
            "image": "img/appIcons/mulesoft.jpg",
            "description": "Federation relationship with Mulesoft"
        },
        {
            "image": "img/appIcons/navex.jpg",
            "description": "Federation relationship with Navex Global",
            "spConnector": {
                "entityId": "https://lms.navexglobal.com/topclass3/login.do",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 1,
                        "isDefault": true,
                        "uri": "https://lms.navexglobal.com/topclass3/login.do"
                    }
                ],
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false
            },
            "templateLabel": "Navex Global",
            "templateName": "Navex Global",
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.mail}",
                "attributes": [
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "tmName": "PARTITION",
                        "multiValues": [
                            "$partitionName$"
                        ],
                        "multiValueTypes": [
                            "custom"
                        ],
                        "nameFormat": "unspecified"
                    }
                ],
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectType": "unspecified",
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "partitionName",
                        "displayLabel": "Partition Name",
                        "type": "inputText",
                        "helpText": "Provide your partition name registered with Navex.",
                        "targetProperties": [
                            "ssoConfig.attributes[0].multiValues[0]"
                        ]
                    }
                ]
            },
            "documentLink": "n/a"
        },
        {
            "ssoConfig": {
                "attributes": [],
                "subjectValue": "%{session.ad.last.attr.sAMAccountName}",
                "subjectType": "unspecified",
                "subjectValueType": "username"
            },
            "spConnector": {
                "singleLogoutUri": "https://$subDomain$.netdimensions.com/Shibboleth.sso/SLO/POST",
                "entityId": "https://$subDomain$.netdimensions.com/shibboleth-sp",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$subDomain$.netdimensions.com/shibboleth-sp"
                    }
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Provide the sub domain from SSO URL. For eg if the SSO URL is https://company.netdimensions.com/shibboleth-sp, then sub domain is company.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.singleLogoutUri",
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "templateName": "NetDimensions",
            "templateLabel": "Netdimensions",
            "image": "img/appIcons/netdimensions.jpg",
            "description": "Federation relationship with Netdimensions"
        },
        {
            "image": "img/appIcons/netsuite.jpg",
            "description": "Federation relationship with Netsuite",
            "spConnector": {
                "entityId": "http://www.netsuite.com/sp",
                "singleLogoutResponseUri": "https://system.$subDomain$.netsuite.com/saml2/slopost",
                "singleLogoutUri": "https://system.$subDomain$.netsuite.com/saml2/slopost",
                "assertionConsumerServices": [
                    {
                        "uri": "https://system.$subDomain$.netsuite.com/saml2/acs",
                        "index": 0,
                        "isDefault": true
                    }
                ],
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false
            },
            "templateLabel": "Netsuite",
            "templateName": "Netsuite",
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.mail}",
                "attributes": [
                    {
                        "tmName": "email",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "tmName": "account",
                        "multiValues": [
                            "$account$"
                        ],
                        "multiValueTypes": [
                            "custom"
                        ]
                    }
                ],
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectType": "unspecified",
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "type": "inputText",
                        "helpText": "Provide the sub domain from the SSO URL. For eg - If URL is https://system.testcompany.netsuite.com/saml2/acs, then sub domain is testcompany.",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.singleLogoutResponseUri",
                            "spConnector.singleLogoutUri"
                        ]
                    },
                    {
                        "name": "account",
                        "displayLabel": "Netsuite Account ID",
                        "type": "inputText",
                        "helpText": "Provide your netsuite account ID obtained from Netsuite administrator.",
                        "targetProperties": [
                            "ssoConfig.attributes[1].multiValues[0]"
                        ]
                    }
                ]
            },
            "documentLink": "n/a"
        },
        {
            "ssoConfig": {
                "samlProfiles": ["web-browser-sso"],
                "subjectType": "unspecified",
                "subjectValue": "%{session.ldap.last.attr.mail}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [{
                    "binding": "http-post",
                    "index": 0,
                    "isDefault": true,
                    "uri": "https://rpm.newrelic.com:443/accounts/$accountID$/sso/saml/finalize"
                }],
                "entityId": "rpm.newrelic.com",
                "isAuthnRequestSigned": false,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [{
                    "name": "accountID",
                    "displayLabel": "Account ID",
                    "helpText": "Enter your Account ID, for example if your ACS URL is: https://rpm.newrelic.com/accounts/123456/sso/saml/finalize, enter: 123456",
                    "type": "inputText",
                    "validator": [
                        {
                            "type": "regex-validator",
                            "pattern": "^[a-zA-Z0-9_.-]*$",
                            "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                        }
                    ],
                    "targetProperties": ["spConnector.assertionConsumerServices[0].uri"]
                }]
            },
            "templateName": "newRelic",
            "templateLabel": "New Relic",
            "image": "img/appIcons/newrelic.jpg",
            "documentLink": "https://docs.newrelic.com/docs/accounts-partnerships/accounts/saml-single-sign/saml-service-providers"
        },
        {
            "image": "img/appIcons/novatus.jpg",
            "description": "Federation relationship with Novatus",
            "spConnector": {
                "entityId": "novatus:sso:$companyID$",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 1,
                        "isDefault": true,
                        "uri": "https://sso.novatuscontracts.com/$companyID$.samlpost"
                    }
                ],
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false
            },
            "templateLabel": "novatus",
            "templateName": "Novatus",
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.mail}",
                "attributes": [],
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectType": "unspecified",
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "companyID",
                        "displayLabel": "Company ID",
                        "type": "inputText",
                        "helpText": "Provide the company ID from the SSO URL. For eg - If SSO URL is https://sso.novatuscontracts.com/test1234.samlpost, then company ID is test1234.",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "documentLink": "n/a"
        },
        {
            "templateName": "office365",
            "templateLabel": "Microsoft Office 365",
            "description": "SaaS Application for Office 365",
            "image": "img/appIcons/o365.jpg",
            "appHelp": "Please configure Active Directory query in Authentication step and select objectGUID query attribute.",
            "iRules": {
                "definitions": {
                    "encode": {
                        "name": "encode",
                        "ruleEventAgentId": "encode",
                        "rule": "# encode irule \n when ACCESS_POLICY_AGENT_EVENT { \n if {[ACCESS::policy agent_id] eq \"encode\"} { \n set tmpVar [binary format H* [substr \"[ACCESS::session data get session.ad.last.attr.objectGUID]\" 2]] \n ACCESS::session data set session.ad.last.attr.objectGUIDencoded [b64encode $tmpVar1] } }"
                    }
                },
                "names": [
                    "/Common/_sys_APM_Office365_SAML_BasicAuth"
                ]
            },
            "ssoConfig": {
                "subjectType": "persistent",
                "subjectValue": "%{session.ad.last.attr.objectGUIDencoded}",
                "subjectValueType": "objectGUIDencoded",
                "samlProfiles": [
                    "web-browser-sso",
                    "ecp"
                ],
                "attributes": [
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "multiValues": [
                            "%{session.ad.last.attr.userPrincipalName}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ],
                        "tmName": "IDPEmail",
                        "nameFormat": "unspecified"
                    }
                ]
            },
            "spConnector": {
                "entityId": "urn:federation:MicrosoftOnline",
                "encryptionType": "aes128",
                "isAuthnRequestSigned": false,
                "locationSpecific": "false",
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false,
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://login.microsoftonline.com/login.srf"
                    },
                    {
                        "binding": "paos",
                        "index": 2,
                        "isDefault": false,
                        "uri": "https://login.microsoftonline.com/login.srf"
                    }
                ]
            },
            "templatePropertyMetadata": {
                "variables": []
            }
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.sAMAccountName}"
                        ],
                        "tmName": "OA_EMAIL",
                        "multiValueTypes": [
                            "username"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.sAMAccountName}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 1,
                        "isDefault": true,
                        "uri": "https://login.openathens.net/saml/2/acs"
                    }
                ],
                "entityId": "https://login.openathens.net/saml/2/metadata-sp",
                "isAuthnRequestSigned": false,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "templateName": "openAthens",
            "templateLabel": "Open Athens",
            "image": "img/appIcons/openathens.jpg",
            "description": "Federation relationship with Open Athens",
            "documentLink": "https://docs.openathens.net/display/public/MD/Using+a+local+authentication+system+with+OpenAthens"
        },
        {
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "uri": "https://app.opsgenie.com/auth/saml?id=$accountId$",
                        "isDefault": true,
                        "index": 0
                    }
                ],
                "entityId": "https://app.opsgenie.com/auth/saml"
            },
            "ssoConfig": {
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectType": "email-address",
                "attributes": [],
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "accountId",
                        "displayLabel": "Unique Account ID",
                        "helpText": "Provide your unique account ID. For eg - If the SSO URL is https://app.opsgenie.com/auth/saml?id=company, then the unique id is company",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices.uri[0]"
                        ]
                    }
                ]
            },
            "templateName": "OpsGenie",
            "templateLabel": "OpsGenie",
            "image": "img/appIcons/OpsGenie.jpg",
            "description": "Federation relationship with OpsGenie",
            "documentLink": "https://docs.opsgenie.com/v1.0/docs/generic-saml"
        },
        {
            "ssoConfig": {
                "subjectValue": "%{session.logon.last.logonname}",
                "subjectType": "unspecified",
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValueType": "username"
            },
            "spConnector": {
                "entityId": "$subDomain$.crm.ondemand.com",
                "isAuthnRequestSigned": true,
                "assertionConsumerServices": [
                    {
                        "uri": "https://$subDomain$.crm.ondemand.com/sap/saml2/sp/acs",
                        "index": 0,
                        "isDefault": true
                    }
                ],
                "singleLogoutUri": "https://$subDomain$.crm.ondemand.com/sap/saml2/sp/slo"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Provide sub domain name For. eg - In https://my333036-sso.crm.ondemand.com, my333036-sso is the sub domain name",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.singleLogoutUri"
                        ]
                    }
                ]
            },
            "templateName": "Oracle CRM",
            "templateLabel": "Oracle CRM onDemand",
            "image": "img/appIcons/oracle.jpg",
            "description": "Federation relationship with Oracle CRM on demand"
        },
        {
            "ssoConfig": {
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValue": "%{session.logon.last.logonname}",
                "subjectType": "unspecified",
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.ldap.last.attr.mail}"
                        ],
                        "tmName": "email",
                        "multiValueTypes": [
                            "username"
                        ]
                    }
                ],
                "subjectValueType": "username"
            },
            "spConnector": {
                "singleLogoutUri": "$serverURL$/oamfed/cloud/$tenantId$/sp/samlv20",
                "isAuthnRequestSigned": true,
                "assertionConsumerServices": [
                    {
                        "uri": "$serverURL$/oam/server/fed/sp/sso?tenant=$tenantId$",
                        "binding": "http-artifact",
                        "index": 0,
                        "isDefault": true
                    }
                ],
                "entityId": "$serverURL$/oam/fed/cloud/$tenantId$",
                "singleLogoutResponseUri": "$serverURL$/oamfed/cloud/$tenantId$/sp/samlv20"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "tenantId",
                        "displayLabel": "Tenant ID",
                        "helpText": "Provide the tenant id from the Oracle Hyperion configuration",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.entityId",
                            "spConnector.singleLogoutResponseUri",
                            "spConnector.singleLogoutUri"
                        ]
                    },
                    {
                        "name": "serverURL",
                        "displayLabel": "Server URL",
                        "helpText": "Provide the server URL from. For eg - https://login.em2.oraclecloud.com.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "url-validator"
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.singleLogoutUri",
                            "spConnector.entityId",
                            "spConnector.singleLogoutResponseUri"
                        ]
                    }
                ]
            },
            "templateName": "Oracle Hyperion",
            "templateLabel": "Oracle Hyperion",
            "image": "img/appIcons/oracle.jpg",
            "description": "Federation relationship with Oracle Hyperion"
        },
        {
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectValueType": "mail"
            },
            "spConnector": {
                "isAuthnRequestSigned": true,
                "entityId": "https://$subDomain$.pagerduty.com",
                "assertionConsumerServices": [
                    {
                        "uri": "https://$subDomain$.pagerduty.com/sso/saml/consume",
                        "index": 0,
                        "isDefault": true
                    }
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Provide the sub domain from your SSO url. For eg if URL is https://company.pagerduty.com, then subDomain is company",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices.uri[0]"
                        ]
                    }
                ]
            },
            "templateName": "Pagerduty",
            "templateLabel": "Pagerduty",
            "image": "img/appIcons/pagerduty.jpg",
            "description": "Federation relationship with Pagerduty"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "tmName": "emailAddress",
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "multiValues" : ["%{session.ad.last.attr.mail}"],
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "entityId": "https://admin.$dataCenterId$.pageuppeople.com/",
                "isAuthnRequestSigned": true,
                "wantResponseSigned": true,
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://admin.$dataCenterId$.pageuppeople.com/"
                    }
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "dataCenterId",
                        "displayLabel": "Data Center Location",
                        "helpText": "Select the Data Center location",
                        "type": "dropdown",
                        "values" : {
                            "dc2" : {
                                "value" : "dc2",
                                "displayValue" : "AU data center",
                                "targetProperties" : [
                                    {
                                        "name" : "spConnector.entityId",
                                        "value" : "https://admin.dc2.pageuppeople.com/"
                                    },
                                    {
                                        "name" : "spConnector.assertionConsumerServices[0].uri",
                                        "value" : "https://admin.dc2.pageuppeople.com/"
                                    }
                                ]
                            },
                            "dc3" : {
                                "value" : "dc3",
                                "displayValue" : "EU data center",
                                "targetProperties" : [
                                    {
                                        "name" : "spConnector.entityId",
                                        "value" : "https://admin.dc3.pageuppeople.com/"
                                    },
                                    {
                                        "name" : "spConnector.assertionConsumerServices[0].uri",
                                        "value" : "https://admin.dc3.pageuppeople.com/"
                                    }
                                ]
                            },
                            "dc4" : {
                                "value" : "dc4",
                                "displayValue" : "USA data center",
                                "targetProperties" : [
                                    {
                                        "name" : "spConnector.entityId",
                                        "value" : "https://admin.dc4.pageuppeople.com/"
                                    },
                                    {
                                        "name" : "spConnector.assertionConsumerServices[0].uri",
                                        "value" : "https://admin.dc4.pageuppeople.com/"
                                    }
                                ]
                            },
                            "dc5" : {
                                "value" : "dc5",
                                "displayValue" : "Asia data center",
                                "targetProperties" : [
                                    {
                                        "name" : "spConnector.entityId",
                                        "value" : "https://admin.dc5.pageuppeople.com/"
                                    },
                                    {
                                        "name" : "spConnector.assertionConsumerServices[0].uri",
                                        "value" : "https://admin.dc5.pageuppeople.com/"
                                    }
                                ]
                            }
                        }
                    }
                ]
            },
            "templateName": "PageUp",
            "templateLabel": "PageUp People",
            "description": "Federation relationship with PageUp People",
            "image": "img/appIcons/pageup.jpg",
            "documentLink": "https://knowledgeportal.pageuppeople.com/single-sign-on/sso-saml/"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.cn}"
                        ],
                        "tmName": "Username",
                        "multiValueTypes": [
                            "username"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "tmName": "LastName",
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "tmName": "FirstName",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "Email",
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$panoptoServerName$/Panopto/Pages/Auth/Login.aspx$panoptoServerName$"
                    }
                ],
                "entityId": "https://$panoptoServerName$/Panopto",
                "isAuthnRequestSigned": false,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "panoptoServerName",
                        "displayLabel": "Panopto Server Name",
                        "helpText": "Specify Panopto Server Name which is used to setup Panopto SP entityId, for example, https://<panoptoserver>/panopto",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateName": "panopto",
            "templateLabel": "Panopto",
            "image": "img/appIcons/panopto.jpg",
            "description": "Federation relationship with Panopto"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ldap.last.attr.sn}"
                        ],
                        "tmName": "LastName",
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ldap.last.attr.givenName}"
                        ],
                        "tmName": "FirstName",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ldap.last.attr.mail}"
                        ],
                        "tmName": "EmailAddress",
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "subjectValue": "%{session.ldap.last.attr.extensionAttribute6}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://stg.piltools.com/sso/$customerId$/acs/"
                    }
                ],
                "entityId": "https://stg.piltools.com/sso/$customerId$/",
                "isAuthnRequestSigned": false,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "customerId",
                        "displayLabel": "Customer ID",
                        "helpText": "Specify Customer ID which is used to setup Entity ID, for example, https://stg.piltools.com/sso/<customerId>/",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateName": "piltools",
            "templateLabel": "PILtools",
            "image": "img/appIcons/piltools.jpg",
            "description": "Federation relationship with PILTools"
        },
        {
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.sAMAccountName}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$subDomain$.planisware.com:443/sp/ACS.saml2"
                    }
                ],
                "entityId": "$subDomain$.planisware.com:saml20",
                "isAuthnRequestSigned": false,
                "singleLogoutUri": "https://$subDomain$.planisware.com:443/sp/SLO.ssaml2",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Specify sub domain. If your ACS URI is https://acme.planisware.com:443/sp/ACS.saml2, then enter acme for sub domain.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.singleLogoutUri",
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateName": "planisware",
            "templateLabel": "Planisware",
            "image": "img/appIcons/Planisware.jpg",
            "description": "Federation relationship with Planisware"
        },
        {
            "ssoConfig": {
                "subjectType": "unspecified",
                "subjectValue": "%{session.logon.last.logonname}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "encryptionType": "aes128",
                "entityId": "https://$subDomain$.pvcloud.com/planview/",
                "singleLogoutResponseUri": "https://$subDomain$.pvcloud.com/planview/HomeView/logoff.asp",
                "isAuthnRequestSigned": false,
                "signatureType": "rsa-sha1",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false,
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$subDomain$.pvcloud.com/planview/"
                    }
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Specify sub domain which is used to configure Entity ID, example https://acme.pvcloud.com/planview/",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.singleLogoutResponseUri"
                        ]
                    }
                ]
            },
            "templateType": "sp",
            "templateName": "planview",
            "templateLabel": "planview",
            "description": "Federation relationship with Planview",
            "image": "img/appIcons/planview.jpg"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "nameFormat": "unspecified",
                        "tmName": "username",
                        "multiValues" : ["%{session.ad.last.attr.sAMAccountName}"],
                        "multiValueTypes" : ["username"]
                    },
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "nameFormat": "unspecified",
                        "tmName": "emailaddress",
                        "multiValues" : ["%{session.ad.last.attr.mail}"],
                        "multiValueTypes" : ["mail"]
                    }
                ],
                "subjectType": "unspecified",
                "subjectValue": "%{session.ad.last.attr.sAMAccountName}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://prod-pf.pluralsight.com/sp/ACS.saml2"
                    }
                ],
                "encryptionType": "aes128",
                "entityId": "www.pluralsight.com",
                "isAuthnRequestSigned": false,
                "signatureType": "rsa-sha1",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "templateType": "sp",
            "templateName": "pluralSight",
            "templateLabel": "PluralSight (Production)",
            "description": "Federation relationship with Plural Sight",
            "image": "img/appIcons/pluralsight.jpg",
            "documentLink": "https://www.pluralsight.com/content/dam/pluralsight/landing-pages/resource/tutorial/0697-15_OS_LMSIntegration-SSO_v1_sd.pdf"
        },
        {
            "ssoConfig": {
                "subjectType": "unspecified",
                "subjectValue": "%{session.logon.last.username}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [{
                    "binding": "http-post",
                    "index": 0,
                    "isDefault": true,
                    "uri": "https://service.projectplace.com/saml/login"
                }],
                "entityId": "https://service.projectplace.com/saml/metadata.xml",
                "isAuthnRequestSigned": false,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "templateName": "projectplace",
            "templateLabel": "Projectplace",
            "image": "img/appIcons/projectplace.jpg"
        },
        {
            "ssoConfig":{
                "attributes":[
                    {
                        "multiValues":[
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName":"E-Mail Address",
                        "multiValueTypes":[
                            "mail"
                        ]
                    },
                    {
                        "multiValues":[
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "tmName":"Given Name",
                        "multiValueTypes":[
                            "firstname"
                        ]
                    },
                    {
                        "multiValues":[
                            "%{session.ad.last.attr.sn}"
                        ],
                        "tmName":"Surname",
                        "multiValueTypes":[
                            "lastname"
                        ]
                    }
                ],
                "samlProfiles":[
                    "web-browser-sso"
                ],
                "subjectType":"entity",
                "subjectValue":"%{session.ad.last.attr.sAMAccountName}",
                "subjectValueType":"username"
            },
            "spConnector":{
                "assertionConsumerServices":[
                    {
                        "index":0,
                        "isDefault":true,
                        "uri":"https://$subDomain$.promapp.com/$tenantName$/saml/authenticate.aspx"
                    }
                ],
                "entityId":"https://$subDomain$.promapp.com/$tenantName$/",
                "isAuthnRequestSigned":false,
                "wantAssertionEncrypted":false,
                "wantAssertionSigned":false,
                "wantResponseSigned":false
            },
            "templatePropertyMetadata":{
                "variables":[
                    {
                        "name":"subDomain",
                        "displayLabel":"Sub Domain",
                        "helpText":"Provide the sub domain. For eg if the SSO URL is https://company.promapp.com/xyz/, the sub domain is company.",
                        "type":"inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties":[
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    },
                    {
                        "name":"tenantName",
                        "displayLabel":"Tenant Name",
                        "helpText":"Provide the Tenant Name. For eg if the SSO URL is https://company.promapp.com/tenant/, the Tenant Name is tenant.",
                        "type":"inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties":[
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "templateName":"promapp",
            "templateLabel":"Promapp",
            "image":"img/appIcons/promapp.jpg",
            "description":"Federation relationship with Promapp",
            "documentLink":"https://docs.microsoft.com/en-us/azure/active-directory/active-directory-saas-promapp-tutorial"
        },
        {
            "ssoConfig":{
                "subjectValue":"%{session.ad.last.attr.mail}",
                "subjectValueType":"mail"
            },
            "spConnector":{
                "assertionConsumerServices":[
                    {
                        "index":0,
                        "isDefault":true,
                        "uri":"https://saml.proxyclick.com/consume/$companyID$"
                    }
                ],
                "entityId":"https://saml.proxyclick.com/consume.jsp",
                "isAuthnRequestSigned":false,
                "wantAssertionEncrypted":false,
                "wantAssertionSigned":false,
                "wantResponseSigned":false
            },
            "templatePropertyMetadata":{
                "variables":[
                    {
                        "name":"companyID",
                        "displayLabel":"Company ID",
                        "helpText":"Provide the company ID. Ex: https://saml.proxyclick.com/consume/companyID. Usually company starts with characters \"CO\".",
                        "type":"inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties":[
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "templateName":"Proxyclick",
            "templateLabel":"Proxyclick",
            "image": "img/appIcons/proxyclick.jpg",
            "description":"Federation relationship with Proxyclick",
            "documentLink":"http://help.proxyclick.com/visitor-management/onelogin/"
        },
        {
            "spConnector": {
                "entityId": "QualysGuard_SharedPlatform-SAML20-SP",
                "isAuthnRequestSigned": true,
                "assertionConsumerServices": [
                    {
                        "isDefault": true,
                        "index": 0,
                        "uri": "https://$qualysGuardPlatform$/IdM/saml2/"
                    }
                ]
            },
            "ssoConfig": {
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.employeeID}"
                        ],
                        "multiValueTypes": [
                            "username"
                        ],
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "tmName": "qualysguard_external_id"
                    }
                ],
                "subjectType": "transient",
                "subjectValue": "%{session.ad.last.attr.employeeID}",
                "subjectValueType": "username",
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValueTypeType": "username"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "qualysGuardPlatform",
                        "displayLabel": "Qualys Guard Platform",
                        "helpText": "Select Qualys Guard Platform to configure ACS URI",
                        "type": "dropdown",
                        "values": {
                            "us_platform1" : {
                                "value" : "us_platform1",
                                "displayValue" : "US Platform 1",
                                "targetProperties": [
                                    {
                                        "name" : "spConnector.assertionConsumerServices[0].uri",
                                        "value" : "https://qualysguard.qualys.com/IdM/saml2/"
                                    }
                                ]
                            },
                            "us_platform2" : {
                                "value" : "us_platform2",
                                "displayValue" : "US Platform 2",
                                "targetProperties": [
                                    {
                                        "name" : "spConnector.assertionConsumerServices[0].uri",
                                        "value" : "https://qualysguard.qg2.apps.qualys.com/IdM/saml2/"
                                    }
                                ]
                            },
                            "eu_platform" : {
                                "value" : "eu_platform",
                                "displayValue" : "EU Platform",
                                "targetProperties": [
                                    {
                                        "name" : "spConnector.assertionConsumerServices[0].uri",
                                        "value" : "https://qualysguard.qualys.eu/IdM/saml2/"
                                    }
                                ]
                            }
                        }
                    }
                ]},
            "templateName": "qualysGuard",
            "templateLabel": "Qualys Guard",
            "description": "Federation relationship with Qualys Guard",
            "image": "img/appIcons/qualys.jpg",
            "documentLink": "https://community.qualys.com/docs/DOC-4520#jive_content_id_Is_the_Federation_process_IDP_initiated_or_SP_initiated"
        },
        {
            "spConnector": {
                "entityId": "https://$subDomain$.quickbase.com",
                "assertionConsumerServices": [
                    {
                        "uri": "https://$subDomain$.quickbase.com/saml/SSOAssert.aspx",
                        "index": 0,
                        "isDefault": true
                    }
                ]
            },
            "ssoConfig": {
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectType": "unspecified",
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "tmName": "LastName",
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "tmName": "FirstName",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "tmName": "EmailAddress",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Provide the sub domain from the SSO URL. For eg - If the SSO URL is https://company.quickbase.com, then sub domain is company.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "templateName": "Quickbase",
            "templateLabel": "Quickbase",
            "image": "img/appIcons/quickbase.jpg",
            "description": "Federation relationship with Quickbase.",
            "documentLink": "http://help.quickbase.com/user-assistance/realm_saml_configure.html"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "nameFormat": "unspecified",
                        "tmName": "Email",
                        "multiValues" : ["%{session.ad.last.attr.mail}"],
                        "multiValueTypes": ["mail"]
                    }
                ],
                "subjectType": "email-address",
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectValueType": "mail"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 1,
                        "isDefault": true,
                        "uri": "https://auth.quickhelp.com/LoginSaml"
                    }
                ],
                "encryptionType": "aes128",
                "entityId": "https://auth.quickhelp.com",
                "isAuthnRequestSigned": false,
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-redirect",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "templateType": "sp",
            "templateName": "quickhelp",
            "templateLabel": "Brainstorm Quickhelp",
            "description": "Federation relationship with Brainstorm Quickhelp",
            "image": "img/appIcons/quickhelp.jpg"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "nameFormat": "unspecified",
                        "tmName": "uid",
                        "multiValues": ["%{session.ad.last.attr.sAMAccountName}"],
                        "multiValueTypes": ["username"]
                    }
                ],
                "subjectType": "transient",
                "subjectValue": "%{session.ad.last.attr.sAMAccountName}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://global.replicon.com/!/saml2/$companyKey$/sso/post"
                    }
                ],
                "encryptionType": "aes128",
                "entityId": "https://global.replicon.com/!/saml2/$companyKey$",
                "isAuthnRequestSigned": false,
                "signatureType": "rsa-sha1",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "companyKey",
                        "displayLabel": "Company Key",
                        "helpText": "Specify a Company Key which is used to setup entityId, example: https://global.replicon.com/!/saml2/<companyKey>",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "templateType": "sp",
            "templateName": "replicon",
            "templateLabel": "Replicon",
            "description": "Federation relationship with Replicon",
            "image": "img/appIcons/replicon.jpg",
            "documentLink": "https://www.replicon.com/help/setting-up-saml-11-for-replicon"
        },
        {
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectValueType": "mail"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$subDomain$.ringcentral.com/sp/ACS.saml2"
                    }
                ],
                "entityId": "$entityID$",
                "isAuthnRequestSigned": false,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Provide the sub domain. For eg - If the SSO URL is https://company.ringcentral.com/sp/ACS.saml2, then the sub domain is company.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    },
                    {
                        "name": "entityID",
                        "displayLabel": "Entity ID",
                        "helpText": "Please provide the Entity ID",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9:_.-\/]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), slash ( / ), colon ( : ) or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateLabel": "RingCentral",
            "description": "Federation relationship with RingCentral",
            "templateName": "ringCentral",
            "image": "img/appIcons/ringcentral.jpg",
            "documentLink": "https://success.ringcentral.com/articles/RC_Knowledge_Article/6748"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "userid",
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectValueType": "mail"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://www.riskcloud.net/prod/saml.aspx?ccode=$companyCode$"
                    },
                    {
                        "index": 1,
                        "isDefault": true,
                        "uri": "https://www.riskcloud.net/prod/?ccode=$companyCode$"
                    }
                ],
                "entityId": "https://www.riskcloud.net",
                "isAuthnRequestSigned": false,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "companyCode",
                        "displayLabel": "Company Code",
                        "helpText": "Provide the company code. For eg - If the SSO URL is https://www.riskcloud.net/prod/saml.aspx?ccode=test, then company code is test.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.assertionConsumerServices[1].uri"
                        ]
                    }
                ]
            },
            "templateName": "riskcloud.net",
            "templateLabel": "riskcoud.net",
            "image": "img/appIcons/riskcloud.jpg",
            "description": "Federation relationship with Riskcloud.net"
        },
        {
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "isDefault": true,
                        "index": 0,
                        "uri": "https://dashboard.robinpowered.com/sso/saml/custom"
                    }
                ],
                "entityId": "https://robinpowered.com",
                "wantAssertionSigned": false,
                "relayState": "https://dashboard.robinpowered.com/auth/saml"
            },
            "ssoConfig": {
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValue": "%{session.ad.last.attr.sAMAccountName}",
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "tmName": "FirstName",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "tmName": "LastName",
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "tmName": "Email",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "subjectValueType": "username"
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "templateName": "Robinpowered",
            "templateLabel": "Robinpowered",
            "image": "img/appIcons/robinpowered.jpg",
            "description": "Federation relationship with Robinpowered",
            "documentLink": "https://support.robinpowered.com/hc/en-us/articles/205893636-Enabling-single-sign-on-via-SAML-2-0"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.lastname}"
                        ],
                        "tmName": "FamilyName",
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "tmName": "GivenName",
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "mail",
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValueType": "mail"
            },
            "spConnector": {
                "entityId": "https://app.rolepoint.com/sso/saml/external-login",
                "assertionConsumerServices": [
                    {
                        "isDefault": true,
                        "index": 0,
                        "uri": "https://app.rolepoint.com/sso/saml/external-login"
                    }
                ]
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "templateName": "Rolepoint",
            "templateLabel": "Rolepoint",
            "image": "img/appIcons/rolepoint.jpg"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "nameFormat": "unspecified",
                        "tmName": "email",
                        "multiValues": ["%{session.ad.last.attr.mail}"],
                        "multiValueTypes" : ["mail"]
                    },
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "nameFormat": "unspecified",
                        "tmName": "firstname",
                        "multiValues": ["%{session.ad.last.attr.sAMAccountName}"],
                        "multiValueTypes" : ["username"]
                    }
                ],
                "subjectType": "unspecified",
                "subjectValue": "%{session.ad.last.attr.sAMAccountName}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 1,
                        "isDefault": true,
                        "uri": "http://$sailpointHost$/identityiq/login.jsf"
                    }
                ],
                "encryptionType": "aes128",
                "entityId": "http://$sailpointHost$/identityiq/",
                "isAuthnRequestSigned": false,
                "signatureType": "rsa-sha1",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "sailpointHost",
                        "displayLabel": "Sailpoint IIQ host",
                        "helpText": "Specify Sailpoint IIQ host which is used to setup entityId, example: if ACS URL is https://company/identityiq/login.jsf, then Sailpoint IIQ host is company",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "templateType": "sp",
            "templateName": "sailpointiiq",
            "templateLabel": "Sailpoint IIQ",
            "description": "Federation relationship with Sailpoint IIQ",
            "image": "img/appIcons/sailpoint.jpg"
        },
        {
            "templateName": "salesforce",
            "templateLabel": "Salesforce",
            "description": "Salesforce SaaS Application",
            "image": "img/appIcons/salesforce.jpg",
            "appHelp": "",
            "ssoConfig": {
                "subjectType": "unspecified",
                "subjectValueType": "mail",
                "subjectValue": "%session.ad.last.attr.mail",
                "samlProfiles": [
                    "web-browser-sso"
                ]
            },
            "spConnector": {
                "entityId": "https://$subDomain$.my.salesforce.com",
                "encryptionType": "aes128",
                "isAuthnRequestSigned": true,
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false,
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$subDomain$.my.salesforce.com?so=$domainSpecificId$"
                    }
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Provide the sub domain for your salesforce application. If the Entity ID is https://company.my.salesforce.com, then company is the sub domain",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    },
                    {
                        "name": "domainSpecificId",
                        "displayLabel": "Domain Specific ID",
                        "helpText": "Provide your domain specific unique id.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            }
        },
        {
            "spConnector": {
                "entityId": "https://saucelabs.com/sso/metadata",
                "assertionConsumerServices": [
                    {
                        "uri": "https://saucelabs.com/sso/acs",
                        "index": 0,
                        "isDefault": true
                    }
                ],
                "wantAssertionSigned": true
            },
            "ssoConfig": {
                "subjectType": "unspecified",
                "subjectValue": "%{session.ad.last.attr.mail}",
                "attributes": [
                    {
                        "tmName": "sn",
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "tmName": "givenName",
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "multiValueTypes": [
                            "firstname"
                        ]
                    }
                ],
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "templateName": "Saucelabs",
            "templateLabel": "Saucelabs",
            "image": "img/appIcons/saucelabs.jpg",
            "description": "Federation relationship with Saucelabs",
            "documentLink": "https://wiki.saucelabs.com/display/DOCS/Configuring+Active+Directory+Federated+Service+for+Sauce+Labs+SSO"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encryptionType": "aes256",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "Mail",
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "encryptionType": "aes256",
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "tmName": "Surname",
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "encryptionType": "aes256",
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "tmName": "GivenName",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "encryptionType": "aes256",
                        "multiValues": [
                            "%{session.ad.last.attr.userPrincipalName}"
                        ],
                        "tmName": "NameID",
                        "multiValueTypes": [
                            "username"
                        ]
                    },
                    {
                        "encryptionType": "aes256",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "Email",
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectType": "unspecified",
                "subjectValue": "%{session.ad.last.attr.userPrincipalName}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://www.securitymentor.com/simplesaml/module.php/saml/sp/saml2-acs.php/$orgId$"
                    },
                    {
                        "index": 1,
                        "isDefault": false,
                        "binding": "http-artifact",
                        "uri": "https://www.securitymentor.com/simplesaml/module.php/saml/sp/saml2-acs.php/$orgId$"
                    }
                ],
                "entityId": "https://www.securitymentor.com/simplesaml/module.php/saml/sp/metadata.php/$orgId$",
                "singleLogoutBinding": "http-redirect",
                "singleLogoutUri": "https://www.securitymentor.com/simplesaml/module.php/saml/sp/saml2-logout.php/$orgId$",
                "singleLogoutResponseUri": "https://www.securitymentor.com/simplesaml/module.php/saml/sp/saml2-logout.php/$orgId$",
                "isAuthnRequestSigned": false,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "orgId",
                        "displayLabel": "Organization ID",
                        "helpText": "Provide the organization ID.  For eg - If ACS URL is https://www.securitymentor.com/simplesaml/module.php/saml/sp/saml2-acs.php/company, then orgId is company.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateName": "Securitymentor",
            "templateLabel": "securitymentor",
            "image": "img/appIcons/securitymentor.jpg",
            "description": "Federation relationship with Securitymentor"
        },
        {
            "templateName": "servicenow",
            "templateLabel": "ServiceNow",
            "description": "ServiceNow SaaS Application",
            "image": "img/appIcons/servicenow.jpg",
            "appHelp": "",
            "ssoConfig": {
                "subjectType": "entity",
                "subjectValueType": "username",
                "subjectValue": "%{session.ad.last.attr.sAMAccountName}",
                "samlProfiles": [
                    "web-browser-sso"
                ]
            },
            "spConnector": {
                "entityId": "https://$subDomain$.service-now.com",
                "encryptionType": "aes128",
                "isAuthnRequestSigned": false,
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false,
                "singleLogoutUri": "https://$subDomain$.service-now.com/navpage.do",
                "singleLogoutResponseUri": "https://$subDomain$.service-now.com/navpage.do",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$subDomain$.service-now.com/navpage.do"
                    }
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Provide your sub domain from the SSO URL. For eg - If the URL is https://company.service-now.com, then sub domain is company.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.singleLogoutUri",
                            "spConnector.singleLogoutResponseUri"
                        ]
                    }
                ]
            }
        },
        {
            "image": "img/appIcons/sharefile.jpg",
            "description": "Federation relationship with Sharefile",
            "templateLabel": "Sharefile",
            "templateName": "Sharefile",
            "spConnector": {
                "entityId": "https://$subDomain$.sharefile.com/saml/info",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$subDomain$.sharefile.com/saml/acs"
                    }
                ],
                "isAuthnRequestSigned": true,
                "singleLogoutUri": "https://$subDomain$.sharefile.com/Auth/Logout",
                "singleLogoutResponseUri": "https://$subDomain$.sharefile.com/Auth/Logout",
                "wantResponseSigned": false
            },
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectType": "unspecified",
                "subjectValueType": "mail",
                "attributes": [
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "tmName": "NameID",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "samlProfiles": [
                    "web-browser-sso"
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "type": "inputText",
                        "helpText": "Provide your sub domain. If the SSO URL is like https://company.sharefile.com/saml/acs, then sub domain is company",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.singleLogoutUri",
                            "spConnector.singleLogoutResponseUri",
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "documentLink": "n/a"
        },
        {
            "spConnector": {
                "singleLogoutUri": "https://$subDomain$.signmesh.com/public_html/simplesaml/module.php/saml/sp/saml2-logout.php/default-sp",
                "assertionConsumerServices": [
                    {
                        "isDefault": true,
                        "index": 0,
                        "uri": "https://$subDomain$.signmesh.com/public_html/simplesaml/module.php/saml/sp/saml2-acs.php/default-sp"
                    }
                ],
                "entityId": "https://$subDomain$.signmesh.com/public_html/simplesaml/module.php/saml/sp/metadata.php/default-sp"
            },
            "ssoConfig": {
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectType": "transient",
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.ldap.last.attr.mail}"
                        ],
                        "tmName": "email",
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "subjectValue": "%{session.ldap.last.attr.mail}",
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Provide the sub domain. For eg - If the SSO URI is https://company.signmesh.com/public_html/simplesaml/module.php/saml/sp/metadata.php/default-sp, then the sub domain is company.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.singleLogoutUri",
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateName": "Signmesh",
            "templateLabel": "Signmesh",
            "image": "img/appIcons/signmesh.jpg",
            "description": "Federation relationship with Signmesh"
        },
        {
            "spConnector": {
                "entityId": "http://$domain$/adfs/services/trust",
                "singleLogoutUri": "https://$domain$/adfs/ls/",
                "assertionConsumerServices": [
                    {
                        "uri": "https://$domain$/adfs/ls/",
                        "index": 0,
                        "isDefault": true
                    }
                ]
            },
            "ssoConfig": {
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "Name",
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "tmName": "Email Address",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "username"
                        ]
                    },
                    {
                        "tmName": "issuer",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "username"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "domain",
                        "displayLabel": "Domain Name",
                        "helpText": "From the SSO URL https://company.auth.silkroad.com/adfs/ls/ , domain is company.auth.silkroad.com",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.singleLogoutUri",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "templateName": "Silkroad Recruiting",
            "templateLabel": "Silkroad Recruiting",
            "image": "img/appIcons/silkroad.jpg",
            "description": "Federation relationship with Silkroad Recruiting"
        },
        {
            "spConnector": {
                "wantAssertionEncrypted": true,
                "assertionConsumerServices": [
                    {
                        "uri": "https://$subDomain$.silkroad.com/Authentication/",
                        "index": 0,
                        "isDefault": true
                    }
                ],
                "relayState": "https://$subDomain$.silkroad.com/rc/",
                "singleLogoutResponseUri": "https://onboarding.teamhealth.com/logout-now",
                "entityId": "https://$subDomain$.silkroad.com/Authentication/SP",
                "singleLogoutUri": "https://$subDomain$.silkroad.com/Authentication/saml20/Logout",
                "signatureType": "rsa-sha256"
            },
            "ssoConfig": {
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValue": "%{session.logon.last.username}",
                "subjectType": "entity",
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.logon.last.username}"
                        ],
                        "tmName": "username",
                        "multiValueTypes": [
                            "username"
                        ]
                    }
                ],
                "subjectValueType": "username"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "If the SSO URL is https://company.silkroad.com/Authentication/, sub domain is company",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.relayState",
                            "spConnector.entityId",
                            "spConnector.singleLogoutUri"
                        ]
                    }
                ]
            },
            "templateName": "Silkroad Redcarpet",
            "templateLabel": "Silkroad Redcarpet",
            "image": "img/appIcons/silkroad.jpg",
            "description": "Federation relationship with Silkroad Redcarpet"
        },
        {
            "spConnector": {
                "wantAssertionEncrypted": true,
                "encryptionType": "aes256",
                "wantResponseSigned": true,
                "assertionConsumerServices": [
                    {
                        "uri": "https://getsilo.com/sso/saml/$companyId$/login",
                        "index": 0,
                        "isDefault": true
                    }
                ],
                "entityId": "https://getsilo.com/sso/saml/$companyId$/"
            },
            "ssoConfig": {
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "email",
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "tmName": "sn",
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "tmName": "givenName",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "companyId",
                        "displayLabel": "Company ID",
                        "helpText": "Provide your unique company ID from the SSO URL. For eg, from https://getsilo.com/sso/saml/company/login URL, company is the company ID.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateName": "Silo",
            "templateLabel": "Silo Authentic8",
            "description": "Federation relationship with Silo (Authentic8)",
            "image": "img/appIcons/silo.jpg",
            "documentLink": "https://support.authentic8.com/support/solutions/articles/16000035031-saml-sso-for-silo-access"
        },
        {
            "spConnector": {
                "entityId": "https://sso.skillport.com",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://sso.skillport.com/sp/ACS.saml2"
                    }
                ],
                "relayState": "",
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "isAuthnRequestSigned": true,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": true
            },
            "templateLabel": "SkillPort",
            "templateName": "SkillPort",
            "description": "Federation relationship with SkillPort",
            "image": "img/appIcons/skillport.jpg",
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.sAMAccountName}",
                "subjectType": "unspecified",
                "subjectValueType": "username",
                "attributes": [],
                "samlProfiles": [
                    "web-browser-sso"
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                ],
                "requiredProperties" : {
                    "spConnector" : ["relayState"]
                }
            },
            "documentLink": ""
        },
        {
            "templateName": "slack",
            "templateLabel": "Slack",
            "description": "Slack SaaS Application",
            "image": "img/appIcons/slack.jpg",
            "appHelp": "Please configure Active Directory query in Authentication step and select user's email query attribute.",
            "ssoConfig": {
                "subjectType": "persistent",
                "subjectValueType": "mail",
                "subjectValue": "%session.ad.last.attr.mail",
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "attributes": [
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ],
                        "tmName": "User.Mail",
                        "nameFormat": "unspecified"
                    }
                ]
            },
            "spConnector": {
                "entityId": "https://$subDomain$.slack.com",
                "encryptionType": "aes128",
                "isAuthnRequestSigned": false,
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false,
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$subDomain$.slack.com/sso/saml"
                    }
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Provide the sub domain from SSO URL. For eg - If URL is https://company.slack.com/sso/saml, then company is the sub domain.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            }
        },
        {
            "spConnector": {
                "entityId": "SmartRecruiters",
                "assertionConsumerServices": [
                    {
                        "uri": "https://www.smartrecruiters.com/web-sso/saml/$companyID$/callback",
                        "index": 0,
                        "isDefault": true
                    }
                ]
            },
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.mail}",
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "companyID",
                        "displayLabel": "Company ID",
                        "helpText": "Provide the companyIdentifier from the SSO URL like https://www.smartrecruiters.com/web-sso/saml/<CompanyIdentifier>/login",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "templateName": "SmartRecruiters",
            "templateLabel": "SmartRecruiters",
            "image": "img/appIcons/smartrecruiters.jpg",
            "description": "Federation relationship with SmartRecruiters",
            "documentLink": "https://dev.smartrecruiters.com/web-single-sign-on/configuration/"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "emailaddress",
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "tmName": "surname",
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.givenname}"
                        ],
                        "tmName": "givenname",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    }
                ],
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectType": "unspecified",
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectValueType": "mail"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://sso.smartsheet.com/Shibboleth.sso/SAML2/POST"
                    }
                ],
                "entityId": "https://sso.smartsheet.com/saml",
                "isAuthnRequestSigned": false,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                ]
            },
            "templateName": "smartSheet",
            "templateLabel": "Smart Sheet",
            "image": "img/appIcons/smartsheet.jpg",
            "description": "Federation relationship with SmartSheet",
            "documentLink": "https://www.smartsheet.com/sites/default/files/samlselfserviceinstructions-02-13-16.pdf"
        },
        {
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "uri": "",
                        "isDefault": true,
                        "index": 1
                    }
                ],
                "entityId": "$entityId$"
            },
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.mail}",
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "attributes": [
                    {
                        "tmName": "Username",
                        "multiValues": [
                            "%{session.ad.last.attr.cn}"
                        ],
                        "multiValueTypes": [
                            "username"
                        ]
                    },
                    {
                        "tmName": "Last Name",
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "tmName": "First Name",
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "Email",
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "entityId",
                        "displayLabel": "Entity ID",
                        "helpText": "Provide the entity ID from the SAML metadata. It looks like - https://company.com/api/1/rest/admin/sso/login?org_path=company",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9:_.-\/]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), slash ( / ), colon ( : ) or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId"
                        ]
                    }]
            },
            "templateName": "Snaplogic",
            "templateLabel": "Snaplogic",
            "image": "img/appIcons/snaplogic.jpg",
            "description": "Federation support for Snaplogic"
        },
        {
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "uri": "https://$subDomain$.socialcast.com/saml/authenticate",
                        "isDefault": true,
                        "index": 0
                    }
                ],
                "entityId": "https://$subDomain$.socialcast.com"
            },
            "ssoConfig": {
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "attributes": [
                    {
                        "tmName": "last_name",
                        "multiValues": [
                            "%{session.ldap.last.attr.sn}"
                        ],
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "tmName": "first_name",
                        "multiValues": [
                            "%{session.ldap.last.attr.givenName}"
                        ],
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "tmName": "mail",
                        "multiValues": [
                            "%{session.ldap.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "subjectValue": "%{session.logon.last.username}",
                "subjectValueType": "username"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "If your SSO url is https://company.socialcast.com, sub domain is company",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateName": "Socialcast",
            "templateLabel": "Socialcast",
            "image": "img/appIcons/socialcast.jpg",
            "description": "Federation relationship with Socialcast",
            "documentLink": "http://developers.socialcast.com/community-administrator-documentation/admin/single-sign-on/configuring-ssosaml-2/"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "EmailAddress",
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectValueType": "mail"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 1,
                        "isDefault": true,
                        "uri": "https://$subDomain$.soxhub.com/api/v1/sso/saml/assert"
                    }
                ],
                "entityId": "https://$subDomain$.soxhub.com/api/v1/sso/saml/metadata.xml",
                "isAuthnRequestSigned": false,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Provide the sub domain from the SSO URL. For eg - If the SSO URL is https://testcompany.soxhub.com/api/v1/sso/saml/assert, then the sub domain is testcompany.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateName": "soxhub",
            "templateLabel": "soxhub",
            "image": "img/appIcons/soxhub.jpg",
            "description": "Federation relationship with soxhub"
        },
        {
            "image": "img/appIcons/splunk.jpg",
            "description": "Federation relationship with Splunk",
            "templateLabel": "Splunk",
            "templateName": "Splunk",
            "spConnector": {
                "entityId": "$entityId$",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$hostname$/saml/acs"
                    }
                ],
                "isAuthnRequestSigned": true,
                "singleLogoutUri": "https://$hostname$/saml/logout",
                "wantResponseSigned": true
            },
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.sAMAccountName}",
                "subjectType": "unspecified",
                "subjectValueType": "username",
                "attributes": [],
                "samlProfiles": [
                    "web-browser-sso"
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "hostname",
                        "displayLabel": "Splunk Hostname",
                        "type": "inputText",
                        "helpText": "Provide the hostname from the SSO URL. For eg, If the SSO URL is https://abcd.com/saml/acs, then the hostname is abcd.com.",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.singleLogoutUri",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    },
                    {
                        "name": "entityId",
                        "displayLabel": "Splunk Entity ID",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9:_.-\/]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), slash ( / ), colon ( : ) or hyphen ( - )."
                            }
                        ],
                        "helpText": "Provide the entity ID from Splunk configuration.",
                        "targetProperties": [
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "documentLink": "http://docs.splunk.com/Documentation/Splunk/6.6.2/Security/ConfigureSSOinSplunkWeb"
        },
        {
            "spConnector": {
                "entityId": "https://saml.sprinklr.com",
                "assertionConsumerServices": [
                    {
                        "uri": "https://$subDomain$.sprinklr.com/ui/sso/saml/$accountNumber$",
                        "index": 0,
                        "isDefault": true
                    }
                ],
                "isAuthnRequestSigned": true
            },
            "ssoConfig": {
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValue": "%{session.ldap.last.attr.mail}",
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Provide the sub domain. For eg - In SSO URL, https://company.sprinklr.com/ui/sso/saml/249, company is the sub domain",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    },
                    {
                        "name": "accountNumber",
                        "displayLabel": "Account Number",
                        "helpText": "In SSO URL https://company.sprinklr.com/ui/sso/saml/135, 135 is the account number",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "templateName": "Sprinklr",
            "templateLabel": "Sprinklr",
            "image": "img/appIcons/sprinklr.jpg",
            "description": "Federation relationship with Sprinklr"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "nameFormat": "unspecified",
                        "tmName": "cn",
                        "multiValues": ["%{session.ldap.last.attr.cn}"],
                        "multiValueTypes": ["username"]
                    },
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "nameFormat": "unspecified",
                        "tmName": "mail",
                        "multiValues": ["%{session.ldap.last.attr.mail}"],
                        "multiValueTypes": ["username"]
                    }
                ],
                "subjectType": "persistent",
                "subjectValue": "%{session.ldap.last.attr.cn}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "binding": "http-artifact",
                        "index": 1,
                        "isDefault": true,
                        "uri": "http://$squizSite$/saml/saml2-assertion-consumer-service"
                    }
                ],
                "encryptionType": "aes256",
                "entityId": "https://$squizSite$/saml",
                "isAuthnRequestSigned": true,
                "signatureType": "rsa-sha1",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false,
                "singleLogoutResponseUri": "https://$squizSite$/saml/saml2-single-logout-service",
                "singleLogoutUri": "https://$squizSite$/saml/saml2-single-logout-service"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "squizSite",
                        "displayLabel": "Squiz Hostname",
                        "helpText": "Specify Squiz hostname or site which is used to setup entity ID, example https://<acme.squiz.net>/saml",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateType": "sp",
            "templateName": "squiz",
            "templateLabel": "Squiz",
            "image": "img/appIcons/squiz.jpg",
            "documentLink": "https://matrix.squiz.net/manuals/saml/chapters/details-screen",
            "description": "Federation relationship with Squiz"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ldap.last.attr.sn}"
                        ],
                        "tmName": "LASTNAME",
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ldap.last.attr.givenName}"
                        ],
                        "tmName": "FIRSTNAME",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ldap.last.attr.mail}"
                        ],
                        "tmName": "EMAIL",
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "subjectValue": "%{session.ldap.last.attr.logonname}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "http://$subDomain$.stapleseasyprint.com/Order/SAML2"
                    }
                ],
                "entityId": "http://$subDomain$.stapleseasyprint.com/Order/SAML2",
                "isAuthnRequestSigned": true,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Specify Sub Domain. If your ACS URL or entity ID is http://acme.stapleseasyprint.com/Order/SAML2, then enter acme for Sub Domain.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateName": "stapleseasyprint",
            "templateLabel": "Satples Easy Print",
            "image": "img/appIcons/staples.jpg",
            "description": "Federation relationship with Staples Easy Print"
        },
        {
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.sAMAcountName}",
                "subjectType": "transient",
                "attributes": [
                    {
                        "tmName": "urn:oid:2.5.4.42",
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "tmName": "urn:oid:2.5.4.4",
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "tmName": "urn:oid:2.16.840.1.113730.3.1.241",
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "tmName": "urn:oid:1.3.6.1.4.1.5923.1.1.1.6",
                        "multiValues": [
                            "%{session.ad.last.attr.sAMAccountName}"
                        ],
                        "multiValueTypes": [
                            "username"
                        ]
                    },
                    {
                        "tmName": "urn:oid:0.9.2342.19200300.100.1.3",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "subjectValueType": "username"
            },
            "spConnector": {
                "entityId": "https://studentsuccess.org/SSO/$universityId$",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://studentsuccess.org/simplesaml/module.php/saml/sp/saml2-acs.php/$universityId$"
                    }
                ],
                "singleLogoutUri": "https://studentsuccess.org/simplesaml/module.php/saml/sp/saml2-logout.php/$universityId$"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "universityId",
                        "displayLabel": "University Identifier",
                        "helpText": "Provide the university identifier. For eg - If the SSO URI is https://studentsuccess.org/SSO/f5university, then the university identifier is f5university.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.singleLogoutUri"
                        ]
                    }
                ]
            },
            "templateName": "StudentSuccess",
            "templateLabel": "StudentSuccess",
            "image": "img/appIcons/studentsuccess.jpg",
            "description": "Federation relationship with Student Success"
        },
        {
            "spConnector": {
                "entityId": "https://www.successfactors.com/$companyID$",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$domainName$/saml2/SAMLAssertionConsumer?company=$companyID$"
                    }
                ],
                "relayState": "/sf/home",
                "signatureType": "rsa-sha1",
                "singleLogoutResponseUri": "https://$domainName$/saml2/LogoutServiceHTTPRedirectResponse?company=$companyID$",
                "singleLogoutUri": "https://$domainName$/saml2/LogoutServiceHTTPRedirect?company=$companyID$",
                "singleLogoutBinding": "http-redirect",
                "isAuthnRequestSigned": true,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": true
            },
            "templateLabel": "SAP Successfactors",
            "templateName": "Successfactors",
            "description": "Federation relationship with SAP Successfactors",
            "image": "img/appIcons/successfactors.jpg",
            "ssoConfig": {
                "subjectValue": "%{session.logon.last.username}",
                "subjectType": "unspecified",
                "subjectValueType": "username",
                "attributes": [],
                "samlProfiles": [
                    "web-browser-sso"
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "companyID",
                        "displayLabel": "Company ID",
                        "type": "inputText",
                        "helpText": "Provide the company ID from the SSO URL. For eg- If the SSO URL is https://test.company.com/saml2/SAMLAssertionConsumer?company=testcompany, then company Id is testcompany.",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.singleLogoutResponseUri",
                            "spConnector.singleLogoutUri"
                        ]
                    },
                    {
                        "name": "domainName",
                        "displayLabel": "Domain Name",
                        "type": "inputText",
                        "helpText": "Provide the domain name from the SSO URL. For eg- If the SSO URL is https://test.company.com/saml2/SAMLAssertionConsumer?company=testcompany, then domain name is test.company.com.",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.singleLogoutResponseUri",
                            "spConnector.singleLogoutUri"
                        ]
                    }
                ],
                "requiredProperties" : {
                    "spConnector" : ["relayState"]
                }
            },
            "documentLink": ""
        },
        {
            "image": "img/appIcons/sumologic.jpg",
            "description": "Federation relationship with Sumo Logic",
            "spConnector": {
                "entityId": "https://service.us2.sumologic.com/sumo/saml/login/$configID$",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://service.us2.sumologic.com/sumo/saml/consume/$configID$"
                    }
                ],
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false
            },
            "templateLabel": "Sumo Logic",
            "templateName": "Sumo Logic",
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.mail}",
                "attributes": [],
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectType": "unspecified",
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "configID",
                        "displayLabel": "Configuration ID",
                        "helpText": "Provide the Sumo Logic Configuration ID from the authentication request URL provided by Sumo Logic.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "documentLink": "https://help.sumologic.com/Manage/Security/SAML/01-Set-Up-SAML-for-Single-Sign-On"
        },
        {
            "ssoConfig":{
                "subjectValue":"%{session.ad.last.attr.mail}",
                "subjectValueType":"mail"
            },
            "spConnector":{
                "assertionConsumerServices":[
                    {
                        "index":0,
                        "isDefault":true,
                        "uri":"https://$subDomain$.syncplicity.com/Auth/AssertionConsumerService.aspx"
                    }
                ],
                "entityId":"https://$subDomain$.syncplicity.com/sp",
                "isAuthnRequestSigned":false,
                "wantAssertionEncrypted":false,
                "wantAssertionSigned":false,
                "wantResponseSigned":false
            },
            "templatePropertyMetadata":{
                "variables":[
                    {
                        "name":"subDomain",
                        "displayLabel":"Sub Domain",
                        "helpText":"Provide the sub domain. For eg - If the SSO URL is https://company.syncplicity.com/Auth/AssertionConsumerService.aspx, then the sub domain is company.",
                        "type":"inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties":[
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateName":"Syncplicity",
            "templateLabel":"Syncplicity",
            "image": "img/appIcons/syncplicity.jpg",
            "description":"Federation relationship with Syncplicity",
            "documentLink":"https://www.miniorange.com/syncplicity-single-sign-on-(sso)"
        },
        {
            "spConnector": {
                "entityId": "$entityId$",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": ""
                    }
                ],
                "relayState": "",
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false
            },
            "templateLabel": "Taleo",
            "templateName": "Taleo",
            "description": "Federation relationship with Taleo",
            "image": "img/appIcons/Taleo.jpg",
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.employeeNumber}",
                "subjectType": "entity",
                "subjectValueType": "objectGUIDencoded",
                "attributes": [],
                "samlProfiles": [
                    "web-browser-sso"
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "entityId",
                        "displayLabel": "Entity ID",
                        "type": "inputText",
                        "helpText": "Provide the entity ID.",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9:_.-\/]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), slash ( / ), colon ( : ) or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId"
                        ]
                    }
                ],
                "requiredProperties" : {
                    "spConnector" : ["relayState"]
                }
            },
            "documentLink": "http://www.oracle.com/technetwork/documentation/tbessov15a2-2543940.pdf"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "tmName": "email",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "tmName": "firstName",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "tmName": "lastName",
                        "multiValueTypes": [
                            "lastname"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValueType": "mail"
            },
            "spConnector": {
                "entityId": "https://event.webcasts.com",
                "relayState": "",
                "assertionConsumerServices": [
                    {
                        "uri": "https://event.webcasts.com/viewer/saml/nice/consume.jsp",
                        "index": 0,
                        "isDefault": true
                    }
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                ],
                "requiredProperties" : {
                    "spConnector" : ["relayState"]
                }
            },
            "templateName": "Talkpoint",
            "templateLabel": "Talkpoint webcasts",
            "image": "img/appIcons/talkpoint.jpg",
            "description": "Federation relationship with Talkpoint webcasts"
        },
        {
            "image": "img/appIcons/tangoe.jpg",
            "description": "Federation relationship with Tangoe",
            "spConnector": {
                "entityId": "tangoe.com",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://sso.tangoe.com/sp/ACS.saml2"
                    }
                ],
                "relayState": "https://www.traq.com/traqmanage/login/home.trq",
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false
            },
            "templateLabel": "Tangoe",
            "templateName": "Tangoe Command Premium Mobile",
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.sAMAccountName}",
                "attributes": [],
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectType": "entity",
                "subjectValueType": "username"
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "documentLink": "n/a"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ldap.last.attr.sn}"
                        ],
                        "tmName": "lastname",
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ldap.last.attr.givenName}"
                        ],
                        "tmName": "firstname",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ldap.last.attr.mail}"
                        ],
                        "tmName": "email",
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "subjectValue": "%{session.logon.last.username}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://secure.terranovasite.com/lms/login/saml2/tnssosp_ACS.aspx?e=$serviceUUID$"
                    }
                ],
                "entityId": "https://secure.terranovasite.com/lms/login/saml2/",
                "isAuthnRequestSigned": true,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "serviceUUID",
                        "displayLabel": "Service UUID",
                        "helpText": "Specify Service UUID. If your ACS URL is https://secure.terranovasite.com/lms/login/saml2/tnssosp_ACS.aspx?e=1bac98a2-d7b0-46ea-a718-264ac8e77173 then enter 1bac98a2-d7b0-46ea-a718-264ac8e77173 for Service UUDI.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "templateName": "terranovasite",
            "templateLabel": "Terranova WW Corp",
            "image": "img/appIcons/terranova.jpg",
            "description": "Federation relationship with Terranova WW Corp"
        },
        {
            "spConnector": {
                "entityId": "http://$subDomain$.thirdlight.com/saml/sp",
                "singleLogoutUri": "https://$subDomain$.thirdlight.com/samlconsume.tlx/$uniqueId$/module.php/saml/sp/saml2-logout.php/samlauth",
                "assertionConsumerServices": [
                    {
                        "uri": "https://$subDomain$.thirdlight.com/samlconsume.tlx/$uniqueId$/module.php/saml/sp/saml2-acs.php/samlauth",
                        "index": 0,
                        "isDefault": true
                    }
                ]
            },
            "ssoConfig": {
                "attributes": [
                    {
                        "tmName": "name",
                        "multiValues": [
                            "%{session.ad.last.attr.displayName}"
                        ],
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.sAMAccountName}"
                        ],
                        "tmName": "commonname",
                        "multiValueTypes": [
                            "username"
                        ]
                    },
                    {
                        "tmName": "emailaddress",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "subjectType": "persistent",
                "subjectValue": "%{session.ad.last.attr.sAMAccountName}",
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValueType": "username"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "If your SSO URL is http://company.thirdlight.com/saml/sp, then sub domain is company.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.singleLogoutUri",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    },
                    {
                        "name": "uniqueId",
                        "displayLabel": "Unique Company Identifier",
                        "helpText": "From the ACS URL, https://$subDomain$.thirdlight.com/samlconsume.tlx/1234567890/module.php/saml/sp/saml2-acs.php/samlauth, then the Unique Company Identifier is 1234567890",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.singleLogoutUri"
                        ]
                    }
                ]
            },
            "templateName": "Thirdlight",
            "templateLabel": "Thirdlight",
            "image": "img/appIcons/thirdlight.jpg",
            "description": "Federation relationship with Thirdlight"
        },
        {
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "uri": "https://saml-lb.tigertext.me/v1/organization/$organizationId$/saml/consume",
                        "index": 0,
                        "isDefault": true
                    }
                ],
                "singleLogoutUri": "https://saml-lb.tigertext.me/v1/organization/$organizationId$/saml/logout",
                "entityId": "https://home.tigertext.com/"
            },
            "ssoConfig": {
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectType": "entity",
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "organizationId",
                        "displayLabel": "Organization ID",
                        "helpText": "Provide the organization ID. For eg - If the SSO URL is https://saml-lb.tigertext.me/v1/organization/abcdefgh01234/saml/consume, then organization id is abcdefgh01234.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.singleLogoutUri"
                        ]
                    }
                ]
            },
            "templateName": "Tigertext",
            "templateLabel": "Tigertext.me",
            "image": "img/appIcons/tigertext.jpg",
            "description": "Federation relationship with Tigertext.me"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "tmName": "LastName",
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "tmName": "FirstName",
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "Email",
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.email}",
                "subjectValueType": "mail"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://www.tingo.com/saml/SSO"
                    }
                ],
                "entityId": "www.tingo.com",
                "isAuthnRequestSigned": false,
                "singleLogoutUri": "https://www.tingo.com/saml/SingleLogout",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "templateName": "tingo",
            "templateLabel": "Tingo",
            "image": "img/appIcons/tingo.jpg",
            "description": "Federation relationship with Tingo",
            "documentLink": ""
        },
        {
            "spConnector": {
                "wantAssertionSigned": false,
                "entityId": "tracesecurity",
                "isAuthnRequestSigned": true,
                "assertionConsumerServices": [{
                    "isDefault": true,
                    "index": 0,
                    "uri": "https://$subDomain$.tracesecurity.com/saml/SSO/alias/tracesecurity"
                }],
                "singleLogoutUri": "https://$subDomain$.tracesecurity.com/saml/SingleLogout/alias/tracesecurity"
            },
            "ssoConfig": {
                "subjectType": "unspecified",
                "attributes": [{
                    "tmName": "updateTimeStamp",
                    "multiValues": ["%{session.ad.last.attr.whenChanged}"],
                    "multiValueTypes": ["username"]
                }, {
                    "multiValues": ["%{session.ad.last.attr.sAMAccountName}"],
                    "tmName": "uid",
                    "multiValueTypes": ["username"]
                }, {
                    "multiValues": ["%{session.ad.last.attr.sn}"],
                    "tmName": "lastname",
                    "multiValueTypes": ["username"]
                }, {
                    "multiValues": ["%{session.ad.last.attr.givenName}"],
                    "tmName": "firstname",
                    "multiValueTypes": ["username"]
                }, {
                    "tmName": "email",
                    "multiValues": ["%{session.ad.last.attr.mail}"],
                    "multiValueTypes": ["username"]
                }, {
                    "tmName": "NameID",
                    "multiValues": ["%{session.ad.last.attr.sAMAccountName}"],
                    "multiValueTypes": ["username"]
                }],
                "subjectValue": "%{session.ad.last.attr.sAMAccountName}",
                "samlProfiles": ["web-browser-sso"],
                "subjectValueType": "username"
            },
            "templatePropertyMetadata": {
                "variables": [{
                    "name": "subDomain",
                    "displayLabel": "Sub Domain",
                    "helpText": "Enter the sub domain",
                    "type": "inputText",
                    "validator": [
                        {
                            "type": "regex-validator",
                            "pattern": "^[a-zA-Z0-9_.-]*$",
                            "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                        }
                    ],
                    "targetProperties": ["spConnector.assertionConsumerServices[0].uri", "spConnector.singleLogoutUri"]
                }]
            },
            "templateName": "tracesecurity",
            "templateLabel": "TraceSecurity",
            "image": "img/appIcons/tracesecurity.jpg"
        },
        {
            "spConnector": {
                "relayState": "https://trello.com/auth/saml/metadata",
                "entityId": "https://trello.com/auth/saml/metadata",
                "assertionConsumerServices": [
                    {
                        "isDefault": true,
                        "index": 0,
                        "uri": "https://trello.com/auth/saml/consume/$enterpriseId$"
                    }
                ]
            },
            "ssoConfig": {
                "attributes": [
                    {
                        "tmName": "User.Email",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "tmName": "User.FirstName",
                        "multiValues": [
                            "%{session.ad.last.attr.givenname}"
                        ],
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "tmName": "User.LastName",
                        "multiValues": [
                            "%{session.ad.last.attr.lastname}"
                        ],
                        "multiValueTypes": [
                            "lastname"
                        ]
                    }
                ],
                "subjectType": "persistent",
                "subjectValue": "%{session.ad.last.attr.mail}",
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "enterpriseId",
                        "displayLabel": "Enterprise ID",
                        "helpText": "Provide the enterprise/company ID provided by Trello",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "templateName": "Trello",
            "templateLabel": "Trello",
            "image": "img/appIcons/trello.jpg",
            "description": "Federation relationship with Trello"
        },
        {
            "ssoConfig":{
                "attributes":[
                    {
                        "encrypt":false,
                        "multiValues":[
                            "%{session.logon.last.username}"
                        ],
                        "tmName":"display_name",
                        "multiValueTypes":[
                            "username"
                        ]
                    }
                ],
                "subjectValue":"%{session.ad.last.attr.mail}",
                "subjectValueType":"mail"
            },
            "spConnector":{
                "assertionConsumerServices":[
                    {
                        "index":0,
                        "isDefault":true,
                        "uri":"https://$subdomain$.uservoice.com/saml/consume"
                    }
                ],
                "entityId":"$subdomain$.uservoice.com",
                "isAuthnRequestSigned":false,
                "wantAssertionEncrypted":false,
                "wantAssertionSigned":false,
                "wantResponseSigned":false
            },
            "templatePropertyMetadata":{
                "variables":[
                    {
                        "name":"subdomain",
                        "displayLabel":"Sub Domain",
                        "helpText":"Provide the sub domain. For eg - If the URL is company.uservoice.com, then the sub domain is company.",
                        "type":"inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties":[
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateName":"userVoice",
            "templateLabel":"UserVoice",
            "image":"img/appIcons/UserVoice.jpg",
            "description":"Federation Relationship with Uservoice",
            "documentLink":"https://developer.uservoice.com/docs/single-sign-on/single-sign-on/"
        },
        {
            "image": "img/appIcons/Vcloud.jpg",
            "description": "Federation relationship with VCloud Director",
            "spConnector": {
                "entityId": "https://$vcdHostname$/cloud/org/$orgName$/saml/metadata/alias/vcd",
                "assertionConsumerServices": [
                    {
                        "binding": "http-artifact",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$vcdHostname/cloud/org/$orgName/saml/SSO/alias/vcd"
                    }
                ],
                "isAuthnRequestSigned": true,
                "singleLogoutUri": "https://$vcdHostname$/cloud/org/$orgName$/saml/SingleLogout/alias/vcd",
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false
            },
            "templateLabel": "VCloud Director",
            "templateName": "VCloud_Director",
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.cn}",
                "subjectValueType": "username",
                "subjectType": "unspecified",
                "attributes": [
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "tmName": "EmailAddress",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "tmName": "Groups",
                        "multiValues": [
                            "%{session.ad.last.attr.memberOf}"
                        ],
                        "multiValueTypes": [
                            "department"
                        ]
                    },
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "tmName": "FullName",
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "tmName": "UserName",
                        "multiValues": [
                            "%{session.ad.last.attr.cn}"
                        ],
                        "multiValueTypes": [
                            "firstname"
                        ]
                    }
                ],
                "samlProfiles": [
                    "web-browser-sso"
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "orgName",
                        "displayLabel": "Organization Name",
                        "type": "inputText",
                        "helpText": "Provide the organization name from your SSO url. For eg if URL is https://abcd.com/cloud/org/test/saml/SingleLogout/alias/vcd, then orgnaization name is test.",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.singleLogoutUri",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    },
                    {
                        "name": "vcdHostname",
                        "displayLabel": "VCloud Director Hostname",
                        "type": "inputText",
                        "helpText": "Provide the Hostname from your SSO url. For eg if URL is https://abcd.com/cloud/org/test/saml/SingleLogout/alias/vcd, then hostname is abcd.com.",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.singleLogoutUri",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "documentLink": "n/a"
        },
        {
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "uri": "https://vena.io:443/auth/saml",
                        "index": 0,
                        "isDefault": true
                    }
                ],
                "entityId": "https://vena.io:443/auth/saml"
            },
            "ssoConfig": {
                "attributes": [
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "E-mail",
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "Name ID",
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "tmName": "sn",
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "tmName": "givenName",
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "tmName": "Email Address",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "issuer",
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "subjectType": "transient",
                "subjectValue": "%{session.ad.last.attr.mail}",
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "templateName": "vena.io",
            "templateLabel": "vena.io",
            "image": "img/appIcons/vena.jpg",
            "description": "Federation relationship with vena.io"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": true,
                        "multiValues": [
                            "%{session.logon.last.username}"
                        ],
                        "tmName": "username",
                        "multiValueTypes": [
                            "username"
                        ]
                    }
                ],
                "subjectValue": "%{session.logon.last.username}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$subDomain$.verint.com/saml/sp/profile/post/acs"
                    }
                ],
                "entityId": "https://$subDomain$.verint.com",
                "isAuthnRequestSigned": true,
                "singleLogoutUri": "https://$subDomain$.verint.com/saml/sp/profile/post/sls",
                "singleLogoutResponseUri": "https://$subDomain$.verint.com/saml/sp/profile/post/slr",
                "wantAssertionEncrypted": true,
                "wantAssertionSigned": false,
                "wantResponseSigned": true
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Provide the sub domain. For eg if the SSO URL is https://company.verint.com, the sub domain is company.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.entityId",
                            "spConnector.singleLogoutUri",
                            "spConnector.singleLogoutResponseUri"
                        ]
                    }
                ]
            },
            "templateName": "verint",
            "templateLabel": "Verint",
            "image": "img/appIcons/verint.jpg",
            "description": "Federation Relationship with Verint",
            "documentLink": ""
        },
        {
            "image": "img/appIcons/victorops.jpg",
            "description": "Federation relationship with VictorOps",
            "spConnector": {
                "entityId": "victorops.com",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://sso.victorops.com/sp/ACS.saml2"
                    }
                ],
                "relayState": "https://portal.victorops.com/auth/sso/$companyID$",
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false
            },
            "templateLabel": "VictorOps",
            "templateName": "VictorOps",
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.mail}",
                "attributes": [],
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectType": "entity",
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "companyID",
                        "displayLabel": "Company ID",
                        "helpText": "Provide the company ID from the portal URL. For eg - If portal URL is https://portal.victorops.com/auth/sso/testcompany, then company id is testcompany.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.relayState"
                        ]
                    }
                ]
            },
            "documentLink": "https://help.victorops.com/knowledge-base/single-sign-sso/"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "tmName": "email",
                        "multiValueTypes": [
                            "username"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.displayName}"
                        ],
                        "tmName": "displayName",
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "%{session.ad.last.attr.department}"
                        ],
                        "tmName": "department",
                        "multiValueTypes": [
                            "department"
                        ]
                    }
                ],
                "subjectValue": "%{session.ad.last.attr.sAMAccountName}",
                "subjectValueType": "lastname"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://api.vivi.io/api/v1/users/saml"
                    }
                ],
                "entityId": "https://api.vivi.io/api/v1/users/saml_metadata/$orgId$",
                "isAuthnRequestSigned": false,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "orgId",
                        "displayLabel": "Unique Organization ID",
                        "helpText": "Provide your unique organization ID. For eg - If Entity ID is https://api.vivi.io/api/v1/users/saml_metadata/abcd-1234, then abcd-1234 is the unique id.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateName": "Vivi",
            "templateLabel": "Vivi",
            "image": "img/appIcons/vivi.jpg",
            "description": "Federation relationship with Vivi",
            "documentLink": "https://www.vivi.io/system/resources/W1siZiIsIjIwMTYvMDkvMjAvN3Zmd3JvMHByc19WaXZpX1NBTUxfZm9yX0FkbWluaXN0cmF0b3JzLnBkZiJdXQ/Vivi%20SAML%20for%20Administrators.pdf"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "multiValues": [
                            "{session.ldap.last.attr.mail}"
                        ],
                        "tmName": "emailaddress",
                        "multiValueTypes": [
                            "username"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "{session.ldap.last.attr.givenName}"
                        ],
                        "tmName": "givenname",
                        "multiValueTypes": [
                            "username"
                        ]
                    },
                    {
                        "encrypt": false,
                        "multiValues": [
                            "{session.ldap.last.attr.sn}"
                        ],
                        "tmName": "surname",
                        "multiValueTypes": [
                            "username"
                        ]
                    }
                ],
                "subjectValue": "%{session.ldap.last.attr.mail}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "index": 1,
                        "isDefault": true,
                        "uri": "https://$subDomain$.voicestorm.com/User/SsoResponse"
                    }
                ],
                "entityId": "https://$subDomain$.voicestorm.com",
                "isAuthnRequestSigned": true,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sud Domain",
                        "helpText": "Specify sub domain. For example, if your ACS URL is https://acme.voicestorm.com/User/SsoResponse, then enter acme. This will be used to also setup Entity ID https://acme.voicestorm.com",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.entityId"
                        ]
                    }
                ]
            },
            "templateName": "voicestorm",
            "templateLabel": "voicestorm",
            "image": "img/appIcons/voicestorm.jpg",
            "description": "Federation relationship with Voicestorm"
        },
        {
            "spConnector": {
                "entityId": "WageWorks",
                "assertionConsumerServices": [{
                    "isDefault": true,
                    "index": 0,
                    "uri": "https://$subdomain$.wageworks.com/sp/ACS.saml2"
                }]
            },
            "ssoConfig": {
                "samlProfiles": ["web-browser-sso"],
                "subjectType": "unspecified",
                "attributes": [{
                    "multiValues": ["$ProgramSponsorID$"],
                    "tmName": "ProgramSponsorID",
                    "multiValueTypes": ["custom"]
                }],
                "subjectValue": "%{session.ad.last.attr.employeeID}",
                "subjectValueType": "username"
            },
            "templatePropertyMetadata": {
                "variables": [{
                    "name": "subdomain",
                    "displayLabel": "Sub Domain",
                    "helpText": "Enter your sub domain. For example, if you log into https://acme.wageworks.com/sp/ACS.saml2, enter: acme",
                    "type": "inputText",
                    "validator": [
                        {
                            "type": "regex-validator",
                            "pattern": "^[a-zA-Z0-9_.-]*$",
                            "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                        }
                    ],
                    "targetProperties": ["spConnector.assertionConsumerServices[0].uri"]
                }, {
                    "name": "ProgramSponsorID",
                    "displayLabel": "ProgramSponsorID",
                    "helpText": "Please, enter your ProgramSponsorID",
                    "type": "inputText",
                    "targetProperties": ["ssoConfig.attributes[0].multiValues[0]"]
                }]
            },
            "templateName": "WageWorks",
            "templateLabel": "WageWorks",
            "image": "img/appIcons/wageworks.jpg"
        },
        {
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.sAMAccountName}",
                "subjectType": "transient",
                "attributes": [
                    {
                        "tmName": "email",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "tmName": "lastname",
                        "multiValues": [
                            "%{session.ad.last.attr.sn}"
                        ],
                        "multiValueTypes": [
                            "lastname"
                        ]
                    },
                    {
                        "tmName": "firstname",
                        "multiValues": [
                            "%{session.ad.last.attr.givenName}"
                        ],
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "tmName": "username",
                        "multiValues": [
                            "%{session.ad.last.attr.sAMAccountName}"
                        ],
                        "multiValueTypes": [
                            "username"
                        ]
                    }
                ],
                "subjectValueType": "username"
            },
            "spConnector": {
                "singleLogoutUri": "https://$subDomain$.webdamdb.com/simplesaml/module.php/saml/sp/saml2-logout.php",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$subDomain$.webdamdb.com/saml.php"
                    }
                ],
                "entityId": "https://$subDomain$.webdamdb.com/saml.php"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "From your SSO URL like https://company.webdamdb.com/saml.php, the sub domain is company.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.singleLogoutUri"
                        ]
                    }
                ]
            },
            "templateName": "WebDam",
            "templateLabel": "WebDam",
            "image": "img/appIcons/webdam.jpg",
            "description": "Federation relationship with Webdam",
            "documentLink": "https://www.damsuccess.com/hc/en-us/articles/204964385-Setting-up-SAML-with-Webdam"
        },
        {
            "templateName": "webex",
            "templateLabel": "WebEx",
            "description": "SaaS Application for WebEx",
            "image": "img/appIcons/webex.jpg",
            "appHelp": "",
            "ssoConfig": {
                "subjectType": "unspecified",
                "subjectValueType": "mail",
                "subjectValue": "%session.ad.last.attr.mail",
                "samlProfiles": [
                    "web-browser-sso"
                ]
            },
            "spConnector": {
                "entityId": "https://www.webex.com",
                "encryptionType": "aes128",
                "isAuthnRequestSigned": false,
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false,
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$domainSpecificId$.webex.com/dispatcher/SAML2AuthService?siteurl=$domainSpecificId$"
                    }
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "domainSpecificId",
                        "displayLabel": "Domain Specific Id",
                        "helpText": "Provide your domain specific id from the SSO URL. For eg - If the SSO URL is https://testid.webex.com/dispatcher/SAML2AuthService?siteurl=testid, then testid is the domain specific id.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            }
        },
        {
            "ssoConfig": {
                "subjectType": "email-address",
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectValueType": "mail"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 1,
                        "isDefault": true,
                        "uri": "https://sso.wombatsecurity.com/Shibboleth.sso/SAML2/POST"
                    }
                ],
                "encryptionType": "aes128",
                "entityId": "https://sso.wombatsecurity.com/shibboleth",
                "isAuthnRequestSigned": false,
                "signatureType": "rsa-sha1",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": false,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "templateType": "sp",
            "templateName": "wombat",
            "templateLabel": "wombat",
            "image": "img/appIcons/wombat.jpg",
            "description": "Federation relationship with wombat security service"
        },
        {
            "templateName": "workday",
            "templateLabel": "Workday",
            "description": "SaaS Application for Workday",
            "image": "img/appIcons/workday.jpg",
            "appHelp": "Please configure Active Directory query in Authentication step and select sAMAccountName query attribute.",
            "ssoConfig": {
                "subjectType": "entity",
                "subjectValueType": "username",
                "subjectValue": "%{session.ad.last.attr.sAMAccountName}",
                "samlProfiles": [
                    "web-browser-sso"
                ]
            },
            "spConnector": {
                "entityId": "http://www.workday.com",
                "encryptionType": "aes128",
                "isAuthnRequestSigned": false,
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false,
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$domainName$/$tenantName$/login-saml.htmld"
                    }
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "domainName",
                        "displayLabel": "Domain Name",
                        "type": "inputText",
                        "helpText": "Provide the domain name where workday is hosted.",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ) or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    },
                    {
                        "name": "tenantName",
                        "displayLabel": "Tenant Name",
                        "helpText": "Provide your tenant name from the ACS URL. For eg - If the URL is https://company.workday.com/test/login-saml.htmld, then test is the tenant name.",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            }
        },
        {
            "spConnector": {
                "entityId": "https://$companyID$.attask-ondemand.com/SAML2",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$companyID$.attask-ondemand.com/attask/saml2consumer.cmd"
                    },
                    {
                        "binding": "http-post",
                        "index": 1,
                        "isDefault": false,
                        "uri": "https://$companyID$.my.workfront.com/attask/saml2consumer.cmd"
                    }
                ],
                "signatureType": "rsa-sha1",
                "isAuthnRequestSigned": true,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": true
            },
            "templateLabel": "Workfront",
            "templateName": "Workfront",
            "description": "Federation relationship with Workfront",
            "image": "img/appIcons/workfront.jpg",
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectType": "unspecified",
                "subjectValueType": "mail",
                "attributes": [],
                "samlProfiles": [
                    "web-browser-sso"
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "companyID",
                        "displayLabel": "Company ID",
                        "type": "inputText",
                        "helpText": "Provide the company ID. For eg - If the SSO URL is https://testcompany.attask-ondemand.com/attask/saml2consumer.cmd, then company Id is testcompany.",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ) or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri",
                            "spConnector.assertionConsumerServices[1].uri"
                        ]
                    }
                ]
            },
            "documentLink": "https://support.workfront.com/hc/en-us/articles/115005968147-SSO-SAML-URL-Changes"
        },
        {
            "image": "img/appIcons/Workiva.jpg",
            "description": "Federation relationship with Workiva",
            "spConnector": {
                "entityId": "https://webfilings.appspot.com/auth/saml/sp/metadata/$workivaId$/",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://webfilings.appspot.com/auth/saml/sp/consumer/$workivaId$/"
                    }
                ],
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false
            },
            "templateLabel": "Workiva",
            "templateName": "Workiva",
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.mail}",
                "attributes": [],
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectType": "unspecified",
                "subjectValueType": "mail"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "workivaId",
                        "displayLabel": "Unique ID",
                        "type": "inputText",
                        "helpText": "Provide the workiva unique id from the SSO URL. For eg - If SSO URL is https://webfilings.appspot.com/auth/saml/sp/metadata/abcd1234, then abcd1234 is the workiva id.",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "documentLink": "https://success.workiva.com/help/admin/configuring-provisioning-for-wdesk"
        },
        {
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "isDefault": true,
                        "index": 0,
                        "uri": "https://app.workloud.com:443/$customerId$/Interop/Current/samlsso/AssertionConsumerHttpHandler.ashx"
                    }
                ],
                "singleLogoutUri": "https://app.workloud.com:443/$customerId$/Interop/Current/samlsso/SingleLogoutService.ashx",
                "singleLogoutResponseUri": "https://app.workloud.com:443/$customerId$/Interop/Current/samlsso/SingleLogoutService.ashx"
            },
            "ssoConfig": {
                "subjectValue": "%{session.ldap.last.attr.extensionAttribute6}",
                "attributes": [
                    {
                        "multiValues": [
                            "$organizationID$"
                        ],
                        "tmName": "Organization_ID",
                        "multiValueTypes": [
                            "custom"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ldap.last.attr.sn}"
                        ],
                        "tmName": "LastName",
                        "multiValueTypes": [
                            "username"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ldap.last.attr.mail}"
                        ],
                        "tmName": "EMAIL",
                        "multiValueTypes": [
                            "mail"
                        ]
                    },
                    {
                        "multiValues": [
                            "%{session.ldap.last.attr.extensionAttribute6}"
                        ],
                        "tmName": "NameID",
                        "multiValueTypes": [
                            "username"
                        ]
                    }
                ],
                "subjectType": "unspecified",
                "samlProfiles": [
                    "web-browser-sso"
                ],
                "subjectValueType": "username"
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name" : "isSandBoxDeployment",
                        "displayLabel" : "Is workloud deployed in sandbox environment?",
                        "helpText": "Select your applicable deployment environment.",
                        "type" : "radio",
                        "values" : {
                            "true" : {
                                "value" : "true",
                                "displayValue" : "Yes",
                                "targetProperties" : [
                                    {
                                        "name" : "spConnector.entityId",
                                        "value" : "https://sandbox.workloud.com/$customerId$/interop/current/samlsso/metadata.ashx?dmn=$customerId$"
                                    },
                                    {
                                        "name" : "spConnector.assertionConsumerServices[0].uri",
                                        "value" : "https://sandbox.workloud.com:443/$customerId$/interop/current/samlsso/AssertionConsumerHttpHandler.ashx"
                                    },
                                    {
                                        "name" : "spConnector.singleLogoutResponseUri",
                                        "value" : "https://sandbox.workloud.com:443/$customerId$/interop/current/samlsso/SingleLogoutService.ashx"
                                    },
                                    {
                                        "name" : "spConnector.singleLogoutUri",
                                        "value" : "https://sandbox.workloud.com:443/$customerId$/interop/current/samlsso/SingleLogoutService.ashx"
                                    }
                                ]
                            },
                            "false" : {
                                "value" : "false",
                                "displayValue" : "No",
                                "targetProperties" : [
                                    {
                                        "name" : "spConnector.entityId",
                                        "value" : "https://app.workloud.com/$customerId$/samlsso/metadata.ashx?dmn=$customerId$"
                                    },
                                    {
                                        "name" : "spConnector.assertionConsumerServices[0].uri",
                                        "value" : "https://app.workloud.com:443/$customerId$/samlsso/AssertionConsumerHttpHandler.ashx"
                                    },
                                    {
                                        "name" : "spConnector.singleLogoutResponseUri",
                                        "value" : "https://app.workloud.com:443/$customerId$/samlsso/SingleLogoutService.ashx"
                                    },
                                    {
                                        "name" : "spConnector.singleLogoutUri",
                                        "value" : "https://app.workloud.com:443/$customerId$/samlsso/SingleLogoutService.ashx"
                                    }

                                ]
                            }
                        },
                        "relatedVariable" : [
                            "customerId"
                        ]
                    },
                    {
                        "name": "customerId",
                        "displayLabel": "Customer ID",
                        "helpText": "Specify customer ID which is used in entity ID and ACS URIs",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ), or hyphen ( - )."
                            }
                        ],
                        "type": "inputText"
                    },
                    {
                        "name": "organizationID",
                        "displayLabel": "Oraganization ID",
                        "helpText": "Specify organization ID which is sent to workloud service in SAML attribute Organization_ID",
                        "type": "inputText",
                        "targetProperties": [
                            "ssoConfig.attributes[0].multiValues[0]"
                        ]
                    }
                ]
            },
            "templateName": "workloud",
            "templateLabel": "workloud",
            "image": "img/appIcons/workloud.jpg",
            "description": "Federation relationship with workloud",
            "documentLink": "https://support.workloud.com/hc/en-us/articles/115002328283-Workloud-Setup-for-Single-Sign-On-with-SAML-2-0"
        },
        {
            "image": "img/appIcons/wrike.jpg",
            "description": "Federation relationship with Wrike",
            "spConnector": {
                "entityId": "https://www.wrike.com",
                "assertionConsumerServices": [
                    {
                        "binding": "http-artifact",
                        "index": 0,
                        "isDefault": false,
                        "uri": "https://www.wrike.com/saml/SSO"
                    },
                    {
                        "binding": "http-post",
                        "index": 1,
                        "isDefault": true,
                        "uri": "https://www.wrike.com/saml/SSO"
                    }
                ],
                "singleLogoutUri": "https://www.wrike.com/saml/SingleLogout",
                "singleLogoutResponseUri": "https://www.wrike.com/saml/SingleLogout",
                "isAuthnRequestSigned": true,
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false
            },
            "templateLabel": "Wrike",
            "templateName": "Wrike",
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectType": "unspecified",
                "subjectValueType": "mail",
                "attributes": [
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "tmName": "fullName",
                        "multiValues": [
                            "%{session.ad.last.attr.displayName}"
                        ],
                        "multiValueTypes": [
                            "firstname"
                        ]
                    },
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "tmName": "emailAddress",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "samlProfiles": [
                    "web-browser-sso"
                ]
            },
            "templatePropertyMetadata": {
                "variables": []
            },
            "documentLink": "https://help.wrike.com/hc/en-us/articles/209605769-SSO-with-SAML-Implementation-Guide"
        },
        {
            "ssoConfig": {
                "attributes": [
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "nameFormat": "unspecified",
                        "tmName": "nameid",
                        "multiValues" : ["%{session.ad.last.attr.UserPrincipalName}"],
                        "multiValueTypes" : ["username"]
                    }
                ],
                "subjectType": "persistent",
                "subjectValue": "%{session.ad.last.attr.userPrincipalName}",
                "subjectValueType": "username"
            },
            "spConnector": {
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$subDomain$.xmatters.com/sp/SSO.saml2"
                    }
                ],
                "encryptionType": "aes128",
                "entityId": "https://$subDomain$.xmatters.com",
                "isAuthnRequestSigned": false,
                "signatureType": "rsa-sha1",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "helpText": "Sub domain is used in Entity ID. If the entity ID is https://acme.xmatters.com, then acme is the sub domain",
                        "type": "inputText",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ) or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "templateType": "sp",
            "templateName": "xmatters",
            "templateLabel": "xmatters",
            "image": "img/appIcons/xmatters.jpg",
            "description": "Federation relationship with xmatters",
            "documentLink": "https://help.xmatters.com/OnDemand/installadmin/systemconfiguration/saml_idp_settings.htm#SAMLSettings"
        },
        {
            "templateName": "zendesk",
            "templateLabel": "Zendesk",
            "description": "Zendesk SaaS Application",
            "image": "img/appIcons/zendesk.jpg",
            "appHelp": "",
            "ssoConfig": {
                "subjectType": "email-address",
                "subjectValueType": "mail",
                "subjectValue": "%session.ad.last.attr.mail",
                "samlProfiles": [
                    "web-browser-sso"
                ]
            },
            "spConnector": {
                "entityId": "https://$domainName$.zendesk.com",
                "encryptionType": "aes128",
                "isAuthnRequestSigned": false,
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false,
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$domainName$.zendesk.com/access/saml"
                    }
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "domainName",
                        "displayLabel": "Sub Domain",
                        "type": "inputText",
                        "helpText": "Provide your sub domain from the SSO URL. For eg- If SSO URL is https://company.zendesk.com/access/saml, then the sub domain is company. ",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ) or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            }
        },
        {
            "image": "img/appIcons/zoom.jpg",
            "description": "Federation relationship with zoom.us",
            "templateLabel": "Zoom",
            "templateName": "Zoom",
            "spConnector": {
                "entityId": "https://$subDomain$.zoom.us",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://$subDomain$.zoom.us/saml/SSO"
                    }
                ],
                "isAuthnRequestSigned": true,
                "singleLogoutUri": "https://$subDomain$.zoom.us/saml/logout",
                "singleLogoutResponseUri": "https://$subDomain$.zoom.us/saml/logout",
                "wantAssertionSigned": false
            },
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectType": "unspecified",
                "subjectValueType": "mail",
                "attributes": [
                    {
                        "encrypt": false,
                        "encryptionType": "aes128",
                        "tmName": "emailAddress",
                        "multiValues": [
                            "%{session.ad.last.attr.mail}"
                        ],
                        "multiValueTypes": [
                            "mail"
                        ]
                    }
                ],
                "samlProfiles": [
                    "web-browser-sso"
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "subDomain",
                        "displayLabel": "Sub Domain",
                        "type": "inputText",
                        "helpText": "Provide your sub domain from your ZOOM URL. For eg - If URL is https://testcompany.zoom.us, then sub domain is testcompany.",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ) or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.singleLogoutUri",
                            "spConnector.singleLogoutResponseUri",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "documentLink": "https://support.zoom.us/hc/en-us/articles/201363003-Getting-Started-with-SSO"
        },
        {
            "spConnector": {
                "entityId": "admin.$cloudDomainName$",
                "assertionConsumerServices": [
                    {
                        "binding": "http-post",
                        "index": 0,
                        "isDefault": true,
                        "uri": "https://admin.$cloudDomainName$/adminsso.do"
                    }
                ],
                "signatureType": "rsa-sha1",
                "singleLogoutBinding": "http-post",
                "isAuthnRequestSigned": true,
                "wantAssertionEncrypted": false,
                "wantAssertionSigned": true,
                "wantResponseSigned": false
            },
            "templateLabel": "Zscaler",
            "templateName": "Zscaler",
            "description": "Federation relationship with Zscaler",
            "image": "img/appIcons/zscaler.jpg",
            "ssoConfig": {
                "subjectValue": "%{session.ad.last.attr.mail}",
                "subjectType": "unspecified",
                "subjectValueType": "mail",
                "attributes": [
                    {
                        "encrypt": false,
                        "encryptionType": "aes256",
                        "tmName": "department",
                        "multiValues": [
                            "%{session.ad.last.attr.department}"
                        ],
                        "multiValueTypes": [
                            "department"
                        ],
                        "nameFormat": "unspecified"
                    },
                    {
                        "encrypt": false,
                        "encryptionType": "aes256",
                        "tmName": "displayName",
                        "multiValues": [
                            "%{session.ad.last.attr.displayName}"
                        ],
                        "multiValueTypes": [
                            "firstname"
                        ],
                        "nameFormat": "unspecified"
                    },
                    {
                        "encrypt": false,
                        "encryptionType": "aes256",
                        "tmName": "memberOf",
                        "multiValues": [
                            "%{session.ad.last.attr.memberOf}"
                        ],
                        "multiValueTypes": [
                            "department"
                        ],
                        "nameFormat": "unspecified"
                    }
                ],
                "samlProfiles": [
                    "web-browser-sso"
                ]
            },
            "templatePropertyMetadata": {
                "variables": [
                    {
                        "name": "cloudDomainName",
                        "displayLabel": "Zscaler Cloud Domain Name",
                        "type": "inputText",
                        "helpText": "Provide the Zscaler cloud name from the SSO URL. For eg - If URL is https://admin.zscloud.net/adminsso.do, then the domain name is zscloud.net only.",
                        "validator": [
                            {
                                "type": "regex-validator",
                                "pattern": "^[a-zA-Z0-9_.-]*$",
                                "message": "Allowed characters are (a-z, A-Z), numbers (0-9), underscore ( _ ), period ( . ) or hyphen ( - )."
                            }
                        ],
                        "targetProperties": [
                            "spConnector.entityId",
                            "spConnector.assertionConsumerServices[0].uri"
                        ]
                    }
                ]
            },
            "documentLink": "https://help.zscaler.com/zia/about-saml-single-sign-admins"
        }
]
